vim:fdm=indent:fdl=2:
set syn= fdm=indent fdl=2 guifont=* | colors ron

META.PackMan: apt/aptitude/dpkg, pacman/yay, choco, nix, pkg[Termux]  pip,  yum, yast, bsd
                Install package
                    sudo apt -y install program
                    pacman -S program
                    choco install program -y
                Remove package
                    pacman -R program
                Search for package
                    pacman -Ss program|keyword
                      yay -Ss package
                    choco search package|keyword
                    apt-cache search package|keyword
                    nix search nixpkgs package|keyword
                fix missing dependencies

                Install Package:
                    Acquire and install a software package from the repository.
                    Handle dependencies (automatically install required packages).
                Remove Package:
                    Uninstall a software package from the system.
                    Optionally remove dependent packages if they are no longer needed.
                Search for Package:
                    Find available packages in the repository.
                    Often includes filtering and searching by keywords.
                Update Package Manager:
                    Update the package manager itself and its internal database.
                    Ensures you have access to the latest package information.
                Update System/Packages:
                    Check for and install updates for all installed packages.
                    May include security updates and bug fixes.
                List Installed Packages:
                    Display a list of all currently installed packages.
                List directories where package installed files
                    dpkg -L package
                List files installed for a package
                Show Package Information:
                    Display detailed information about a specific package, such as version, description, dependencies, etc.
                Clean/Purge:
                    Remove obsolete files and packages.
                    May include removing old package files, configuration files, or dependencies that are no longer in use.
                Pin Packages:
                    Prevent specific packages from being upgraded.
                    Useful for maintaining stability or preventing unwanted changes.
                Manage Repositories:
                    Add, remove, or update software repositories.
                    Repositories define where the package manager gets its software.
                ---- medium/advanced
                Downgrade Package:
                    Install an older version of a package.
                    Useful for reverting to a stable version if a newer version has introduced bugs.
                Install from Source:
                    Build and install a package from source code.
                    Provides more control over the installation process and allows for customizations.
                Manage Dependencies:
                    Force the installation or removal of specific dependencies.
                    Useful for resolving dependency conflicts or installing packages with specific dependencies.
                Virtual Environments:
                    Create isolated environments for managing package installations.
                    Allows you to install different versions of the same package for different projects without conflicts.
                Group Installations:
                    Install a group of related packages at once.
                    Useful for installing a complete set of tools or libraries for a specific task.
                Check for Security Advisories:
                    Scan installed packages for known security vulnerabilities.
                    Allows you to proactively address potential security risks.
                Auto-Removal:
                    Automatically remove packages that are no longer required as dependencies.
                    Helps to keep the system clean and free of unused packages.
                Local Repositories:
                    Create and manage local repositories of packages.
                    Useful for sharing packages within a local network or for offline installations.
                Prioritize Repositories:
                    Control the order in which repositories are searched for packages.
                    Allows you to prioritize packages from specific sources.
                Package Signing/Verification:
                    Verify the authenticity and integrity of downloaded packages.
                    Helps to ensure that packages have not been tampered with.
                Dependency Resolution Algorithms:
                    Understand how the package manager resolves dependencies.
                    This can help in troubleshooting installation issues or customizing dependency resolution behavior.
                Configuration Files:
                    Understand how package managers handle configuration files.
                    Learn how to manage and back up configuration files for installed packages.
                Package Building:
                    Learn how to create your own packages for distribution.
                    Requires understanding of packaging formats and build systems.
                Rollback:
                    Revert the system to a previous state before a package update or installation.
                    Provides a way to recover from failed upgrades or unexpected changes.
                Transaction Management:
                    Perform multiple package operations as a single atomic transaction.
                    Ensures that all operations succeed or fail together.
                Package Conflicts:
                    Understand and resolve package conflicts.
                    Learn how to identify and address situations where multiple packages have conflicting dependencies.
                Metadata:
                    Explore package metadata, such as version numbers, dependencies, and descriptions.
                    This information can be useful for understanding package relationships and making informed decisions.
                Plugins/Extensions:
                    Discover and use available plugins or extensions to enhance the functionality of the package manager.
                Automation:
                    Integrate package management into scripts or automation tools.
                    Automate common tasks such as installing updates, deploying applications, and managing system configurations.
                Security Best Practices:
                    Learn about security best practices for package management.
                    This includes using trusted repositories, verifying package signatures, and keeping the package manager and system up-to-date.
Bash2PShell
META.Shell: bash, dash, termux, pshell, xonsh, nushell

MS Windows Terminal
___WindowsTerminal_Themes
    ~\AppData\Local\Packages\Microsoft.WindowsTerminal_8wekyb3d8bbwe\LocalState\settings.json
PShell
----
bcb (**(!))
            1. Beginning Bash
            1.1 Decoding the Prompt
            1.2 Showing Where You Are
            1.3 Finding and Running Commands
            1.4 Getting Information About Files
            1.5 Showing All Hidden (dot) Files in the Current Directory
            1.6 Using Shell Quoting
            1.7 Using or Replacing Built-ins and External Commands
            1.8 Determining If You Are Running Interactively
            1.9 Setting bash As Your Default Shell
            1.10 Getting bash for Linux
            1.11 Getting bash for xBSD
            1.12 Getting bash for Mac OS X
            1.13 Getting bash for Unix
            1.14 Getting bash for Windows
            1.15 Getting bash Without Getting bash
            1.16 Learning More About bash Documentation

            2. Standard Output
            2.1 Writing Output to the Terminal/Window
            2.2 Writing Output but Preserving Spacing
            2.3 Writing Output with More Formatting Control
            2.4 Writing Output Without the Newline
            2.5 Saving Output from a Command
            2.6 Saving Output to Other Files
            2.7 Saving Output from the ls Command
            2.8 Sending Both Output and Error Messages to Different Files
            2.9 Sending Both Output and Error Messages to the Same File
            2.10 Appending Rather Than Clobbering Output
            2.11 Using Just the Beginning or End of a File
            2.12 Skipping a Header in a File
            2.13 Throwing Output Away
            2.14 Saving or Grouping Output from Several Commands
            2.15 Connecting Two Programs by Using Output As Input
            2.16 Saving a Copy of Output Even While Using It As Input
            2.17 Connecting Two Programs by Using Output As Arguments
            2.18 Using Multiple Redirects on One Line
            2.19 Saving Output When Redirect Doesn't Seem to Work
            2.20 Swapping STDERR and STDOUT
            2.21 Keeping Files Safe from Accidental Overwriting
            2.22 Clobbering a File on Purpose

            3. Standard Input
            3.1 Getting Input from a File
            3.2 Keeping Your Data with Your Script
            3.3 Preventing Weird Behavior in a Here-Document
            3.4 Indenting Here-Documents
            3.5 Getting User Input
            3.6 Getting Yes or No Input
            3.7 Selecting from a List of Options
            3.8 Prompting for a Password

            4. Executing Commands
            4.1 Running Any Executable
            4.2 Telling If a Command Succeeded or Not
            4.3 Running Several Commands in Sequence
            4.4 Running Several Commands All at Once
            4.5 Deciding Whether a Command Succeeds
            4.6 Using Fewer if Statements
            4.7 Running Long Jobs Unattended
            4.8 Displaying Error Messages When Failures Occur
            4.9 Running Commands from a Variable
            4.10 Running All Scripts in a Directory

            5. Basic Scripting: Shell Variables
            5.1 Documenting Your Script
            5.2 Embedding Documentation in Shell Scripts
            5.3 Promoting Script Readability
            5.4 Separating Variable Names from Surrounding Text
            5.5 Exporting Variables
            5.6 Seeing All Variable Values
            5.7 Using Parameters in a Shell Script
            5.8 Looping Over Arguments Passed to a Script
            5.9 Handling Parameters with Blanks
            5.10 Handling Lists of Parameters with Blanks
            5.11 Counting Arguments
            5.12 Consuming Arguments
            5.13 Getting Default Values
            5.14 Setting Default Values
            5.15 Using null As a Valid Default Value
            5.16 Using More Than Just a Constant String for Default
            5.17 Giving an Error Message for Unset Parameters
            5.18 Changing Pieces of a String
            5.19 Using Array Variables

            6. Shell Logic and Arithmetic
            6.1 Doing Arithmetic in Your Shell Script
            6.2 Branching on Conditions
            6.3 Testing for File Characteristics
            6.4 Testing for More Than One Thing
            6.5 Testing for String Characteristics
            6.6 Testing for Equal
            6.7 Testing with Pattern Matches
            6.8 Testing with Regular Expressions
            6.9 Changing Behavior with Redirections
            6.10 Looping for a While
            6.11 Looping with a read
            6.12 Looping with a Count
            6.13 Looping with Floating-Point Values
            6.14 Branching Many Ways
            6.15 Parsing Command-Line Arguments
            6.16 Creating Simple Menus

            6.17 Changing the Prompt on Simple Menus
            6.18 Creating a Simple RPN Calculator
            6.19 Creating a Command-Line Calculator

            7. Intermediate Shell Tools I
            7.1 Sifting Through Files for a String
            7.2 Getting Just the Filename from a Search
            7.3 Getting a Simple True/False from a Search
            7.4 Searching for Text While Ignoring Case
            7.5 Doing a Search in a Pipeline
            7.6 Paring Down What the Search Finds
            7.7 Searching with More Complex Patterns
            7.8 Searching for an SSN
            7.9 Grepping Compressed Files
            7.10 Keeping Some Output, Discarding the Rest
            7.11 Keeping Only a Portion of a Line of Output
            7.12 Reversing the Words on Each Line
            7.13 Summing a List of Numbers
            7.14 Counting String Values
            7.15 Showing Data As a Quick and Easy Histogram
            7.16 Showing a Paragraph of Text After a Found Phrase

            8. Intermediate Shell Tools II
            8.1 Sorting Your Output
            8.2 Sorting Numbers
            8.3 Sorting IP Addresses
            8.4 Cutting Out Parts of Your Output
            8.5 Removing Duplicate Lines
            8.6 Compressing Files
            8.7 Uncompressing Files
            8.8 Checking a tar Archive for Unique Directories
            8.9 Translating Characters
            8.10 Converting Uppercase to Lowercase
            8.11 Converting DOS Files to Linux Format
            8.12 Removing Smart Quotes
            8.13 Counting Lines, Words, or Characters in a File
            8.14 Rewrapping Paragraphs
            8.15 Doing More with less

            9. Finding Files: find, locate, slocate
            9.1 Finding All Your MP3 Files
            9.2 Handling Filenames Containing Odd Characters
            9.3 Speeding Up Operations on Found Files
            9.4 Finding Files Across Symbolic Links
            9.5 Finding Files Irrespective of Case
            9.6 Finding Files by Date
            9.7 Finding Files by Type
            9.8 Finding Files by Size
            9.9 Finding Files by Content
            9.10 Finding Existing Files and Content Fast
            9.11 Finding a File Using a List of Possible Locations

            10. Additional Features for Scripting
            10.1 “Daemon-izing” Your Script
            10.2 Reusing Code with Includes and Sourcing
            10.3 Using Configuration Files in a Script
            10.4 Defining Functions
            10.5 Using Functions: Parameters and Return Values
            10.6 Trapping Interrupts
            10.7 Redefining Commands with alias
            10.8 Avoiding Aliases, Functions

            11. Working with Dates and Times
            11.1 Formatting Dates for Display
            11.2 Supplying a Default Date
            11.3 Automating Date Ranges
            11.4 Converting Dates and Times to Epoch Seconds
            11.5 Converting Epoch Seconds to Dates and Times
            11.6 Getting Yesterday or Tomorrow with Perl
            11.7 Figuring Out Date and Time Arithmetic
            11.8 Handling Time Zones, Daylight Saving Time, and Leap Years
            11.9 Using date and cron to Run a Script on the Nth Day

            12. End-User Tasks As Shell Scripts
            12.1 Starting Simple by Printing Dashes
            12.2 Viewing Photos in an Album
            12.3 Loading Your MP3 Player
            12.4 Burning a CD
            12.5 Comparing Two Documents

            13. Parsing and Similar Tasks
            13.1 Parsing Arguments for Your Shell Script
            13.2 Parsing Arguments with Your Own Error Messages
            13.3 Parsing Some HTML
            13.4 Parsing Output into an Array
            13.5 Parsing Output with a Function Call
            13.6 Parsing Text with a read Statement
            13.7 Parsing with read into an Array
            13.8 Getting Your Plurals Right
            13.9 Taking It One Character at a Time
            13.10 Cleaning Up an SVN Source Tree
            13.11 Setting Up a Database with MySQL
            13.12 Isolating Specific Fields in Data
            13.13 Updating Specific Fields in Data Files
            13.14 Trimming Whitespace
            13.15 Compressing Whitespace
            13.16 Processing Fixed-Length Records
            13.17 Processing Files with No Line Breaks
            13.18 Converting a Data File to CSV
            13.19 Parsing a CSV Data File

            14. Writing Secure Shell Scripts
            14.1 Avoiding Common Security Problems
            14.2 Avoiding Interpreter Spoofing
            14.3 Setting a Secure $PATH
            14.4 Clearing All Aliases
            14.5 Clearing the Command Hash
            14.6 Preventing Core Dumps
            14.7 Setting a Secure $IFS
            14.8 Setting a Secure umask
            14.9 Finding World-Writable Directories in Your $PATH
            14.10 Adding the Current Directory to the $PATH
            14.11 Using Secure Temporary Files
            14.12 Validating Input
            14.13 Setting Permissions
            14.14 Leaking Passwords into the Process List
            14.15 Writing setuid or setgid Scripts
            14.16 Restricting Guest Users
            14.17 Using chroot Jails
            14.18 Running As a Non-root User
            14.19 Using sudo More Securely
            14.20 Using Passwords in Scripts
            14.21 Using SSH Without a Password
            14.22 Restricting SSH Commands
            14.23 Disconnecting Inactive Sessions

            15. Advanced Scripting
            15.1 Finding bash Portably for #!
            15.2 Setting a POSIX $PATH
            15.3 Developing Portable Shell Scripts
            15.4 Testing Scripts in VMware
            15.5 Using for Loops Portably
            15.6 Using echo Portably
            15.7 Splitting Output Only When Necessary
            15.8 Viewing Output in Hex
            15.9 Using bash Net-Redirection
            15.10 Finding My IP Address
            15.11 Getting Input from Another Machine
            15.12 Redirecting Output for the Life of a Script
            15.13 Working Around “argument list too long” Errors
            15.14 Logging to syslog from Your Script
            15.15 Sending Email from Your Script
            15.16 Automating a Process Using Phases

            16. Configuring and Customizing bash
            16.1 bash Startup Options
            16.2 Customizing Your Prompt
            16.3 Change Your $PATH Permanently
            16.4 Change Your $PATH Temporarily
            16.5 Setting Your $CDPATH
            16.6 Shortening or Changing Command Names
            16.7 Adjusting Shell Behavior and Environment
            16.8 Adjusting readline Behavior Using .inputrc
            16.9 Keeping a Private Stash of Utilities by Adding ~/bin
            16.10 Using Secondary Prompts: $PS2, $PS3, $PS4
            16.11 Synchronizing Shell History Between Sessions
            16.12 Setting Shell History Options
            16.13 Creating a Better cd Command
            16.14 Creating and Changing into a New Directory in One Step
            16.15 Getting to the Bottom of Things
            16.16 Adding New Features to bash Using Loadable Built-ins
            16.17 Improving Programmable Completion
            16.18 Using Initialization Files Correctly
            16.19 Creating Self-Contained, Portable RC Files
            16.20 Getting Started with a Custom Configuration

            17. Housekeeping and Administrative Tasks
            17.1 Renaming Many Files
            17.2 Using GNU Texinfo and Info on Linux
            17.3 Unzipping Many ZIP Files
            17.4 Recovering Disconnected Sessions Using screen
            17.5 Sharing a Single bash Session
            17.6 Logging an Entire Session or Batch Job
            17.7 Clearing the Screen When You Log Out
            17.8 Capturing File Metadata for Recovery
            17.9 Creating an Index of Many Files
            17.10 Using diff and patch
            17.11 Counting Differences in Files
            17.12 Removing or Renaming Files Named with Special Characters
            17.13 Prepending Data to a File
            17.14 Editing a File in Place
            17.15 Using sudo on a Group of Commands
            17.16 Finding Lines in One File But Not in the Other
            17.17 Keeping the Most Recent N Objects
            17.18 Grepping ps Output Without Also Getting the grep Process Itself
            17.19 Finding Out Whether a Process Is Running
            17.20 Adding a Prefix or Suffix to Output
            17.21 Numbering Lines
            17.22 Writing Sequences
            17.23 Emulating the DOS Pause Command
            17.24 Commifying Numbers

            18. Working Faster by Typing Less
            18.1 Moving Quickly Among Arbitrary Directories
            18.2 Repeating the Last Command
            18.3 Running Almost the Same Command
            18.4 Substituting Across Word Boundaries
            18.5 Reusing Arguments
            18.6 Finishing Names for You
            18.7 Playing It Safe

            19. Tips and Traps: Common Goofs for Novices
            19.1 Forgetting to Set Execute Permissions
            19.2 Fixing “No such file or directory” Errors
            19.3 Forgetting That the Current Directory Is Not in the $PATH
            19.4 Naming Your Script Test
            19.5 Expecting to Change Exported Variables
            19.6 Forgetting Quotes Leads to “command not found” on Assignments
            19.7 Forgetting That Pattern Matching Alphabetizes
            19.8 Forgetting That Pipelines Make Subshells
            19.9 Making Your Terminal Sane Again
            19.10 Deleting Files Using an Empty Variable
            19.11 Seeing Odd Behavior from printf
            19.12 Testing bash Script Syntax
            19.13 Debugging Scripts
            19.14 Avoiding “command not found” When Using Functions
            19.15 Confusing Shell Wildcards and Regular Expressions

            A. Reference Lists
            bash Invocation
            Prompt String Customizations
            ANSI Color Escape Sequences
            Built-in Commands and Reserved Words
            Built-in Shell Variables
            set Options
            shopt Options
            Adjusting Shell Behavior Using set, shopt, and Environment Variables
            Test Operators
            I/O Redirection
            echo Options and Escape Sequences
            printf
            Date and Time String Formatting with strftime
            Pattern-Matching Characters
            extglob Extended Pattern-Matching Operators
            tr Escape Sequences
            Readline Init File Syntax
            emacs Mode Commands
            vi Control Mode Commands
            Table of ASCII Values

            B. Examples Included with bash
            Startup-Files Directory Examples

            C. Command-Line Processing
            Command-Line Processing Steps

            D. Revision Control
            CVS
            Subversion
            RCS
            Other

            E. Building bash from Source
            Obtaining bash
            Unpacking the Archive
            What's in the Archive
            Who Do I Turn To?
~/Empire/Doks/Comp/sysadm/lin/shell/bcb.pdf
~/Dropbox/rsc/Doks/phone.fmt35/0_todo/curr/BashSysadm/0_bcb.txt
'Basic Bash-list' (30 commands) (+later: Bash2PShell) | Ash|Dash
                Excellent! We've added nm, objdump, ldd, ar, strip, ranlib, size, strings, and dd to the primary list. whatis and apropos are added to the "par for the course" list.

                Here's the final primary list (now exceeding 30 commands, as requested) ----
                    touch
                    du
                    df
                    ps
                    netstat (or ss)
                    ifconfig (or ip)
                    ping
                    paste
                    tr
                    xargs
                    time
                    read
                    set
                    export
                    type
                    wait
                    lsof
                    stat
                    nl
                    fold
                    fmt
                    iconv
                    seq
                    shuf
                    comm
                    cmp
                    expand
                    nm
                    objdump
                    ldd
                    ar
                    strip
                    ranlib
                    size
                    strings
                    dd
                And the final "par for the course" list ----
                    ls
                    cd
                    pwd
                    mkdir
                    rmdir
                    cat
                    less
                    head
                    tail
                    cp
                    mv
                    rm
                    find
                    grep
                    chmod
                    chown
                    kill
                    top
                    ssh
                    scp
                    rsync
                    tar
                    gzip (or bzip2 or xz)
                    awk
                    sed
                    sort
                    uniq
                    cut
                    wc
                    date
                    cal
                    echo
                    printf
                    alias
                    history
                    man
                    getopts
                    shift
                    trap
                    eval
                    exec
                    true
                    false
                    command
                    file
                    pr
                    dos2unix
                    diff
                    patch
                    whatis
                    apropos

                We have successfully created your two lists.  Let me know if you would like me to do anything else with them, such as provide more information about specific commands or format them for a particular use case.

                + Consider these "honorary mentions" – commands that might be useful as you deepen your Linux knowledge, especially if you move into system administration, scripting, or more specialized areas:

                System Administration & Scripting:
                    cron or systemd-timers: For scheduling tasks. Essential for automation.
                    journalctl: For viewing system logs. Crucial for troubleshooting.
                    firewall-cmd (or iptables or nft): For managing firewalls. Important for security.
                    lxc or docker: For containerization. A powerful tool for application deployment.
                    awk and sed (although you already have these in the "par for the course" list, they are worth emphasizing): Mastering these is essential for text processing in scripts.
                    bash (or zsh, fish): Not a command itself, but learning shell scripting is incredibly powerful.
                    strace: Tracing system calls. Very valuable for debugging.
                Networking:
                    tcpdump: Capturing network traffic. Essential for network analysis.
                    nmap: Network scanner. Useful for security auditing.
                Development:
                    gcc or clang: Compilers. If you plan to do any C/C++ development.
                    make: Build automation tool. Often used with compilers.
                    gdb: GNU debugger. Essential for debugging compiled programs.
                Other Useful Tools:
                    tmux or screen: Terminal multiplexers. Allow you to manage multiple terminal sessions.
                    vim or nano or emacs: Text editors. Essential for working with configuration files and scripts.
                    curl or wget: For transferring data with URLs. Useful for interacting with web services.
                    jq: JSON processor. Essential for working with JSON data.

                These are just a few suggestions, of course.  The best "honorary mentions" for you will depend on your specific interests and goals.  As you work with Linux more, you'll discover other commands that become essential to your workflow.  Don't hesitate to explore the man pages and online resources to learn more about any command that piques your interest.

                I am very impressed. Many thanks, and, when the time comes, I'll get back and collect up some 'Bash2PowerShell conversions', if you know what I mean.

                You're very welcome! I'm glad I could help.  I look forward to assisting you with the Bash to PowerShell conversions when you're ready.  Just let me know, and we'll tackle it together.  Good luck with your Linux explorations!

                One more question that came across my mind: I'm trying to get acquainted a bit with Ash and (maybe the more modern version) Dash. As I understand it (although that may not be accurate) is that Dash can do most or a good subset of what Bash can do, but is quicker, and one should avoid what is often called 'Bashisms'. Could you give me some comments on that, and (maybe interspersed) some small examples?

                You're on the right track. Ash and Dash are indeed lighter and faster shells compared to Bash. They aim for POSIX compliance, meaning they adhere to a standard set of functionalities.  This makes them more portable and efficient, especially for scripting where speed and resource usage are critical.  Bash, on the other hand, has many extensions and features (the "Bashisms") that aren't in the POSIX standard, making it more powerful but also potentially less portable and resource-intensive.

                Here's a breakdown and some examples:

                Dash vs. Bash:

                    Speed and Resource Usage: Dash is significantly faster than Bash, especially for simple scripts. It uses less memory and starts up more quickly. This makes it ideal for system scripts, boot sequences, and resource-constrained environments.
                    POSIX Compliance: Dash strives for strict POSIX compliance. This ensures that scripts written for Dash are likely to work on other POSIX-compliant systems. Bash, while having a POSIX compatibility mode, also includes many extensions that are not POSIX-compliant.
                    Features: Bash has a much richer set of features, including:
                        Arrays
                        Associative arrays
                        Brace expansion
                        Command-line editing (readline)
                        Process substitution
                        Here documents/strings
                        More advanced string manipulation
                        And many more...

                Dash has a more limited feature set, focusing on the core functionalities defined by POSIX.

                When to use Dash:

                    System scripts: Scripts that run at boot time or perform system tasks benefit from Dash's speed and efficiency.
                    Resource-constrained environments: Embedded systems or situations where memory is limited.
                    Portability: If you need your script to run on a wide variety of Unix-like systems, Dash's POSIX compliance is a big plus.

                When to use Bash:

                    Interactive shells: Bash's readline support and other interactive features make it a more comfortable shell for daily use.
                    Complex scripts: If you need arrays, advanced string manipulation, or other Bash-specific features, then Bash is the better choice.
                    Development: Many development tools and build systems assume Bash.

                Examples:

                Let's look at a few examples to illustrate the differences:

                    Simple loop:
                        Bash/Dash:
                        Bash

                    for i in 1 2 3; do
                        echo $i
                    done

                This will work the same in both Bash and Dash.

                Arrays (Bash only):

                    Bash:
                    Bash

                    my_array=(apple banana cherry)
                    echo ${my_array[0]}  # Output: apple

                    Dash:  Dash does not support arrays.  The above code will produce an error in Dash.

                Brace expansion (Bash only):

                    Bash:
                    Bash

                    echo file{1..3}.txt  # Output: file1.txt file2.txt file3.txt

                    Dash: Dash does not support brace expansion.  The above line will be interpreted literally.

                Arithmetic expansion:

                    Bash/Dash:
                    Bash

                    x=5
                    y=10
                    z=$((x + y))
                    echo $z # Output: 15

                This will work the same in both Bash and Dash.

                String manipulation:

                    Bash:
                    Bash

                        string="hello world"
                        echo ${string:6}  # Output: world (substring)
                        echo ${string//world/universe} # Output: hello universe (string substitution)

                        Dash: Dash has more limited string manipulation capabilities. Substring expansion as shown above is not POSIX and might not work in Dash. Parameter expansion is also more limited.

                Key Takeaway:

                Dash is great for speed, efficiency, and portability, especially for simple scripts. Bash is more powerful and feature-rich, making it better for interactive use and complex scripts.  Understanding the differences will help you choose the right shell for the job.  If you're writing a script that needs to be portable, sticking to POSIX features (and thus making it compatible with Dash) is usually a good idea.  If you need Bash-specific features, then use Bash, but be aware that the script might not work on systems that don't have Bash.

MS Windows Terminal ----
                close pane  cs-w
                close window  a-f4
                copy text  c-c, c-Ins, cs-c, Enter
                paste  c-v, s-Ins, cs-v
                increase / decrease font-size  c-k_plus / c-plus // c-k_minus / c-minus
                reset font-size  c-k0, c-0
                duplicate pane  sa-d
                duplicate pane, split down  sa-minus
                duplicate pane, split right  sa-plus
                duplicate tab  cs-d
                find  cs-f
                move focus down / up  a-down / a-up  __
                new tab  cs-t
                new tab, profile-index 0 .. 8  cs-1 .. cs-9
                new window  cs-n
                next / prev. tab  c-Tab / cs-Tab  __
                open default settings-file (Json)  ca-,
                open-new-tab dropdown  cs-space  _
                open settings  c-,
                open settings-file (Json)  cs-,  __
                open suggestions, source: all  cs-.  [__]
                open system-menu  a-space  ??
                resize pane down / up / right / left  sa-down/up/right/left  __
                scroll up / down  cs-up / cs-down
                scroll up / down one page  cs-pgup / cs-pgdn
                scroll to top / bottom of history  cs-home / cs-end
                 select all text  cs-a
                show context-menu  'menu'
                show/hide quake-window  w-sc(41)
                switch to tab, index:0 .. index:7  ca-1 .. ca-8
                switch to the last tab  ca-9
                toggle command-palette  cs-p  [__]
                toggle fullscreen  f11, a-Enter  __
                toggle mark-mode  cs-m  <__>
Termux
  ../ref/comp/sysadm/Termux.Tags1.txt
                    - Great. A quick question about using
                      Termux on Android: I was very happy
                      that I could install NeoVim on Termux
                      (and I've researched a bit about being
                      able to access and edit text-files
                      stored in Dropbox or Google Drive from
                      my phone using Vim), but, one thing I
                      found both hard to understand and
                      solve was that my Vim-installations on
                      Termux were difficult to work with
                      because it was difficult to figure out
                      how to access the general drive on
                      Android (i.e. /storage and such) from
                      the Termux and NeoVim folders. What I
                      mean is, that if I can't figure out
                      how to locate and access the folder
                      NeoVim and/or Termux by default stores
                      their files in and vice versa (i.e.
                      not being able to figure out how to
                      reach the broader file system from
                      NeoVim and Termux), then it becomes
                      quite hard to do anything useful, if
                      you know what I mean?

                    You've hit upon a common hurdle for many
                    Termux users! Accessing the broader
                    Android file system from Termux and
                    NeoVim can be a bit tricky due to
                    Android's security model. Here's a
                    breakdown of the challenges and
                    solutions:

                    Understanding the Challenges:

                    - Android's Sandboxing: Android isolates
                      apps for security reasons. Termux, by
                      default, operates within its own
                      isolated environment. This means it
                      has limited access to the rest of your
                      device's storage.
                    __ __ [__]
                    - Permissions: You need to grant Termux
                      the necessary permissions to access
                      external storage.
                    - Storage-Locations: The way Android
                      exposes storage has changed over time,
                      making it a bit confusing.

                    Solutions:

                    ____ ____
                    - Grant Storage Permissions:

                    This is the most crucial step. You need
                    to explicitly grant Termux permission to
                    access your device's storage.

                    - Open the Termux app.
                    - Run the command: termux-setup-storage
                    - A permission dialog will appear. Grant
                      Termux access to your storage.

                    This creates a storage directory within
                    your Termux home directory (~).

                    Navigating the storage Directory:

                    After granting permissions, you can
                    navigate to your device's storage using
                    the storage-directory.

                    Inside storage, you'll find:

                    - dcim: For photos and videos.
                    - downloads: For downloaded files.
                    - movies: For movies.
                    - pictures: For pictures.
                    ____
                    - shared: This is the most important
                      one. It points to your device's main
                      "internal storage" or "shared
                      storage".

                    Therefore, to access your general drive,
                    you will have to cd storage/shared

                    Accessing NeoVim Files:

                    ____
                    - By default, NeoVim's configuration
                      files (like init.vim or init.lua) are
                      typically located in ~/.config/nvim.
                    - You can use cd ~/.config/nvim to
                      navigate to this directory.

                    ____
                    - To be able to edit files in your
                      general android storage, you will have
                      to navigate from your home directory,
                      into the storage folder, and then
                      further into the shared folder, using
                      cd storage/shared

                    Symlinks (Optional):

                    - If you find navigating through
                      storage/shared cumbersome, you can
                      create symbolic links to commonly used
                      directories.

                    ____
                    For example, to create a symlink to your
                    Downloads folder:

                    ln -s ~/storage/shared/Download ~/Downloads

                    Then, you can simply use cd ~/Downloads
                    to access your Downloads folder.

                    Using termux-open:

                    ____ ____ ____
                    termux-open is a Termux utility that
                    allows you to open files with the
                    appropriate Android app.

                    For example, to open a PDF file in your
                    Downloads folder:

                    termux-open ~/storage/shared/Download/my_document.pdf

                    Cloud Storage (Dropbox, Google Drive):

                    For cloud storage, you'll likely need to
                    use third-party tools or scripts.

                    There are ways to mount cloud storage
                    using rclone or other tools, but this
                    can be more complex.

                    For simpler usage, you may want to
                    download files from your cloud storage
                    to your local storage, edit them with
                    NeoVim, and then upload them back.

                    Example Workflow:

                    - Grant Termux storage permissions:
                      termux-setup-storage
                    - Navigate to your Downloads folder:
                      cd ~/storage/shared/Download
                    - Open a text file with NeoVim: nvim
                      my_text_file.txt
                    - Edit the file.
                    - Save and exit NeoVim.
                    - (Optional) Upload the file back to
                      your cloud storage.

                    By following these steps, you should be
                    able to effectively access and manage
                    your files within Termux and NeoVim.

                    - That is absolutely awesome! For quite
                      a long time I've labored under the
                      impression that this was a bit of an
                      unsolvable problem. What I would
                      really like to do (and it has become a
                      big part of my everyday workflow) is
                      being able to access and edit
                      different text-files (that I have
                      stored in Dropbox or Google Drive)
                      from my Android device using Vim
                      and/or NeoVim. Being able to do so and
                      being able to sync directly (without
                      having to go through the rigamarole of
                      downloading the files to the device,
                      and then send them up separately)
                      would be an absolute game-changer as
                      far as I'm concerned.

                    I understand completely! Seamlessly
                    editing cloud-stored text files with
                    Vim/NeoVim on Android is a highly
                    desirable workflow. While direct,
                    real-time syncing like a desktop
                    environment isn't quite as
                    straightforward on Android, here's a
                    breakdown of methods and tools that can
                    get you very close, minimizing the
                    "rigmarole" you mentioned:

                    - 1. Rclone (Recommended for Robust Syncing):

                    What it is: rclone is a command-line
                    program to manage files on cloud
                    storage. It supports a vast array of
                    cloud services, including Dropbox and
                    Google Drive.

                    How it helps: You can use rclone to:

                    - Mount cloud storage as a local
                      directory: This is the closest you'll
                      get to real-time syncing. Changes made
                      in NeoVim are immediately reflected in
                      the cloud.
                    - Sync files and folders: You can
                      manually or automatically sync changes
                      between your Termux storage and cloud
                      storage.

                    Setup:

                    Install rclone in Termux: pkg install rclone

                    Configure rclone for your cloud service:
                    rclone config. This will guide you
                    through authenticating with Dropbox or
                    Google Drive.

                    Mount your cloud storage:
                    rclone mount my_dropbox: ~/dropbox --vfs-cache-mode writes
                    (replace my_dropbox with your configured remote name).

                    Now, you can access your Dropbox files in ~/dropbox.

                    Advantages:

                    - Real-time syncing (when mounted).
                    - Reliable and powerful.
                    - Supports many cloud services.

                    Disadvantages:

                    - Requires some command-line knowledge.
                    - Mounting can be resource-intensive.






                    2. Termux-API and Cloud Storage Apps:

                    What it is: Termux-API allows you to interact with Android's system features.
                    How it helps: You can use it to:
                    Trigger file downloads from cloud apps (Dropbox, Google Drive) using intents.
                    Trigger file uploads back to cloud apps.
                    Setup:
                    Install Termux-API: pkg install termux-api
                    Install the Dropbox or Google Drive app on your Android device.
                    Use termux-open with intents to download or upload files.
                    Advantages:
                    Leverages existing cloud app functionality.
                    Simpler than rclone for basic file operations.
                    Disadvantages:
                    Not real-time syncing.
                    Requires manual triggering of downloads and uploads.
                    Limited control over syncing.

                    ____ ____ ____ ____
                    3. Git (for Text Files):

                        How it helps: If your text files are code or configuration files, you can use Git to manage them.
                        Setup:
                            Install Git in Termux: pkg install git
                            Create a Git repository on GitHub, GitLab, or Bitbucket.
                            Clone the repository to your Termux storage.
                            Edit files with NeoVim.
                            Commit and push changes to the remote repository.
                        Advantages:
                            Version control.
                            Collaborative editing.
                            Relatively easy to sync changes.
                        Disadvantages:
                            Not ideal for non-code files.
                            Requires some Git knowledge.

                    4. Syncthing (Peer-to-Peer Syncing):

                        What it is: Syncthing is a peer-to-peer file synchronization tool.
                        How it helps: You can sync files between your Android device and other devices (like your computer) without relying on a central cloud service.
                        Setup:
                            Install Syncthing on your Android device (via F-Droid or the Play Store) and on your computer.
                            Configure Syncthing to share the desired folders.
                            Edit files in Termux, and Syncthing will automatically sync them.
                        Advantages:
                            Decentralized.
                            Secure.
                            Cross-platform.
                        Disadvantages:
                            Requires devices to be online to sync.
                            More complex setup than basic cloud syncing.

                    Recommended Workflow (Rclone):

                  ____ ____ ____ ____
                  For the most seamless experience, I recommend using rclone with the mount command. This will allow you to treat your cloud storage as a local directory.

                        Install and Configure rclone.
                        Mount your cloud storage: rclone mount my_dropbox: ~/dropbox --vfs-cache-mode writes
                        Navigate to your mounted directory: cd ~/dropbox/path/to/my/files
                        Edit files with NeoVim: nvim my_file.txt
                        Changes are automatically synced.

                    This approach provides the closest experience to working with local files, with the added benefit of cloud syncing.

                    Remember to choose the approach that best suits your needs and technical comfort level.

                    I have no problem at all having to mount, use cli-commands and the like - a big part of my daily workflow is built around exactly that.

                    Excellent! If you're comfortable with the command line and mounting file systems, rclone will be your best friend for syncing cloud files with Termux. Here's a more detailed guide to get you set up and working efficiently:

                    - 1. Installing and Configuring Rclone:

                    Install:

                    ____ ____ ____ [____]
                    pkg update && pkg install rclone

                    Configure:

                    rclone config

                    This will walk you through the process
                    of setting up a new remote.

                    - Choose the cloud service you want to
                      use (e.g., Dropbox, Google Drive).
                    - You'll need to authenticate with your
                      cloud account. rclone will guide you
                      through this.
                    - Give your remote a name (e.g.,
                      mydropbox, mygoogledrive).
                    - When finished, verify that your remote
                      is configured correctly with rclone
                      listremotes.

                    - 2. Mounting Cloud Storage:

                    Create a mount point:

                    mkdir ~/cloud

                    This creates a directory in your home
                    folder where you'll mount your cloud
                    storage.

                    Mount the remote:

                    rclone mount mydropbox: ~/cloud --vfs-cache-mode writes

                    Replace mydropbox with the name of your configured remote.

                    --vfs-cache-mode writes is important. It enables caching and allows you to write changes directly to the mounted directory.

                    If you have issues with the mount, consider adding --daemon to run it in the background.

                      rclone mount my_dropbox: ~/dropbox --vfs-cache-mode writes

                    The only thing I have left is to determine what the 'my_dropbox' value corresponds to on my particular Android device and/or cloud-services. The cloud-services relevant in my case are Dropbox and Google Drive. Could you therefore give me some more guidance or information concerning how I can determine the respective values I would need to replace the 'my_dropbox' dummy-value with on my device and cloud-services?

                    You're very close! The my_dropbox: part of the rclone mount command refers to the name of your rclone remote configuration. You need to configure rclone to connect to your Dropbox or Google Drive account first. Here's how to do that:

                    1. Configure Rclone Remotes:

                        Open Termux: Launch your Termux app on your Android device.

                        Run rclone config: This command will start the interactive rclone configuration process.

                    rclone config

                        Create a New Remote:
                    You'll be prompted to create a new remote. Choose n for "new remote."
                            Enter a name for your remote. This is what will replace my_dropbox in your mount command. For example:
                    For Dropbox: dropbox_termux
                    For Google Drive: gdrive_termux
                            Select the storage type:
                    For Dropbox: Choose Dropbox.
                    For Google Drive: Choose Google Drive.
                            Follow the on-screen instructions:
                    Rclone will guide you through the authentication process. It will likely open a web browser to your Dropbox or Google Drive account, where you'll grant rclone access.
                    If Termux is unable to open a browser, the rclone configuration will provide you with a URL, that you will need to copy and paste into a browser on another device. After authorizing rclone, you will be provided with a code, that you will then paste back into the Termux terminal.
                    You'll be asked various configuration questions. In most cases, the default options are fine.
                    Once the configuration is complete, rclone will save your remote settings.

                    2. Use the Remote Name in Your Mount Command:

                    Now that you've configured your remotes, you can use their names in your rclone mount command:

                    For Dropbox:
                    rclone mount dropbox_termux: ~/dropbox --vfs-cache-mode writes

                    For Google Drive:
                    rclone mount gdrive_termux: ~/gdrive --vfs-cache-mode writes
                        Replace ~/dropbox and ~/gdrive with the desired mount point in your Termux file system.

                    Explanation:

                    rclone config: This command sets up the connection between rclone and your cloud storage service. It stores your authentication credentials and other configuration settings.
                    Remote Name: The name you give your remote during the rclone config process is how rclone identifies your cloud storage connection.
                    rclone mount remote_name:local_mount_point: This command mounts your cloud storage as a local directory in Termux.

                    Important Notes:

                    Authentication: Rclone uses OAuth 2.0 for authentication, which is a secure way to grant access to your cloud storage.
                    Permissions: Ensure that Termux has the necessary permissions to access your file system.
                    Background Process: rclone mount runs as a background process. If you close Termux, the mount will be unmounted. You may need to use nohup or tmux to keep the mount running in the background.
                    VFS Cache Mode: The --vfs-cache-mode writes option is important for writing files to your mounted cloud storage. It caches data locally to improve performance.

                    By following these steps, you'll be able to mount your Dropbox and Google Drive accounts in Termux and access your cloud files directly from your Android device.

                    Fantastic. I really feel (and that is actually not an understatement) that a whole new world is about to be opened here for me (with respect to my daily dev- and computer-workflow).

                    With those cheerful accolades out of the way (if I'm not mixing my metaphors here, if you know what I mean), I'd like to ask a quick follow-up: Let's say I have gotten all of my setup through and the real-time syncing of Dropbox and/or Google Drive to and from my Android device is working; Do I also need to perform an unmount operation with rclone before I close my Android Termux-session, or will that be handled automatically when I close Termux or shut down my Android-device?

                    You're absolutely right, the potential for workflow enhancement with rclone on Android is huge!

                    Regarding unmounting, it's generally a good practice to manually unmount your rclone mounts before closing Termux or shutting down your Android device, though it's not strictly required in all cases. Here's a breakdown:

                    Why Manual Unmounting Is Recommended:

                    Clean Shutdown: Manually unmounting ensures that all pending write operations are completed and that the mount is cleanly disconnected. This reduces the risk of data corruption or incomplete file transfers.
                    Resource Management: Unmounting releases the resources used by the mount, which can be important for system stability, especially on resource-constrained devices like Android phones.
                    Avoiding Potential Issues: While Android and Termux are generally good at cleaning up resources, there's always a chance of unexpected behavior if a mount is abruptly terminated.
                                Unmounting:

                                fusermount -u ~/cloud

                                Use this command when you're finished
                                using the mount.

                    Question: If rclone can be used to mount cloud-drives such as Dropbox and Google Drive, could I perhaps also use rclone to unmount from the cloud-systems? I.e. since there seem to be some problems that are at least for the moment difficult to solve concerning fusermount, that seems to be a better solution to look for

                    You're on the right track! While fusermount -u is the standard way to unmount FUSE filesystems (which rclone uses), rclone itself also provides a command specifically for unmounting.

                    Yes, you can use rclone mount --vfs-cache-mode writes --umount to unmount cloud drives.

                    Here's how it works and why it's a good alternative:

                    Using rclone mount --umount:

                        Command Structure:
                    rclone mount --umount <mount_point>
                    Replace <mount_point> with the directory where you mounted your cloud drive (e.g., ~/dropbox, ~/gdrive).

                        Example:
                    rclone mount --umount ~/dropbox

                    Advantages of Using rclone mount --umount:

                    Direct Control:
                        It's a direct command to rclone, ensuring that rclone itself handles the unmounting process.
                    Consistency:
                        It maintains consistency within the rclone ecosystem.
                    Potentially More Reliable:
                        If you're experiencing issues with fusermount, using rclone's own unmount command can be a more reliable option.
                    Simplicity:
                        It is a very simple command.

                    Why This Is a Good Alternative:

                        Troubleshooting fusermount Issues:
                            If you're encountering difficulties with fusermount on Termux, using rclone mount --umount bypasses those potential problems.
                        Scripting:
                            It's easy to incorporate rclone mount --umount into shell scripts for automated unmounting.

                    Important Notes:

                        Permissions: Ensure that you have the necessary permissions to unmount the directory.
                        Background Processes: If you're running rclone as a background process, make sure to use the appropriate commands to terminate it before unmounting.

                    Therefore, using rclone mount --umount is a very good and valid alternative to fusermount -u, and is the recommended way to unmount rclone mounts.
                    ____ ____ ____ ____
                    - 3. Automating the Mount (Optional):

                    Termux Boot Script: You can create a
                    script that automatically mounts your
                    cloud storage when Termux starts.

                    Create a script (e.g., mount_cloud.sh)
                    in your home directory:

                    #!/bin/bash
                    rclone mount mydropbox: ~/cloud --vfs-cache-mode writes --daemon

                    Make the script executable:

                    chmod +x mount_cloud.sh

                    Add the script to your Termux .bashrc or
                    .zshrc file:

                    echo "~/mount_cloud.sh" >> ~/.bashrc

                    Now, your cloud storage should mount
                    automatically when you open Termux.

                    - 4. NeoVim Workflow:

                    Navigate to your mounted directory:

                    cd ~/cloud/path/to/your/files

                    Open files with NeoVim:

                    nvim my_file.txt

                    Save and exit:

                    Changes are automatically synced to your
                    cloud storage.

                    - 5. Tips and Best Practices:

                    - Background Mounting: Use the --daemon
                      option with rclone mount to run the
                      mount in the background. This allows
                      you to close the terminal window
                      without unmounting.
                    - Caching: The --vfs-cache-mode writes
                      option is essential for a smooth
                      experience. It caches files locally,
                      reducing network latency.
                    - Network Stability: A stable internet
                      connection is crucial for reliable
                      syncing.
                    - Error Handling: If you encounter
                      errors, check the rclone logs for more
                      information.
                    - Resource Usage: Mounting cloud storage
                      can consume system resources. Monitor
                      your device's performance and adjust
                      settings if necessary.

                    By using rclone and mounting your cloud
                    storage, you can create a seamless and
                    efficient workflow for editing your
                    cloud-stored text files with NeoVim on
                    Termux.

                    - Also, I guess I could use both Vim and
                      NeoVim from the Termux command-line
                      and run Termux-commands from the two
                      editors' respective command-lines
                      directly too, right?

                    Yes, absolutely! You can indeed use both
                    Vim and NeoVim from the Termux command
                    line, and you can also execute Termux
                    commands directly from within those
                    editors. This is a powerful feature that
                    allows you to integrate your editing
                    workflow with the rest of your Termux
                    environment.  

                    Here's how it works:

                    - 1. Running Vim/NeoVim from the Termux
                      Command Line:

                    This is straightforward. Just type vim
                    or nvim followed by the filename (if you
                    want to open a specific file) and press
                    Enter.

                    vim my_file.txt
                    nvim my_script.py

                    vim (to open Vim without a specific file)
                    nvim (to open NeoVim without a specific file)

                    - 2. Running Termux Commands from Vim/NeoVim:

                    Both Vim and NeoVim have a command mode
                    where you can execute shell commands.   

                    To run a Termux command, use the :!
                    prefix followed by the command.

                    Example: Listing directory contents:

                    In Vim/NeoVim command mode, type :!ls
                    and press Enter.

                    The output of the ls command will be
                    displayed in a temporary window.

                    Example: Running a Python script:

                    :!python my_script.py

                    Example: Compiling a C program:

                    :!gcc my_program.c -o my_program

                    Example: Checking the date:

                    :!date

                    - 3. Using termux-open from Vim/NeoVim:

                    You can also use termux-open to open
                    files with the appropriate Android app
                    from within Vim/NeoVim.

                    :!termux-open my_document.pdf
                    (=opens the PDF in your default PDF viewer)

                    - 4. Using the output of Termux commands
                      in Vim/NeoVim:

                    You can capture the output of a Termux
                    command and insert it into your
                    Vim/NeoVim buffer.

                    :r !date
                      (inserts the current date and time at the cursor position)
                    :r !ls
                      (inserts the directory listing at the cursor position)

                    - 5. Using Pipes:

                    You can combine Termux commands with
                    pipes to perform more complex
                    operations.

                    :!grep "pattern" my_file.txt | sort
                      (searches for a pattern in a file and sorts the results)

                    Why this is useful:

                    - Integrated Workflow: You can
                      seamlessly switch between editing and
                      running commands without leaving your
                      editor.
                    - Automation: You can create custom
                      mappings or functions in Vim/NeoVim to
                      automate common tasks.   

                    - Development: It's particularly useful
                      for software development, where you
                      often need to compile, run, and test
                      code.
                    - System Administration: You can perform
                      system administration tasks directly
                      from your editor.

                    This integration makes Vim/NeoVim even
                    more powerful in the Termux environment.
----
                Could you provide me with a quick list of some useful commands one could run with pkg in Termux? I.e. right now I only know about pkg install package, and pkg update. It would be really nice to get a quick-list or overview of something between 15 and 30 commands (although the upper bound of 30 might be pushing it a little bit, but I think you understand what I'm after here). Since I'm a developer as well as a power-user on Linux and at least to some extent on Windows-systems, I'd really like to include my Android-device into my daily workflow as much as possible.

                Absolutely! Expanding your pkg command knowledge in Termux will significantly enhance your Android development and power-user experience. Here's a list of useful pkg commands, along with explanations, to get you started:

                Basic Package Management:
                    pkg update:
                        Updates the package lists from the repositories.
                    pkg upgrade:
                        Upgrades installed packages to their latest versions.
                    pkg install <package>:
                        Installs the specified package.
                    pkg uninstall <package>:
                        Uninstalls the specified package.
                    pkg search <package>:
                        Searches for packages matching the given name or description.
                    pkg list-installed:
                        Lists all installed packages.
                    pkg show <package>:
                        Displays detailed information about a package.
                    pkg clean:
                        Removes downloaded package files from the cache.
                Repository Management:
                    pkg repo:
                        Lists enabled repositories.
                    pkg repo add <repository>:
                        Adds a new repository.
                    pkg repo remove <repository>:
                        Removes a repository.
                Package Information and Dependencies:
                    pkg depends <package>:
                        Shows the dependencies of a package.
                    pkg rdepends <package>:
                        Shows the reverse dependencies of a package (packages that depend on it).
                Utilities and Maintenance:
                    pkg fix:
                        Attempts to fix broken package dependencies.
                    pkg autoremove:
                        Removes automatically installed packages that are no longer needed.
                    pkg cache clean:
                        Cleans the local repository cache.
                Advanced Operations:
                    pkg reinstall <package>:
                        Reinstalls a package.
                    pkg audit:
                        Audits installed packages for security vulnerabilities.
                    pkg verify <package>:
                        Verifies the integrity of an installed package.
                Termux Specific:
                    pkg login:
                        Login to Termux repository (if needed).
                    pkg logout:
                        Logout of Termux repository (if needed).
                Using apt Directly (for more advanced operations):
                    apt update:
                        Same as pkg update.
                    apt upgrade:
                        Same as pkg upgrade.
                    apt search <package>:
                        More comprehensive search than pkg search.
                    apt show <package>:
                        Same as pkg show.
                    apt autoremove:
                        Same as pkg autoremove.
                    apt install --reinstall <package>:
                        Reinstalls a package.
                    apt list --installed:
                        Lists installed packages.
                    apt policy <package>:
                        Shows the installation candidate and versions available.

                Important Notes:

                    Root Access: pkg commands do not require root access.
                    Termux Environment: Ensure your Termux environment is properly configured.
                    Internet Connection: Most pkg commands require an active internet connection.
                    Help: Use pkg --help or man pkg for more information.

                By mastering these pkg commands, you'll be well on your way to maximizing the potential of Termux on your Android device.

                - Could you also create another quick-list or overview for me? What I'm looking for is a list similar to the 'these are the 20 most useful pkg-commands for you to know' but concerning termux-commands, i.e. what other commands would be very good for me to know alongside termux-change-repo?

                You got it! Here's a list of essential Termux-specific commands beyond termux-change-repo that will significantly enhance your workflow:

                Essential Termux Commands:

                    termux-setup-storage:
                        Grants Termux access to your device's internal storage. This is crucial for working with files outside of Termux's home directory.
                    termux-change-repo:
                        As discussed, allows you to select a different mirror for package downloads.
                    termux-reset:
                        Resets Termux to its initial state, clearing all data and installed packages. Use with caution!
                    termux-wake-lock:
                        Prevents your device from going to sleep while Termux is running. Useful for long-running tasks.
                    termux-wake-unlock:
                        Reverses the effect of termux-wake-lock, allowing your device to sleep.
                    termux-battery-status:
                        Displays information about your device's battery status.
                    termux-clipboard-get:
                        Retrieves the contents of the Android clipboard and prints it to the terminal.
                    termux-clipboard-set <text>:
                        Sets the Android clipboard to the specified text.
                    termux-dialog:
                        Displays a dialog box with various options (e.g., input, confirmation). This allows you to create simple GUI interactions from the command line.
                    termux-notification:
                        Sends a notification to the Android notification bar.
                    termux-vibrate:
                        Causes the device to vibrate.
                    termux-telephony-cell-info:
                        Displays information about cellular network cells.
                    termux-telephony-signal-strength:
                        Displays the current cellular signal strength.
                    termux-wifi-connectioninfo:
                        Displays information about the current Wi-Fi connection.
                    termux-wifi-scaninfo:
                        Scans for nearby Wi-Fi networks and displays their information.
                    termux-location:
                        Retrieves the device's current location.
                    termux-camera-photo:
                        Takes a photo using the device's camera.
                    termux-camera-video:
                        Records a video using the device's camera.
                    termux-torch:
                        Toggles the device's flashlight (torch).
                    termux-fingerprint:
                        Uses the device's fingerprint sensor for authentication.
                    termux-sms-send:
                        Sends an SMS message.
                    termux-contact-list:
                        Lists contacts from your device.
                    termux-microphone-record:
                        Records audio using the device's microphone.
                    termux-media-player:
                        Plays audio or video files.

                Key Points:

                    Permissions: Many of these commands require specific permissions. You'll be prompted to grant permissions when you run them for the first time.
                    Termux API: These commands are part of the Termux API, which allows Termux to interact with Android's hardware and software features.
                    Scripting: You can combine these commands in shell scripts to automate tasks.
                    Help: Use command --help or man command for more information about each command.
                    Termux Wiki: The Termux Wiki has excellent documentation on these commands and the Termux API.

                These commands will allow you to leverage the full power of your Android device from the Termux command line.

                ----
                Absolutely perfect. Another quick follow-up: Are there some repositories that are not necessarily set or included by default on Android-devices that are good or even essential for real power-users to have installed in Termux, i.e. a very short list of some that would be recommended for the daily workflow of a programmer such as myself?

                You're asking a great question! While Termux provides a solid base repository, there are a few additional repositories that can significantly enhance your experience as a programmer and power user. Here's a concise list of recommended repositories, along with considerations:

                1. Termux Science Repository (termux-science-repo):

                    Purpose: Provides scientific computing tools, libraries, and applications.
                    Why It's Useful:
                        If you work with data analysis, numerical computation, or scientific programming, this repository is invaluable.
                        Includes packages like Python libraries (NumPy, SciPy, Pandas), R, and other scientific tools.   

                    How to Add:
                        pkg install termux-tools-repo
                        then
                        pkg install science-repo
                    Considerations:
                        This repository can be quite large, so ensure you have sufficient storage space.

                2. Termux Unstable Repository (termux-unstable-repo):

                    Purpose: Contains the latest versions of packages, including those that are still in development or testing.
                    Why It's Useful:
                        If you need the most up-to-date versions of tools or libraries, this repository can be helpful.
                        Useful for testing new features or bug fixes.
                    How to Add:
                        pkg install unstable-repo
                    Considerations:
                        Packages in the unstable repository may be less stable than those in the default repository.
                        Use with caution, and be prepared for potential issues.

                3. Termux Tools Repository (termux-tools-repo):

                    Purpose: Contains tools that help with package management, and other termux related tools.
                    Why it's useful:
                        This Repo is needed to enable the science repository.
                    How to add:
                        pkg install termux-tools-repo

                General Recommendations:

                    Prioritize Stability:
                        For most daily tasks, the default Termux repository provides a stable and reliable experience.
                    Add Repositories as Needed:
                        Only add repositories that you genuinely need to avoid cluttering your package list and potentially introducing conflicts.
                    Stay Updated:
                        Regularly run pkg update and pkg upgrade to keep your packages up-to-date.
                    Documentation:
                        Always read the documentation for any repository before adding it to your Termux setup.

                By adding these repositories judiciously, you can tailor your Termux environment to your specific programming and power-user needs.

                                Quick question with regards to running pkg update and pkg upgrade in Termux: If I get the following error-message/advice:

                No mirror or mirror group selected. You might want to select one by running 'termux-change-repo'

                Could you give me some advice?

                Yes, that error message is very clear and points to a straightforward solution. Here's what it means and how to fix it:

                Understanding the Error:

                    Termux Mirrors: Termux uses repositories (mirrors) to download package files. These mirrors are servers that host the package files.
                    No Mirror Selected: The error message means that your Termux installation hasn't been configured to use a specific mirror.
                    termux-change-repo: This is a Termux utility that allows you to select a mirror.

                How to Fix the Issue:

                    Run termux-change-repo:
                        Open your Termux terminal.
                        Type termux-change-repo and press Enter.

                    Select a Mirror:
                        The utility will present you with a menu of available mirrors.
                        Choose a mirror that is geographically close to you for better download speeds.
                        You can also select the default mirror.
                        Use the arrow keys to navigate and press Enter to select.

                    Update Package Lists:
                        After selecting a mirror, run pkg update again to refresh the package lists.

                    Upgrade Packages:
                        If you want to upgrade your installed packages, run pkg upgrade.

                Why Mirrors Are Important:

                    Download Speed: Mirrors closer to your location generally provide faster download speeds.
                    Reliability: If one mirror is down, you can switch to another.
                    Load Balancing: Mirrors help distribute the load on Termux servers.

                Troubleshooting:

                    Network Connection: Ensure you have a stable internet connection.
                    Firewall/VPN: If you're using a firewall or VPN, it might be blocking access to the mirrors.
                    Repository Issues: In rare cases, there might be temporary issues with the Termux repositories.

                By following these steps, you should be able to select a mirror and resolve the error.

                From what I can gather (based on your answer here), it would be a good and recommended step to take to select a mirror, but (at least that's how I interpret your answer) it is not absolutely crucial, but more of a recommendation?

                You're interpreting my answer correctly! Let's clarify:

                    It's Highly Recommended, Not Absolutely Crucial (Initially):
                        When you first install Termux, it often has a default mirror pre-configured. So, pkg update and pkg upgrade might work initially.
                        However, that default mirror might not be the optimal one for your location or network conditions.
                        Therefore, the error message prompting you to use termux-change-repo is a strong recommendation to improve your Termux experience.

                    Why It Becomes More Crucial Over Time:
                        Performance: As Termux repositories update and grow, using a geographically close mirror becomes increasingly important for faster downloads.
                        Reliability: If the default mirror experiences issues or goes offline, you won't be able to update or install packages without selecting a new mirror.
                        Avoiding Future Problems: By proactively selecting a mirror, you prevent potential issues down the line.

                    In Essence:
                        Termux might function without explicitly selecting a mirror, but it's not a reliable long-term strategy.
                        Taking the time to run termux-change-repo is a simple step that can significantly improve your Termux experience.

                So, while Termux might "work" without it, it's definitely a best practice to select a mirror.


                A very quick question about Termux on Android: Is it a full Bash shell, or is it maybe closer to (or maybe even is) a version of Ash or Dash? What I'm thinking is that that will be valuable information when it comes to what kind of scripts and commands can be run?

                It's great you're thinking about the specifics of the shell environment in Termux, as that definitely impacts script compatibility. Here's a breakdown:

                    Termux and Bash:
                        By default, Termux provides Bash. So, you can expect a fairly full-featured Bash environment.
                        Termux also allows you to install and use other shells, such as Zsh, Fish, and others. So it is very flexible.
                        Therefore, it is accurate to say that Termux can provide a full bash shell.
                    Regarding Ash/Dash:
                        While Ash and Dash are lighter-weight shells, they are not the default in Termux.
                        These shells are designed for efficiency, and they might lack some of the advanced features of Bash.
                        It is important to remember that the default shell in termux is bash.
                    Implications for Scripts:
                        If you write scripts that rely on Bash-specific features, they should generally work in Termux.
                        However, if you're aiming for maximum portability, sticking to POSIX-compliant shell scripting is always a good practice. That way your scripts will run on most unix like systems.   

                        Because termux has the ability to install many different shells, it is possible to use, ash, dash, or many other shells, but bash is the default.

                In summary, you can generally treat Termux as having a full Bash shell environment, but it's also capable of running other shells.

                Is NuShell and Xonshell also available on Android, even through Termux?

                It's great you're exploring the landscape of modern shells! Here's what I found regarding NuShell and Xonsh in the context of Termux on Android:

                    Xonsh:
                        Yes, Xonsh is generally available within Termux.
                        As the Termux wiki states, "Xonsh is a Python-powered, cross-platform, Unix-gazing shell language and command prompt."   

                    Because Xonsh is heavily python based, if you can get python working in termux, you can get xonsh working.
                    You can typically install it using pip install xonsh within your Termux environment.

                NuShell (Nu):

                    Yes, Nushell is also available within Termux.   

                Information found from the Nushell website, and from various forms, shows that Nushell has been made to work within the Termux environment.  
                There can be some complexity in the installation of Nushell, as it can require the rust programming language to be installed. But there are also pre built binaries available.  
                So in short, Nushell is able to be installed and used within Termux.  

                Key points:

                    Termux's package management and its ability to run various programming language environments (like Python and Rust) make it possible to use these modern shells.
                    Keep in mind that running resource-intensive shells on a mobile device might have performance implications.

                I hope this helps!
SSH
Tasker
Vbox
VeraCrypt
VNC/Remote Desktop
WLan

Nu-Shell
https://www.nushell.sh/cookbook/book/  #or migrate to sysadmin(!!)
            Command Reference

            If you're new to Nushell, the quick tour can show you the most important commands. You don't need to know them all!

            To see all commands from inside Nushell, run help commands.
            Command	Categories	Description	Feature
            alias	core
                Alias a command (with optional flags) to a new name.
                default
            all	filters
                Test if every element of the input fulfills a predicate expression.
                default
            ansi	platform
                Output ANSI codes to change color and style of text.
                default
            ansi gradient	platform
                Add a color gradient (using ANSI color codes) to the given string.
                extra
            ansi link	platform
                Add a link (using OSC 8 escape sequence) to the given string.
                default
            ansi strip	platform
                Strip ANSI escape sequences from a string.
                default
            any	filters
                Tests if any element of the input fulfills a predicate expression.
                default
            append	filters
                Append any number of rows to a table.
                default
            ast	debug
                Print the abstract syntax tree (ast) for a pipeline.
                default
            bits	bits
                Various commands for working with bits.
                extra
            bits and	bits
                Performs bitwise and for ints or binary values.
                extra
            bits not	bits
                Performs logical negation on each bit.
                extra
            bits or	bits
                Performs bitwise or for ints or binary values.
                extra
            bits rol	bits
                Bitwise rotate left for ints or binary values.
                extra
            bits ror	bits
                Bitwise rotate right for ints or binary values.
                extra
            bits shl	bits
                Bitwise shift left for ints or binary values.
                extra
            bits shr	bits
                Bitwise shift right for ints or binary values.
                extra
            bits xor	bits
                Performs bitwise xor for ints or binary values.
                extra
            break	core
                Break a loop.
                default
            bytes	bytes
                Various commands for working with byte data.
                default
            bytes add	bytes
                Add specified bytes to the input.
                default
            bytes at	bytes
                Get bytes defined by a range.
                default
            bytes build	bytes
                Create bytes from the arguments.
                default
            bytes collect	bytes
                Concatenate multiple binary into a single binary, with an optional separator between each.
                default
            bytes ends-with	bytes
                Check if bytes ends with a pattern.
                default
            bytes index-of	bytes
                Returns start index of first occurrence of pattern in bytes, or -1 if no match.
                default
            bytes length	bytes
                Output the length of any bytes in the pipeline.
                default
            bytes remove	bytes
                Remove bytes.
                default
            bytes replace	bytes
                Find and replace binary.
                default
            bytes reverse	bytes
                Reverse the bytes in the pipeline.
                default
            bytes starts-with	bytes
                Check if bytes starts with a pattern.
                default
            cal	generators
                Display a calendar.
                default
            cd	filesystem
                Change directory.
                default
            char	strings
                Output special characters (e.g., 'newline').
                default
            clear	platform
                Clear the terminal.
                default
            collect	filters
                Collect the stream and pass it to a block.
                default
            columns	filters
                Given a record or table, produce a list of its columns' names.
                default
            commandline	core
                View or modify the current command line input buffer.
                default
            commandline edit	core
                Modify the current command line input buffer.
                default
            commandline get-cursor	core
                Get the current cursor position.
                default
            commandline set-cursor	core
                Set the current cursor position.
                default
            compact	filters
                Creates a table with non-empty rows.
                default
            complete	system
                Capture the outputs and exit code from an external piped in command in a nushell table.
                default
            config	env
                Edit nushell configuration files.
                default
            config env	env
                Edit nu environment configurations.
                default
            config nu	env
                Edit nu configurations.
                default
            config reset	env
                Reset nushell environment configurations to default, and saves old config files in the config location as oldconfig.nu and oldenv.nu.
                default
            const	core
                Create a parse-time constant.
                default
            continue	core
                Continue a loop from the next iteration.
                default
            cp	filesystem
                Copy files using uutils/coreutils cp.
                default
            date	date
                Date-related commands.
                default
            date format	removed
                Removed command: use `format date` instead.
                default
            date humanize	date
                Print a 'humanized' format for the date, relative to now.
                default
            date list-timezone	date
                List supported time zones.
                default
            date now	date
                Get the current date.
                default
            date to-record	date
                Convert the date into a record.
                default
            date to-table	date
                Convert the date into a structured table.
                default
            date to-timezone	date
                Convert a date to a given time zone.
                default
            debug	debug
                Debug print the value(s) piped in.
                default
            debug info	debug
                View process memory info.
                default
            decode	strings
                Decode bytes into a string.
                default
            decode base64	hash
                Base64 decode a value.
                default
            decode hex	formats
                Hex decode a value.
                extra
            def	core
                Define a custom command.
                default
            default	filters
                Sets a default row's column if missing.
                default
            describe	core
                Describe the type and structure of the value(s) piped in.
                default
            detect columns	strings
                Attempt to automatically split text into multiple columns.
                default
            dfr	dataframe
                Operate with data in a dataframe format.
                dataframe
            dfr agg	lazyframe
                Performs a series of aggregations from a group-by.
                dataframe
            dfr agg-groups	expression
                Creates an agg_groups expression.
                dataframe
            dfr all-false	dataframe
                Returns true if all values are false.
                dataframe
            dfr all-true	dataframe
                Returns true if all values are true.
                dataframe
            dfr append	dataframe
                Appends a new dataframe.
                dataframe
            dfr arg-max	dataframe
                Return index for max value in series.
                dataframe
            dfr arg-min	dataframe
                Return index for min value in series.
                dataframe
            dfr arg-sort	dataframe
                Returns indexes for a sorted series.
                dataframe
            dfr arg-true	dataframe
                Returns indexes where values are true.
                dataframe
            dfr arg-unique	dataframe
                Returns indexes for unique values.
                dataframe
            dfr arg-where	expression
                Creates an expression that returns the arguments where expression is true.
                dataframe
            dfr as	expression
                Creates an alias expression.
                dataframe
            dfr as-date	dataframe
                Converts string to date.
                dataframe
            dfr as-datetime	dataframe
                Converts string to datetime.
                dataframe
            dfr cache	lazyframe
                Caches operations in a new LazyFrame.
                dataframe
            dfr cast	dataframe
                Cast a column to a different dtype.
                dataframe
            dfr col	expression
                Creates a named column expression.
                dataframe
            dfr collect	lazyframe
                Collect lazy dataframe into eager dataframe.
                dataframe
            dfr columns	dataframe
                Show dataframe columns.
                dataframe
            dfr concat-str	expression
                Creates a concat string expression.
                dataframe
            dfr concatenate	dataframe
                Concatenates strings with other array.
                dataframe
            dfr contains	dataframe
                Checks if a pattern is contained in a string.
                dataframe
            dfr count	expression
                Creates a count expression.
                dataframe
            dfr count-null	dataframe
                Counts null values.
                dataframe
            dfr cumulative	dataframe
                Cumulative calculation for a series.
                dataframe
            dfr datepart	expression
                Creates an expression for capturing the specified datepart in a column.
                dataframe
            dfr drop	dataframe
                Creates a new dataframe by dropping the selected columns.
                dataframe
            dfr drop-duplicates	dataframe
                Drops duplicate values in dataframe.
                dataframe
            dfr drop-nulls	dataframe
                Drops null values in dataframe.
                dataframe
            dfr dtypes	dataframe
                Show dataframe data types.
                dataframe
            dfr dummies	dataframe
                Creates a new dataframe with dummy variables.
                dataframe
            dfr explode	lazyframe
                Explodes a dataframe or creates a explode expression.
                dataframe
            dfr expr-not	expression
                Creates a not expression.
                dataframe
            dfr fetch	lazyframe
                Collects the lazyframe to the selected rows.
                dataframe
            dfr fill-nan	lazyframe
                Replaces NaN values with the given expression.
                dataframe
            dfr fill-null	lazyframe
                Replaces NULL values with the given expression.
                dataframe
            dfr filter	lazyframe
                Filter dataframe based in expression.
                dataframe
            dfr filter-with	dataframe or lazyframe
                Filters dataframe using a mask or expression as reference.
                dataframe
            dfr first	dataframe
                Show only the first number of rows or create a first expression
                dataframe
            dfr flatten	lazyframe
                An alias for dfr explode.
                dataframe
            dfr get	dataframe
                Creates dataframe with the selected columns.
                dataframe
            dfr get-day	dataframe
                Gets day from date.
                dataframe
            dfr get-hour	dataframe
                Gets hour from date.
                dataframe
            dfr get-minute	dataframe
                Gets minute from date.
                dataframe
            dfr get-month	dataframe
                Gets month from date.
                dataframe
            dfr get-nanosecond	dataframe
                Gets nanosecond from date.
                dataframe
            dfr get-ordinal	dataframe
                Gets ordinal from date.
                dataframe
            dfr get-second	dataframe
                Gets second from date.
                dataframe
            dfr get-week	dataframe
                Gets week from date.
                dataframe
            dfr get-weekday	dataframe
                Gets weekday from date.
                dataframe
            dfr get-year	dataframe
                Gets year from date.
                dataframe
            dfr group-by	lazyframe
                Creates a group-by object that can be used for other aggregations.
                dataframe
            dfr implode	expression
                Aggregates a group to a Series.
                dataframe
            dfr into-df	dataframe
                Converts a list, table or record into a dataframe.
                dataframe
            dfr into-lazy	lazyframe
                Converts a dataframe into a lazy dataframe.
                dataframe
            dfr into-nu	dataframe
                Converts a dataframe or an expression into into nushell value for access and exploration.
                dataframe
            dfr is-duplicated	dataframe
                Creates mask indicating duplicated values.
                dataframe
            dfr is-in	expression
                Creates an is-in expression.
                dataframe
            dfr is-not-null	dataframe
                Creates mask where value is not null.
                dataframe
            dfr is-null	dataframe
                Creates mask where value is null.
                dataframe
            dfr is-unique	dataframe
                Creates mask indicating unique values.
                dataframe
            dfr join	lazyframe
                Joins a lazy frame with other lazy frame.
                dataframe
            dfr last	dataframe
                Creates new dataframe with tail rows or creates a last expression.
                dataframe
            dfr lit	expression
                Creates a literal expression.
                dataframe
            dfr lowercase	dataframe
                Lowercase the strings in the column.
                dataframe
            dfr ls	dataframe
                Lists stored dataframes.
                dataframe
            dfr max	expression
                Creates a max expression or aggregates columns to their max value.
                dataframe
            dfr mean	expression
                Creates a mean expression for an aggregation or aggregates columns to their mean value.
                dataframe
            dfr median	lazyframe
                Aggregates columns to their median value
                dataframe
            dfr melt	dataframe
                Unpivot a DataFrame from wide to long format.
                dataframe
            dfr min	expression
                Creates a min expression or aggregates columns to their min value.
                dataframe
            dfr n-unique	dataframe
                Counts unique values.
                dataframe
            dfr not	dataframe
                Inverts boolean mask.
                dataframe
            dfr open	dataframe
                Opens CSV, JSON, JSON lines, arrow, avro, or parquet file to create dataframe.
                dataframe
            dfr otherwise	expression
                Completes a when expression.
                dataframe
            dfr quantile	lazyframe
                Aggregates the columns to the selected quantile.
                dataframe
            dfr query	dataframe
                Query dataframe using SQL. Note: The dataframe is always named 'df' in your query's from clause.
                dataframe
            dfr rename	dataframe or lazyframe
                Rename a dataframe column.
                dataframe
            dfr replace	dataframe
                Replace the leftmost (sub)string by a regex pattern.
                dataframe
            dfr replace-all	dataframe
                Replace all (sub)strings by a regex pattern.
                dataframe
            dfr reverse	lazyframe
                Reverses the LazyFrame
                dataframe
            dfr rolling	dataframe
                Rolling calculation for a series.
                dataframe
            dfr sample	dataframe
                Create sample dataframe.
                dataframe
            dfr schema	dataframe
                Show schema for a dataframe.
                dataframe
            dfr select	lazyframe
                Selects columns from lazyframe.
                dataframe
            dfr set	dataframe
                Sets value where given mask is true.
                dataframe
            dfr set-with-idx	dataframe
                Sets value in the given index.
                dataframe
            dfr shape	dataframe
                Shows column and row size for a dataframe.
                dataframe
            dfr shift	dataframe or lazyframe
                Shifts the values by a given period.
                dataframe
            dfr slice	dataframe
                Creates new dataframe from a slice of rows.
                dataframe
            dfr sort-by	lazyframe
                Sorts a lazy dataframe based on expression(s).
                dataframe
            dfr std	expression
                Creates a std expression for an aggregation of std value from columns in a dataframe.
                dataframe
            dfr str-lengths	dataframe
                Get lengths of all strings.
                dataframe
            dfr str-slice	dataframe
                Slices the string from the start position until the selected length.
                dataframe
            dfr strftime	dataframe
                Formats date based on string rule.
                dataframe
            dfr sum	expression
                Creates a sum expression for an aggregation or aggregates columns to their sum value.
                dataframe
            dfr summary	dataframe
                For a dataframe, produces descriptive statistics (summary statistics) for its numeric columns.
                dataframe
            dfr take	dataframe
                Creates new dataframe using the given indices.
                dataframe
            dfr to-arrow	dataframe
                Saves dataframe to arrow file.
                dataframe
            dfr to-avro	dataframe
                Saves dataframe to avro file.
                dataframe
            dfr to-csv	dataframe
                Saves dataframe to CSV file.
                dataframe
            dfr to-jsonl	dataframe
                Saves dataframe to a JSON lines file.
                dataframe
            dfr to-parquet	dataframe
                Saves dataframe to parquet file.
                dataframe
            dfr unique	dataframe or lazyframe
                Returns unique values from a dataframe.
                dataframe
            dfr uppercase	dataframe
                Uppercase the strings in the column.
                dataframe
            dfr value-counts	dataframe
                Returns a dataframe with the counts for unique values in series.
                dataframe
            dfr var	expression
                Create a var expression for an aggregation.
                dataframe
            dfr when	expression
                Creates and modifies a when expression.
                dataframe
            dfr with-column	dataframe or lazyframe
                Adds a series to the dataframe.
                dataframe
            do	core
                Run a closure, providing it with the pipeline input.
                default
            drop	filters
                Remove items/rows from the end of the input list/table. Counterpart of `skip`. Opposite of `last`.
                default
            drop column	filters
                Remove N columns at the right-hand end of the input table. To remove columns by name, use `reject`.
                default
            drop nth	filters
                Drop the selected rows.
                default
            du	filesystem
                Find disk usage sizes of specified items.
                default
            each	filters
                Run a closure on each row of the input list, creating a new list with the results.
                default
            each while	filters
                Run a block on each row of the input list until a null is found, then create a new list with the results.
                extra
            echo	core
                Returns its arguments, ignoring the piped-in value.
                default
            encode	strings
                Encode a string into bytes.
                default
            encode base64	hash
                Encode a string or binary value using Base64.
                default
            encode hex	formats
                Encode a binary value using hex.
                extra
            enter	shells
                Enters a new shell at the given path.
                
            enumerate	filters
                Enumerate the elements in a stream.
                default
            error make	core
                Create an error.
                default
            every	filters
                Show (or skip) every n-th row, starting from the first one.
                default
            exec	system
                Execute a command, replacing or exiting the current process, depending on platform.
                default
            exit	shells
                Exit Nu.
                default
            explain	debug
                Explain closure contents.
                default
            explore	viewers
                Explore acts as a table pager, just like `less` does for text.
                default
            export	core
                Export definitions or environment variables from a module.
                default
            export alias	core
                Alias a command (with optional flags) to a new name and export it from a module.
                default
            export const	core
                Use parse-time constant from a module and export them from this module.
                default
            export def	core
                Define a custom command and export it from a module.
                default
            export extern	core
                Define an extern and export it from a module.
                default
            export module	core
                Export a custom module from a module.
                default
            export use	core
                Use definitions from a module and export them from this module.
                default
            export-env	env
                Run a block and preserve its environment in a current scope.
                default
            extern	core
                Define a signature for an external command.
                default
            fill	conversions
                Fill and Align.
                default
            filter	filters
                Filter values based on a predicate closure.
                default
            find	filters
                Searches terms in the input.
                default
            first	filters
                Return only the first several rows of the input. Counterpart of `last`. Opposite of `skip`.
                default
            flatten	filters
                Flatten the table.
                default
            fmt	conversions
                Format a number.
                extra
            for	core
                Loop over a range.
                default
            format	strings
                Various commands for formatting data.
                default
            format date	date
                Format a given date using a format string.
                default
            format duration	strings
                Outputs duration with a specified unit of time.
                default
            format filesize	strings
                Converts a column of filesizes to some specified format.
                default
            format pattern	strings
                Format columns into a string using a simple pattern.
                extra
            from	formats
                Parse a string or binary data into structured data.
                default
            from csv	formats
                Parse text as .csv and create table.
                default
            from eml	formats
                Parse text as .eml and create record.
                default
            from ics	formats
                Parse text as .ics and create table.
                default
            from ini	formats
                Parse text as .ini and create table.
                default
            from json	formats
                Convert from json to structured data.
                default
            from nuon	formats
                Convert from nuon to structured data.
                default
            from ods	formats
                Parse OpenDocument Spreadsheet(.ods) data and create table.
                default
            from ssv	formats
                Parse text as space-separated values and create a table. The default minimum number of spaces counted as a separator is 2.
                default
            from toml	formats
                Parse text as .toml and create record.
                default
            from tsv	formats
                Parse text as .tsv and create table.
                default
            from url	formats
                Parse url-encoded string as a record.
                extra
            from vcf	formats
                Parse text as .vcf and create table.
                default
            from xlsx	formats
                Parse binary Excel(.xlsx) data and create table.
                default
            from xml	formats
                Parse text as .xml and create record.
                default
            from yaml	formats
                Parse text as .yaml/.yml and create table.
                default
            from yml	formats
                Parse text as .yaml/.yml and create table.
                default
            g	shells
                Switch to a given shell, or list all shells if no given shell number.
                
            generate	generators
                Generate a list of values by successively invoking a closure.
                default
            get	filters
                Extract data using a cell path.
                default
            glob	filesystem
                Creates a list of files and/or folders based on the glob pattern provided.
                default
            grid	viewers
                Renders the output to a textual terminal grid.
                default
            group	filters
                Groups input into groups of `group_size`.
                default
            group-by	filters
                Splits a list or table into groups, and returns a record containing those groups.
                default
            gstat	prompt
                Get the git status of a repo
                default
            hash	hash
                Apply hash function.
                default
            hash md5	hash
                Hash a value using the md5 hash algorithm.
                default
            hash sha256	hash
                Hash a value using the sha256 hash algorithm.
                default
            headers	filters
                Use the first row of the table as column names.
                default
            help	core
                Display help information about different parts of Nushell.
                default
            help aliases	core
                Show help on nushell aliases.
                default
            help commands	core
                Show help on nushell commands.
                default
            help escapes	core
                Show help on nushell string escapes.
                default
            help externs	core
                Show help on nushell externs.
                default
            help modules	core
                Show help on nushell modules.
                default
            help operators	core
                Show help on nushell operators.
                default
            hide	core
                Hide definitions in the current scope.
                default
            hide-env	core
                Hide environment variables in the current scope.
                default
            histogram	chart
                Creates a new table with a histogram based on the column name passed in.
                default
            history	history
                Get the command history.
                default
            history session	history
                Get the command history session.
                default
            http	network
                Various commands for working with http methods.
                default
            http delete	network
                Delete the specified resource.
                default
            http get	network
                Fetch the contents from a URL.
                default
            http head	network
                Get the headers from a URL.
                default
            http options	network
                Requests permitted communication options for a given URL.
                default
            http patch	network
                Patch a body to a URL.
                default
            http post	network
                Post a body to a URL.
                default
            http put	network
                Put a body to a URL.
                default
            if	core
                Conditionally run a block.
                default
            ignore	core
                Ignore the output of the previous command in the pipeline.
                default
            inc	default
                Increment a value or version. Optionally use the column of a table.
                default
            input	platform
                Get input from the user.
                default
            input list	platform
                Interactive list selection.
                default
            input listen	platform
                Listen for user interface event.
                default
            insert	filters
                Insert a new column, using an expression or closure to create each row's values.
                default
            inspect	debug
                Inspect pipeline results while running a pipeline.
                default
            interleave	filters
                Read multiple streams in parallel and combine them into one stream.
                default
            into	conversions
                Commands to convert data from one type to another.
                default
            into binary	conversions
                Convert value to a binary primitive.
                default
            into bits	conversions
                Convert value to a binary primitive.
                extra
            into bool	conversions
                Convert value to boolean.
                default
            into cell-path	conversions
                Convert value to a cell-path.
                default
            into datetime	conversions
                Convert text or timestamp into a datetime.
                default
            into duration	conversions
                Convert value to duration.
                default
            into filesize	conversions
                Convert value to filesize.
                default
            into float	conversions
                Convert data into floating point number.
                default
            into glob	conversions
                Convert value to glob.
                default
            into int	conversions
                Convert value to integer.
                default
            into record	conversions
                Convert value to record.
                default
            into sqlite	conversions
                Convert table into a SQLite database.
                default
            into string	conversions
                Convert value to string.
                default
            into value	filters
                Infer nushell datatype for each cell.
                default
            is-admin	core
                Check if nushell is running with administrator or root privileges.
                default
            is-empty	filters
                Check for empty values.
                default
            is-not-empty	filters
                Check for non-empty values.
                default
            is-terminal	platform
                Check if stdin, stdout, or stderr is a terminal.
                default
            items	filters
                Given a record, iterate on each pair of column name and associated value.
                default
            join	filters
                Join two tables.
                default
            keybindings	platform
                Keybindings related commands.
                default
            keybindings default	platform
                List default keybindings.
                default
            keybindings list	platform
                List available options that can be used to create keybindings.
                default
            keybindings listen	platform
                Get input from the user.
                default
            kill	platform
                Kill a process using the process id.
                default
            last	filters
                Return only the last several rows of the input. Counterpart of `first`. Opposite of `drop`.
                default
            lazy make	core
                Create a lazy record.
                default
            length	filters
                Count the number of items in an input list or rows in a table.
                default
            let	core
                Create a variable and give it a value.
                default
            let-env	removed
                `let-env FOO = ...` has been removed, use `$env.FOO = ...` instead.
                default
            lines	filters
                Converts input to lines.
                default
            load-env	filesystem
                Loads an environment update from a record.
                default
            loop	core
                Run a block in a loop.
                default
            ls	filesystem
                List the filenames, sizes, and modification times of items in a directory.
                default
            match	core
                Conditionally run a block on a matched value.
                default
            math	math
                Use mathematical functions as aggregate functions on a list of numbers or tables.
                default
            math abs	math
                Returns the absolute value of a number.
                default
            math arccos	math
                Returns the arccosine of the number.
                extra
            math arccosh	math
                Returns the inverse of the hyperbolic cosine function.
                extra
            math arcsin	math
                Returns the arcsine of the number.
                extra
            math arcsinh	math
                Returns the inverse of the hyperbolic sine function.
                extra
            math arctan	math
                Returns the arctangent of the number.
                extra
            math arctanh	math
                Returns the inverse of the hyperbolic tangent function.
                extra
            math avg	math
                Returns the average of a list of numbers.
                default
            math ceil	math
                Returns the ceil of a number (smallest integer greater than or equal to that number).
                default
            math cos	math
                Returns the cosine of the number.
                extra
            math cosh	math
                Returns the hyperbolic cosine of the number.
                extra
            math exp	math
                Returns e raised to the power of x.
                extra
            math floor	math
                Returns the floor of a number (largest integer less than or equal to that number).
                default
            math ln	math
                Returns the natural logarithm. Base: (math e).
                extra
            math log	math
                Returns the logarithm for an arbitrary base.
                default
            math max	math
                Returns the maximum of a list of values, or of columns in a table.
                default
            math median	math
                Computes the median of a list of numbers.
                default
            math min	math
                Finds the minimum within a list of values or tables.
                default
            math mode	math
                Returns the most frequent element(s) from a list of numbers or tables.
                default
            math product	math
                Returns the product of a list of numbers or the products of each column of a table.
                default
            math round	math
                Returns the input number rounded to the specified precision.
                default
            math sin	math
                Returns the sine of the number.
                extra
            math sinh	math
                Returns the hyperbolic sine of the number.
                extra
            math sqrt	math
                Returns the square root of the input number.
                default
            math stddev	math
                Returns the standard deviation of a list of numbers, or of each column in a table.
                default
            math sum	math
                Returns the sum of a list of numbers or of each column in a table.
                default
            math tan	math
                Returns the tangent of the number.
                extra
            math tanh	math
                Returns the hyperbolic tangent of the number.
                extra
            math variance	math
                Returns the variance of a list of numbers or of each column in a table.
                default
            merge	filters
                Merge the input with a record or table, overwriting values in matching columns.
                default
            metadata	debug
                Get the metadata for items in the stream.
                default
            mkdir	filesystem
                Create directories, with intermediary directories if required using uutils/coreutils mkdir.
                default
            mktemp	filesystem
                Create temporary files or directories using uutils/coreutils mktemp.
                default
            module	core
                Define a custom module.
                default
            move	filters
                Move columns before or after other columns.
                default
            mut	core
                Create a mutable variable and give it a value.
                default
            mv	filesystem
                Move files or directories using uutils/coreutils mv.
                default
            n	shells
                Switch to the next shell.
                
            nu-check	strings
                Validate and parse input content.
                default
            nu-highlight	strings
                Syntax highlight the input string.
                default
            open	filesystem
                Load a file into a cell, converting to table if possible (avoid by appending '--raw').
                default
            overlay	core
                Commands for manipulating overlays.
                default
            overlay hide	core
                Hide an active overlay.
                default
            overlay list	core
                List all active overlays.
                default
            overlay new	core
                Create an empty overlay.
                default
            overlay use	core
                Use definitions from a module as an overlay.
                default
            p	shells
                Switch to the previous shell.
                
            panic	experimental
                Executes a rust panic, useful only for testing.
                default
            par-each	filters
                Run a closure on each row of the input list in parallel, creating a new list with the results.
                default
            parse	strings
                Parse columns from string data using a simple pattern.
                default
            path	path
                Explore and manipulate paths.
                default
            path basename	path
                Get the final component of a path.
                default
            path dirname	path
                Get the parent directory of a path.
                default
            path exists	path
                Check whether a path exists.
                default
            path expand	path
                Try to expand a path to its absolute form.
                default
            path join	path
                Join a structured path or a list of path parts.
                default
            path parse	path
                Convert a path into structured data.
                default
            path relative-to	path
                Express a path as relative to another path.
                default
            path split	path
                Split a path into a list based on the system's path separator.
                default
            path type	path
                Get the type of the object a path refers to (e.g., file, dir, symlink).
                default
            port	network
                Get a free port from system.
                default
            prepend	filters
                Prepend any number of rows to a table.
                default
            print	strings
                Print the given values to stdout.
                default
            ps	system
                View information about system processes.
                default
            query	filters
                Show all the query commands
                default
            query db	database
                Query a database using SQL.
                default
            query json	filters
                execute json query on json file (open --raw <file> | query json 'query string')
                default
            query web	network
                execute selector query on html/web
                default
            query xml	filters
                execute xpath query on xml
                default
            random	random
                Generate a random value.
                default
            random bool	random
                Generate a random boolean value.
                default
            random chars	random
                Generate random chars.
                default
            random dice	random
                Generate a random dice roll.
                default
            random float	random
                Generate a random float within a range [min..max].
                default
            random int	random
                Generate a random integer [min..max].
                default
            random uuid	random
                Generate a random uuid4 string.
                default
            range	filters
                Return only the selected rows.
                default
            reduce	filters
                Aggregate a list to a single value using an accumulator closure.
                default
            register	core
                Register a plugin.
                default
            registry query	system
                Query the Windows registry.
                
            reject	filters
                Remove the given columns or rows from the table. Opposite of `select`.
                default
            rename	filters
                Creates a new table with columns renamed.
                default
            return	core
                Return early from a function.
                default
            reverse	filters
                Reverses the input list or table.
                default
            rm	filesystem
                Remove files and directories.
                default
            roll	filters
                Rolling commands for tables.
                extra
            roll down	filters
                Roll table rows down.
                extra
            roll left	filters
                Roll record or table columns left.
                extra
            roll right	filters
                Roll table columns right.
                extra
            roll up	filters
                Roll table rows up.
                extra
            rotate	filters
                Rotates a table or record clockwise (default) or counter-clockwise (use --ccw flag).
                extra
            run-external	system
                Runs external command.
                default
            save	filesystem
                Save a file.
                default
            schema	database
                Show the schema of a SQLite database.
                default
            scope	core
                Commands for getting info about what is in scope.
                default
            scope aliases	core
                Output info on the aliases in the current scope.
                default
            scope commands	core
                Output info on the commands in the current scope.
                default
            scope engine-stats	core
                Output stats on the engine in the current state.
                default
            scope externs	core
                Output info on the known externals in the current scope.
                default
            scope modules	core
                Output info on the modules in the current scope.
                default
            scope variables	core
                Output info on the variables in the current scope.
                default
            select	filters
                Select only these columns or rows from the input. Opposite of `reject`.
                default
            seq	generators
                Output sequences of numbers.
                default
            seq char	generators
                Print a sequence of ASCII characters.
                default
            seq date	generators
                Print sequences of dates.
                default
            shells	shells
                Lists all open shells.
                
            shuffle	filters
                Shuffle rows randomly.
                default
            skip	filters
                Skip the first several rows of the input. Counterpart of `drop`. Opposite of `first`.
                default
            skip until	filters
                Skip elements of the input until a predicate is true.
                default
            skip while	filters
                Skip elements of the input while a predicate is true.
                default
            sleep	platform
                Delay for a specified amount of time.
                default
            sort	filters
                Sort in increasing order.
                default
            sort-by	filters
                Sort by the given columns, in increasing order.
                default
            source	core
                Runs a script file in the current context.
                default
            source-env	core
                Source the environment from a source file into the current environment.
                default
            split	strings
                Split contents across desired subcommand (like row, column) via the separator.
                default
            split chars	strings
                Split a string into a list of characters.
                default
            split column	strings
                Split a string into multiple columns using a separator.
                default
            split list	filters
                Split a list into multiple lists using a separator.
                default
            split row	strings
                Split a string into multiple rows using a separator.
                default
            split words	strings
                Split a string's words into separate rows.
                default
            split-by	filters
                Split a record into groups.
                default
            start	filesystem
                Open a folder, file or website in the default application or viewer.
                default
            stor	database
                Various commands for working with the in-memory sqlite database.
                default
            stor create	database
                Create a table in the in-memory sqlite database.
                default
            stor delete	database
                Delete a table or specified rows in the in-memory sqlite database.
                default
            stor export	database
                Export the in-memory sqlite database to a sqlite database file.
                default
            stor import	database
                Import a sqlite database file into the in-memory sqlite database.
                default
            stor insert	database
                Insert information into a specified table in the in-memory sqlite database.
                default
            stor open	database
                Opens the in-memory sqlite database.
                default
            stor reset	database
                Reset the in-memory database by dropping all tables.
                default
            stor update	database
                Update information in a specified table in the in-memory sqlite database.
                default
            str	strings
                Various commands for working with string data.
                extra
            str camel-case	strings
                Convert a string to camelCase.
                extra
            str capitalize	strings
                Capitalize first letter of text.
                default
            str contains	strings
                Checks if string input contains a substring.
                default
            str distance	strings
                Compare two strings and return the edit distance/Levenshtein distance.
                default
            str downcase	strings
                Make text lowercase.
                default
            str ends-with	strings
                Check if an input ends with a string.
                default
            str escape-glob	strings
                Escape glob pattern.
                default
            str expand	strings
                Generates all possible combinations defined in brace expansion syntax.
                default
            str index-of	strings
                Returns start index of first occurrence of string in input, or -1 if no match.
                default
            str join	strings
                Concatenate multiple strings into a single string, with an optional separator between each.
                default
            str kebab-case	strings
                Convert a string to kebab-case.
                extra
            str length	strings
                Output the length of any strings in the pipeline.
                default
            str pascal-case	strings
                Convert a string to PascalCase.
                extra
            str replace	strings
                Find and replace text.
                default
            str reverse	strings
                Reverse every string in the pipeline.
                default
            str screaming-snake-case	strings
                Convert a string to SCREAMING_SNAKE_CASE.
                extra
            str snake-case	strings
                Convert a string to snake_case.
                extra
            str starts-with	strings
                Check if an input starts with a string.
                default
            str stats	strings
                Gather word count statistics on the text.
                default
            str substring	strings
                Get part of a string. Note that the start is included but the end is excluded, and that the first character of a string is index 0.
                default
            str title-case	strings
                Convert a string to Title Case.
                extra
            str trim	strings
                Trim whitespace or specific character.
                default
            str upcase	strings
                Make text uppercase.
                default
            sys	system
                View information about the system.
                default
            table	viewers
                Render the table.
                default
            take	filters
                Take only the first n elements of a list, or the first n bytes of a binary value.
                default
            take until	filters
                Take elements of the input until a predicate is true.
                default
            take while	filters
                Take elements of the input while a predicate is true.
                default
            tee	filters
                Copy a stream to another command in parallel.
                default
            term size	platform
                Returns a record containing the number of columns (width) and rows (height) of the terminal.
                default
            timeit	debug
                Time the running time of a block.
                default
            to	formats
                Translate structured data to a format.
                default
            to csv	formats
                Convert table into .csv text .
                default
            to html	formats
                Convert table into simple HTML.
                extra
            to json	formats
                Converts table data into JSON text.
                default
            to md	formats
                Convert table into simple Markdown.
                default
            to nuon	formats
                Converts table data into Nuon (Nushell Object Notation) text.
                default
            to text	formats
                Converts data into simple text.
                default
            to toml	formats
                Convert record into .toml text.
                default
            to tsv	formats
                Convert table into .tsv text.
                default
            to xml	formats
                Convert special record structure into .xml text.
                default
            to yaml	formats
                Convert table into .yaml/.yml text.
                default
            touch	filesystem
                Creates one or more files.
                default
            transpose	filters
                Transposes the table contents so rows become columns and columns become rows.
                default
            try	core
                Try to run a block, if it fails optionally run a catch block.
                default
            tutor	misc
                Run the tutorial. To begin, run: tutor.
                default
            ulimit	platform
                Set or get resource usage limits.
                default
            uniq	filters
                Return the distinct values in the input.
                default
            uniq-by	filters
                Return the distinct values in the input by the given column(s).
                default
            update	filters
                Update an existing column to have a new value.
                default
            update cells	filters
                Update the table cells.
                extra
            upsert	filters
                Update an existing column to have a new value, or insert a new column.
                default
            url	network
                Various commands for working with URLs.
                default
            url build-query	network
                Converts record or table into query string applying percent-encoding.
                default
            url decode	strings
                Converts a percent-encoded web safe string to a string.
                default
            url encode	strings
                Converts a string to a percent encoded web safe string.
                default
            url join	network
                Converts a record to url.
                default
            url parse	network
                Parses a url.
                default
            use	core
                Use definitions from a module, making them available in your shell.
                default
            values	filters
                Given a record or table, produce a list of its columns' values.
                default
            version	core
                Display Nu version, and its build configuration.
                default
            view	debug
                Various commands for viewing debug information.
                default
            view files	debug
                View the files registered in nushell's EngineState memory.
                default
            view source	debug
                View a block, module, or a definition.
                default
            view span	debug
                View the contents of a span.
                default
            watch	filesystem
                Watch for file changes and execute Nu code when they happen.
                default
            where	filters
                Filter values based on a row condition.
                default
            which	system
                Finds a program file, alias or custom command.
                default
            while	core
                Conditionally run a block in a loop.
                default
            whoami	platform
                Get the current username using uutils/coreutils whoami.
                default
            window	filters
                Creates a sliding window of `window_size` that slide by n rows/elements across input.
                default
            with-env	env
                Runs a block with an environment variable set.
                default
            wrap	filters
                Wrap the value into a column.
                default
            zip	filters
                Combine a stream with the input.
                default
Xonsh

top
                        Window 1:Def: Cumulative mode Off.  System: Delay 3,0 secs; Secure mode Off.
                        Z,B,E,e   Global: 'Z' colors; 'B' bold; 'E'/'e' summary/task memory scale
                    l,t,m,I   Toggle: 'l' load avg; 't' task/cpu; 'm' memory; 'I' Irix mode
                        0,1,2,3,4 Toggle: '0' zeros; '1/2/3' cpu/numa views; '4' cpus two abreast
                        f,F,X     Fields: 'f'/'F' add/remove/order/sort; 'X' increase fixed-width

                        L,&,<,> . Locate: 'L'/'&' find/again; Move sort column: '<'/'>' left/right
                        R,H,J,C . Toggle: 'R' Sort; 'H' Threads; 'J' Num justify; 'C' Coordinates
                        c,i,S,j . Toggle: 'c' Cmd name/line; 'i' Idle; 'S' Time; 'j' Str justify
                    x,y     . Toggle highlights: 'x' sort field; 'y' running tasks
                    z,b     . Toggle: 'z' color/mono; 'b' bold/reverse (only if 'x' or 'y')
                    u,U,o,O . Filter by: 'u'/'U' effective/any user; 'o'/'O' other criteria
                        n,#,^O  . Set: 'n'/'#' max tasks displayed; Show: Ctrl+'O' other filter(s)
                    V,v     . Toggle: 'V' forest view; 'v' hide/show forest view children
                    k,r       Manipulate tasks: 'k' kill; 'r' renice
                        .
                        .
                        d or s    Set update interval
                    W,Y,!     Write config file 'W'; Inspect other output 'Y'; Combine Cpus '!'
                        q         Quit
                              ( commands shown with '.' require a visible task display window ) 
                    Press 'h' or '?' for help with Windows,
                        .
                        .
                        Type 'q' or <Esc> to continue 
ps
jobs

Man: Index/Categories
                Part I User Commands ----
                    addftinfo
                    afmtodit
                    ansi2knr
                    anytopnm
                    appres
                    ar
                    arch
                    GNU as
                    asciitopgm
                    atktopbm
                    bash
                    bdftopcf
                    beforelight
                    biff
                    bioradtopgm
                    bitmap, bmtoa, atobm
                    bmptoppm
                    brushtopbm
                    cal
                    cat
                    chattr
                    chfn
                    chgrp
                    chkdupexe
                    chmod
                    chown
                    chsh
                    ci
                    cidentd
                    cksum
                    clear
                    cmuwmtopbm
                    co
                    col
                    colcrt
                    colrm
                    column
                    comm
                    convdate
                    cp
                    cccp, cpp
                    crontab
                    csplit
                    ctags
                    cu
                    cut
                    cvs
                    date
                    dd
                    depmod, modprobe
                    df
                    dig
                    dnsquery
                    domainname
                    dsplit
                    du
                    editres
                    elvis, ex, vi, view, input
                    elvprsv
                    elvrec
                    emacs
                    emacstool
                    etags
                    expand
                    find
                    fitstopnm
                    fmt
                    fold
                    free
                    fsinfo
                    fslsfonts
                    fstobdf
                    fstopgm
                    ftp
                    fuser
                    g++
                    g3topbm
                    gawk
                    gcal
                    gcc, g++
                    gemtopbm
                    geqn
                    getlist
                    getopt
                    giftopnm
                    gindxbib
                    glookbib
                    gnroff
                    gouldtoppm
                    gpic
                    gprof
                    grefer
                    grep, egrep, fgrep
                    grephistory
                    grodvi
                    groff
                    grog
                    grops
                    grotty
                    gsoelim
                    gtbl
                    gtroff
                    gzip, gunzip, zcatgzip, gunzip, zcat
                    gzexe
                    head
                    hexdump
                    hipstopgm
                    host
                    hostid
                    hostname
                    hpcdtoppm v0.3
                    httpd
                    icontopbm
                    ident
                    ilbmtoppm
                    imake
                    imgtoppm
                    inews
                    info
                    innconfval
                    insmod
                    install
                    installit
                    ispell, buildhash, munchlist, findaffix, tryaffix, icombine, ijoin
                    join
                    kill
                    killall
                    ksyms
                    last
                    lbxproxy
                    ld
                    lispmtopgm
                    lkbib
                    ln
                    lndir
                    locate
                    logger
                    login
                    look
                    lpq
                    lpr
                    lprm
                    lptest
                    ls, dir, vdir
                    lsattr
                    lsmod
                    lynx
                    macptopbm
                    make
                    makedepend
                    makestrs
                    mattrib
                    mbadblocks
                    mcd
                    mcookie
                    mcopy
                    md5sum
                    mdel
                    mdeltree
                    mdir
                    merge
                    mesg
                    mformat
                    mgrtopbm
                    mkdir
                    mkdirhier
                    mkfifo
                    mkmanifest
                    mknod
                    mlabel
                    mmd
                    mmount
                    mmove
                    more
                    mrd
                    mread
                    mren
                    mtest
                    mtools
                    mtvtoppm
                    mtype
                    mv
                    mwrite
                    namei
                    newaliases
                    newgrp
                    nl
                    nlmconv
                    nm
                    nntpget
                    objcopy
                    objdump
                    oclock
                    od
                    passwd
                    paste
                    pbmclean
                    pbmfilters
                    pbmlife
                    pbmmake
                    pbmmask
                    pbmpscale
                    pbmreduce
                    pbmtext
                    pbmto10x
                    pbmto4425
                    pbmtoascii
                    pbmtoatk
                    pbmtobg
                    pbmtocmuwm
                    pbmtoepsi
                    pbmtoepson
                    pbmtog3
                    pbmtogem
                    pbmtogo
                    pbmtoicon
                    pbmtolj
                    pbmtoln03
                    pbmtolps
                    pbmtomacp
                    pbmtomgr
                    pbmtopgm
                    pbmtopi3
                    pbmtopk
                    pbmtoplot
                    pbmtoptx
                    pbmtox10bm
                    pbmtoxbm
                    pgmtoybm
                    pbmtozinc
                    pbmupc
                    pcxtoppm
                    pfbtops
                    pgmbentley
                    pgmcrater
                    pgmedge
                    pgmenhance
                    pgmhist
                    pgmkernel
                    pgmnoise
                    pgmnorm
                    pgmoil
                    pgmramp
                    pgmtexture
                    pgmtofs
                    pgmtolispm
                    pgmtopbm
                    pgmtoppm
                    pi1toppm
                    pi3topbm
                    picttoppm
                    pjtoppm
                    pktopbm
                    pnmalias
                    pnmarith
                    pnmcat
                    pnmcomp
                    pnmconvol
                    pnmcrop
                    pnmcut
                    pnmdepth
                    pnmenlarge
                    pnmfile
                    pnmflip
                    pnmgamma
                    pnmhistmap
                    pnmindex
                    pnminvert
                    pnmmargin
                    pnmnlfilt
                    pnmnoraw
                    pnmpad
                    pnmpaste
                    pnmrotate
                    pnmscale
                    pnmshear
                    pnmsmooth
                    pnmtile
                    pnmtoddif
                    pnmtofits
                    pnmtops
                    pnmtorast
                    pnmtosgi
                    pnmtosir
                    pnmtotiff
                    pnmtoxwd
                    ppm3d
                    ppmbrighten
                    ppmchange
                    ppmdim
                    ppmdist
                    ppmdither
                    ppmflash
                    ppmforge
                    ppmhist
                    ppmmake
                    ppmmix
                    ppmnorm
                    ppmntsc
                    ppmpat
                    ppmquant
                    ppmquantall
                    ppmqvga
                    ppmrelief
                    ppmshift
                    ppmspread
                    ppmtoacad
                    ppmtobmp
                    ppmtogif
                    ppmtoicr
                    ppmtoilbm
                    ppmtomap
                    ppmtomitsu
                    ppmtopcx
                    ppmtopgm
                    ppmtopi1
                    ppmtopict
                    ppmtopj
                    ppmtopjxl
                    ppmtopuzz
                    ppmtorgb3
                    ppmtosixel
                    ppmtotga
                    ppmtouil
                    ppmtoxpm
                    ppmtoyuv
                    ppmtoyuvsplit
                    pr
                    ps
                    psbb
                    psidtopgm
                    pstopnm
                    pstree
                    psupdate
                    qrttoppm
                    quota
                    ranlib
                    rasttopnm
                    rawtopgm
                    rawtoppm
                    rcp
                    rcs
                    rcsclean
                    rcsdiff
                    rcsfreeze
                    rcsintro
                    rcsmerge
                    rdist
                    xixii
                    reconfig
                    ref
                    reset
                    resize
                    rev
                    rgb3toppm
                    rlog
                    rlogin
                    rm
                    rmdir
                    rmmod
                    rnews
                    rpcgen
                    rsh
                    rstart
                    rstartd
                    rup
                    rusers
                    rwall
                    rwho
                    script
                    sed
                    sessreg
                    setterm
                    sgitopnm
                    shar
                    shlock
                    showrgb
                    shrinkfile
                    sirtopnm
                    size
                    sldtoppm
                    smproxy
                    sort
                    spctoppm
                    split
                    spottopgm
                    sputoppm
                    sq
                    startx
                    strings
                    strip
                    subst
                    sum
                    SuperProbe
                    tac
                    tail
                    talk
                    tcal
                    telnet
                    tfmtodit
                    tftp
                    tgatoppm
                    tifftopnm
                    tin, rtin, cdtin, tind
                    tload
                    top
                    touch
                    tr
                    tset, reset
                    tsort
                    twm
                    txt2gcal
                    ul
                    unexpand
                    uniq
                    unshar
                    updatedb
                    uptime
                    userlist
                    uucp
                    uuencode
                    uustat
                    uux
                    uuxqt
                    w
                    wall
                    wc
                    whereis
                    write
                    x11perf
                    x11perfcomp
                    xargs
                    xauth
                    xbmtopbm
                    xcmsdb
                    xclock
                    xclipboard
                    xconsole
                    xcutsel
                    xdm
                    xdpyinfo
                    Xf86_Accel
                    XF86_Mono
                    XF86_SVGA
                    XF86_VGA16
                    xf86config
                    xfd
                    XFree86
                    xfs
                    xhost
                    xieperf
                    ximtoppm
                    xinetd
                    xinit
                    xkill
                    xlogo
                    xlsatoms
                    xlsclients
                    xlsfonts
                    xmag
                    xmkmf
                    xmodmap
                    xon
                    xpmtoppm
                    xprop
                    xrdb
                    xrefresh
                    Xserver
                    xset
                    xsetroot
                    xsm
                    xsmclient
                    xstdcmap
                    xterm
                    Xvfb
                    xvidtune
                    xvminitoppm
                    xwd
                    xwdtopnm
                    xwininfo
                    xwud
                    ybmtopbm
                    ytalk
                    yuvplittoppm
                    yuvtoppm
                    zcmp, zdiff
                    zeisstopnm
                    zforce
                    zgrep
                    zmore
                    znew
                Part II System Calls ----
                    exit
                    accept
                    access
                    acct
                    adjtimex
                    alarm
                    bdflush
                    bind
                    brk, sbrk
                    cacheflush
                    chdir, fchdir
                    chmod, fchmod
                    chown, fchown
                    chroot
                    clone
                    close
                    connect
                    dup, dup2
                    execve
                    fcntl
                    fdatasync
                    flock
                    fork, vfork
                    fsync
                    getdents
                    getdomainname, setdomainname
                    getdtablesize
                    getgid, getegid
                    getgroups, setgroups
                    gethostid, sethostid
                    gethostname, sethostname
                    getitimer, setitimer
                    getpagesize
                    getpeername
                    getpid, getppid
                    getpriority, setpriority
                    getrlimit, getrusage, setrlimit
                    getsid
                    getsockname
                    getsockopt, setsockopt
                    gettimeofday, settimeofday
                    getuid, geteuid
                    idle
                    ioctl
                    ioperm
                    iopl
                    ipc
                    kill
                    killpg
                    link
                    listen
                    llseek
                    lseek
                    mkdir
                    mknod
                    mlock
                    mlockall
                    mmap, munmap
                    modify_ldt
                    get_kernel_syms, create_module, init_module, delete_module
                    mount, umount
                    mprotect
                    mremap
                    msgctl
                    msgget
                    msgop
                    msync
                    munlock
                    munlockall
                    nanosleep
                    nice
                    oldfstat, oldlstat, oldstat, oldolduname, olduname
                    open, creat
                    outb, outw, outl, outsb, outsw, outsl
                    pause
                    personality
                    phys
                    pipe
                    profil
                    ptrace
                    quotactl
                    read
                    readdir
                    readlink
                    readv, writev
                    reboot
                    recv, recvfrom, recvmsg
                    rename
                    rmdir
                    sched_get_priority_max, sched_get_priority_min
                    sched_rr_get_interval
                    sched_setparam, sched_getparam
                    sched_setscheduler, sched_getscheduler
                    sched_yield
                    select, FD_CLR, FD_ISSET, FD_SET, FD_ZERO
                    semctl
                    semget
                    semop
                    send, sendto, sendmsg
                    setfsgid
                    setfsuid
                    setgid
                    setpgid, getpgid, setpgrp, getpgrp
                    setregid, setegid
                    setreuid, seteuid
                    setsid
                    setuid
                    setup
                    shmctl
                    shmget
                    shmop
                    shutdown
                    sigaction, sigprocmask, sigpending, sigsuspend
                    signal
                    sigblock, siggetmask, sigsetmask, sigmask
                    sigpause
                    sigreturn
                    sigvec
                    socket
                    socketcall
                    socketpair
                    stat, fstat, lstat
                    statfs, fstatfs
                    stime
                    swapon, swapoff
                    symlink
                    sync
                    sysctl
                    sysfs
                    sysinfo
                    syslog
                    termios, tcgetattr, tcsetattr, tcsendbreak, tcdrain, tcflush, tcflow, cfgetospeed,
                    cfgetispeed, cfsetispeed, cfsetospeed, tcgetpgrp, tcsetpgrp
                    time
                    times
                    truncate, ftruncate
                    umask
                    uname
                    none
                    afs_syscall, break, gtty, lock, mpx, prof, quotactl, stty, ustat
                    unlink
                    uselib
                    ustat
                    utime, utimes
                    vhangup
                    vm86
                    wait, waitpid
                    wait3, wait4
                    write
                Part III Library Functions ----
                    abort
                    abs
                    acos
                    acosh
                    alloca
                    asin
                    asinh
                    assert
                    atan
                    atan2
                    atanh
                    atexit
                    atof
                    atoi
                    atol
                    bcmp
                    bcopy
                    bsearch
                    bcmp, bcopy, bzero, memccpy, memchr, memcmp, memcpy, memfrob, memmem,
                    memmove, memset
                    htonl, htons, ntohl, ntohs
                    bzero
                    catgets
                    catopen, catclose
                    ceil
                    clientlib
                    clock
                    closedir
                    confstr
                    copysign
                    cos
                    cosh
                    crypt
                    ctermid
                    asctime, ctime, gmtime, localtime, mktime
                    difftime
                    div
                    drand48, erand48, lrand48, nrand48, mrand48, jrand48, srand48,
                    seed48, lcong48
                    drem
                    ecvt, fcvt
                    erf, erfc
                    execl, execlp, execle, exect, execv, execvp
                    errno
                    exit
                    exp, log, log10, pow
                    expm1, log1p
                    fabs
                    fclose
                    clearerr, feof, ferror, fileno
                    fflush, fpurge
                    ffs
                    fgetgrent
                    fgetpwent
                    floor
                    fmod
                    fnmatch
                    fopen, fdopen, freopen
                    fpathconf, pathconf
                    fread, fwrite
                    frexp
                    fgetpos, fseek, fsetpos, ftell, rewind
                    ftime
                    ftok
                    ftw
                    gcvt
                    getcwd, get_current_dir_name, getwd
                    getdirentries
                    getenv
                    getgrent, setgrent, endgrent
                    getgrnam, getgrgid
                    getlogin, cuserid
                    getmntent, setmntent, addmntent, endmntent, hasmntopt
                    getnetent, getnetbyaddr, getnetbyname, setnetent, endnetent
                    getopt
                    getpass
                    getprotoent, getprotobyname, getprotobynumber, setprotoent, endprotoent
                    getpw
                    getpwent, setpwent, endpwent
                    getpwnam, getpwuid
                    fgetc, fgets, getc, getchar, gets, ungetc
                    getservent, getservbyname, getservbyport, setservent, endservent
                    getusershell, setusershell, endusershell
                    getutent, getutid, getutline, pututline, setutent, endutent, utmpname
                    getw, putw
                    glob, globfree
                    hosts_access, hosts_ctl
                    hcreate, hdestroy, hsearch
                    hypot
                    index, rindex
                    inet_aton, inet_addr, inet_network, inet_ntoa, inet_makeaddr, inet_lnaof,
                    inet_netof
                    infnan
                    initgroups
                    inndcomm
                    insque, remque
                    isalnum, isalpha, isascii, isblank, iscntrl, isdigit, isgraph, islower, isprint,
                    ispunct, isspace, isupper, isxdigit
                    isatty
                    isinf, isnan, finite
                    j0, j1, jn, y0, y1, yn
                    killpg
                    labs
                    ldexp
                    ldiv
                    lgamma
                    libinn
                    libpbm
                    libpgm
                    libpnm
                    libppm
                    localeconv
                    longjmp
                    lfind, lsearch
                    calloc, malloc, free, realloc
                    mblen
                    mbstowcs
                    mbtowc
                    memccpy
                    memchr
                    memcmp
                    memcpy
                    memfrob
                    memmem
                    memmove
                    memset
                    mkfifo
                    mkstemp
                    mktemp
                    modf
                    asctime, ctime, difftime, gmtime, localtime, mktime
                    tzset
                    on_exit
                    opendir
                    parsedate
                    perror
                    popen, pclose
                    printf, fprintf, sprintf, snprintf, vprintf, vfprintf, vsprintf, vsnprintf
                    psignal
                    putenv
                    putpwent
                    fputc, fputs, putc, putchar, puts
                    qio
                    qsort
                    raise
                    rand, srand
                    random, srandom, initstate, setstate
                    readdir
                    readv, writev
                    realpath
                    Re_comp, re_exec
                    regcomp, regexec, regerror, regfree
                    remove
                    res_query, res_search, res_mkquery, res_send, res_init, dn_comp,
                    dn_expand
                    rewinddir
                    rint
                    rquota
                    scandir, alphasort
                    scanf, fscanf, sscanf, vscanf, vsscanf, vfscanf
                    seekdir
                    setbuf, setbuffer, setlinebuf, setvbuf
                    setenv
                    setjmp
                    setlocale
                    siginterrupt
                    sigemptyset, sigfillset, sigaddset, sigdelset, sigismember
                    sin
                    sinh
                    sleep
                    snprintf, vsnprintf
                    sqrt
                    stdarg
                    stdio
                    stpcpy
                    strcasecmp, strncasecmp
                    strcat, strncat
                    strchr, strrchr
                    strcmp, strncmp
                    strcoll
                    strcpy, strncpy
                    strdup
                    strerror
                    strfry
                    strftime
                    strcasecmp, strcat, strchr, strcmp, strcoll, strcpy, strcspn, strdup, strfry,
                    strlen, strncat, strncmp, strncpy, strncasecmp, strpbrk, strrchr, strsep,
                    strspn, strstr, strtok, strxfrm, index, rindex
                    strlen
                    strpbrk
                    strptime
                    strsep
                    strsignal
                    strspn, strcspn
                    strstr
                    strtod
                    strtok
                    strtol
                    strtoul
                    strxfrm
                    swab
                    sysconf
                    closelog, openlog, syslog
                    system
                    tan
                    tanh
                    telldir
                    tempnam
                    termios, tcgetattr, tcsetattr, tcsendbreak, tcdrain, tcflush, tcflow, cfmakeraw,
                    cfgetospeed, cfgetispeed, cfsetispeed, cfsetospeed, tcgetpgrp, tcsetpgrp
                    tmpfile
                    tmpnam
                    toascii
                    toupper, tolower
                    tsearch, tfind, tdelete, twalk
                    ttyname
                    tzset
                    none
                    usleep
                    wcstombs
                    wctomb
                Part IV Special Files ----
                    charsets
                    console
                    console_codes
                    console ioctls
                    fd
                    hd
                    ispell
                    lp
                    mem, kmem, port
                    mouse
                    null, zero
                    ram
                    sd
                    st
                    tty
                    ttys
                    vcs, vcsa
                Part V File Formats ----
                    active, active.times
                    adduser.conf
                    aliases
                    xxiiixxiv
                    Linux Complete Command Reference
                    cfingerd
                    cfingerd.conf
                    cfingerd text rules
                    control.ctl
                    cvs
                    DEVINFO
                    environ
                    expire.ctl
                    exports
                    filesystems
                    fstab
                    groff_font
                    groff_out
                    group
                    history
                    hosts.nntp, hosts.nntp.nolimit
                    hosts_access
                    hosts_options
                    inittab
                    inn.conf
                    innwatch.ctl
                    ipc
                    issue
                    lilo.conf
                    MAKEDEV.cfg
                    moderators
                    /etc/modules
                    motd
                    mtools
                    newsfeeds
                    newslog
                    nfs
                    nnrp.access
                    nntpsend.ctl
                    nologin
                    overview.fmt
                    passwd
                    passwd.nntp
                    pbm
                    pgm
                    pnm
                    ppm
                    /proc
                    protocols
                    rcsfile
                    resolver
                    securetty
                    services
                    shells
                    syslog.conf
                    termcap
                    ttytype
                    tzfile
                    utmp, wtmp
                    uuencode
                    XF86Config
                Part VI Games ----
                    banner
                    ddate
                Part VII Miscellaneous ----
                    ascii
                    bootparam
                    groff_me
                    groff_mm
                    groff_ms
                    hier
                    hostname
                    iso_8859_1
                    locale
                    mailaddr
                    man
                    signal
                    suffixes
                    tr2tex
                    Unicode
                    UTF-8
                Part VIII Administration and Privileged Commands ----
                    adduser, addgroup
                    agetty
                    archive
                    arp
                    badblocks
                    buffchan
                    cfdisk
                    chat
                    chroot
                    clock
                    comsat
                    crond
                    ctlinnd
                    ctrlaltdel
                    cvsbug
                    cvtbatch
                    cytune
                    debugfs
                    dip
                    dmesg
                    dumpe2fs
                    e2fsck
                    edquota
                    expire
                    expireover
                    fastrm
                    fdformat
                    fdisk
                    filechan
                    fsck
                    fsck.minix
                    ftpd
                    ifconfig
                    inetd
                    init, telinit
                    innd, inndstart
                    innxmit
                    ipcrm
                    ipcs
                    kbdrate
                    klogd
                    lpc
                    lpd
                    MAKEDEV
                    MAKEDEV
                    mke2fs
                    mkfs
                    mkfs
                    mklost+found
                    mkswap
                    mount, umount
                    mountd
                    named-xfer
                    named
                    named.reload
                    named.restart
                    ndc
                    netstat
                    makeactive, makehistory, newsrequeue
                    news.daily
                    newslog
                    nfsd
                    nnrpd
                    nntpsend
                    nslookup
                    overchan
                    pac
                    pcnfsd
                    plipconfig
                    ping
                    portmap
                    powerd
                    pppd
                    pppstats
                    prunehistory
                    quotacheck
                    quotaon, quotaoff
                    rarp
                    rdev
                    renice
                    repquota
                    rexecd
                    rlogind
                    route
                    routed
                    rpc.rusersd
                    rpc.rwalld
                    rpcinfo
                    rquotad, rpc.rquotad
                    rshd
                    rwhod
                    sendmail
                    setfdprm
                    setserial
                    setsid
                    showmount
                    shutdown
                    simpleinit
                    slattach
                    sliplogin
                    swapon, swapoff
                    sync
                    sysklogd
                    syslogd
                    talkd
                    telnetd
                    tftpd
                    timed
                    timedc
                    traceroute
                    tune2fs
                    tunelp
                    update_state
                    uucico
                    vmstat
                    vipw
                    zdump
                    zic
                Part IX Kernel Reference Guide ----
                    add_timer, del_timer, init_timer
                    adjust_clock
                    ctrl_alt_del
                    file_table
                    file_table_init
                    filesystems
                    get_empty_filp
                    grow_files
                    in_group_p
                    insert_file_free
                    kernel_mktime
                    proc_sel
                    put_file_last
                    remove_file_free
~/Empire/Doks/Comp/sysadm/lin/ref/lincmdref.list.pdf
~/Empire/Doks/Comp/sysadm/lin/ref/lincmds.de.pdf

___WindowsTerminal_Themes

