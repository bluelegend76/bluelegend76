vim:fdm=indent:fdl=2:
set foldmethod=indent foldlevel=2

LOffice Writer
                            .
                            Insert Footnote  a_i t right

## =INCLUDE HERE + ABOLISH[!!] ~/Dropbox/rsc/data/lists/ref/Loffice-Defaultstyles.txt
 ## =INCLUDE HERE + ABOLISH[!!] ~/Dropbox/rsc/data/lists/ref/Loffice-Defaultstyles.png

##(Include??) ~/Dropbox/rsc/data/lists/ref/office-excel-calc-gnumeric_functs.txt

~/Dropbox/rsc/Doks/phone/Comp/loffice/starbasic/calc2011.fmt35.tags2.txt
~/Dropbox/rsc/Doks/phone/Comp/loffice/starbasic/calc2011.fmt35.tags1.txt
preliminary headers from listen 1
            Sheet sequence number
            Page style
            Insert mode
            Unsaved document flag
            Digital signature
            Cell or object information
            Zoom - new in OOo 3.1
            Opening CSV files
            To open a CSV file in Calc:
            Password protection
            Använda Navigatorn
            Multiple columns or rows
            Entire sheet
            Select All box
            Selecting sheets
            Single sheet
            Multiple contiguous sheets
            Multiple non contiguous sheets
            All sheets
            Splitting the screen
            Split screen example
            Splitting the screen horizontally
            Splitting the screen vertically
            Removing split views
            Se mer om Navigatorn :)
            Choosing a drag mode
            Insert as Hyperlink
            Insert as Link
            Insert as Copy
            Entering numbers as text
            Entering dates and times
            Entering special characters
            Non-breaking spaces
            Non-breaking hyphen
            Automatic date conversion
            Using the Fill tool on cells
            Using the Fill tool
            Defining a fill series
            Predefined fill series
            Defining a new fill series
            Using selection lists
            Using the DataForm extension
            DataForm dialog for an address list
            Removing data and formatting
            Delete Contents dialog
            Shrinking font size to fit cells
            Formatting numbers
            Format Cells > Numbers
            Format Cells > Font Effects
            Calc underline options
            Strikethrough
            Calc strikethrough options
            Asian layout mode option
            Types of vertical stacking
            Om Autoformat
            Defining a new AutoForma
            Using conditional formatting
            Conditional formatting dialog
            Parameter field
            Hiding or showing cells
            Outline group controls
            Outline group controls
            Case sensitive
            Include formats
            Copy sort results to
            Custom sort order
            Expanded Find & Replace dialog
            Regular Expressions
            Positional match ^ $ \< \>
            Tabs, newlines, paragraphs \t \n $
            Hexadecimal codes \xXXXX
            The 'Replace with' box \t \n & $1 $2
            Troubleshooting OOo regular expressions
            Tips and Tricks
            What is a template?
            What are styles?
            Selecting data series
            Amending data series and ranges
            Changing the chart type
            Insert-menu for charts  ___alex
            Trend Lines dialog
            Mean value lines
            Specifying the parameters of error bars
            Accessing styles
            Styles and Formatting window
            Using Fill Format mode
            Linked with
            Cell protection
            Margins
            Layout settings: Page layout
            Layout settings: Format
            Header
            Footer
            Sheet
            Creating new (custom) styles
            Copying and moving styles
            Deleting styles
            Creating a template
            Saving a new template.
            Editing a template
            Apply current styles message.
            Newly-added package of templates.
            Setting a custom template as the default
            Resetting the default template
            Printing
            The Sheet tab of the Page Style dialog
            Print
            Scale
            Embedding linked images
            Table 3: Graphic filters and their effects
            The Color Toolbar
            Customizing lines, areas, and shadows
            Assign Macro
            Group
            Defining a print range
            Editing a print range
            Print range marked by colored boxes
            Range section
            Images section
            --
            THE DATA PILOT
            Calc Functions listed by category
            Array functions
            Complex Number functions
            Database functions
            Financial functions
            Spreadsheet functions
            Statistical functions
            Text functions
            Understanding the structure of functions
            Advanced structure
            Functions page of Function Wizard.
              ...
            Operators in formulas
            Simple Calculation in 1 Cell
            Calculation by Reference
            Table 1: Common ways to enter formulas.
            Operator types
            Arithmetic operators
            Comparative operators
            Descriptive operators
            Currency symbols.
            Text operators
            Text Concatenation.
            Defining Names on a worksheet.
            The Cell Reference Operator.
            Reference Operator for a range.
            Calculations linking sheets
            Completed entries in Function Wizard.
            Strategies for creating formulas
            Creating complex formulas.
            Use the Basic editor to create functions
            Color coding for input
            THE DETECTIVE
            Examples: Common errors
            Basic arithmetic and statistic functions
            Rounding off numbers
            Rounding methods
            Using the COUNTIF function.
            Typical example for beginners
            SOLUTION
            Basic data in Calc
            --
            DataPilot dialog
            DataPilot result without grouping
            Grouping on months
            DataPilot result grouped for months
            One month of timekeeping for one employee
            Yearly sums for one employee
            Practical problems and questions
            Data basis in Calc
            DataPilot dialog
            Properties of the data field
            Result with percentages
            Absolute comparison with Brigitte
            Differences and advantages
            Raw data in Calc
            Solution with a matrix formula
            Solution with the DataPilot
            DataPilot dialog
            Properties of the data field
            Data Field settings for relative values
            Relative occurrence
            After the Start of the DataPilot
            Calc sheet
            Registered database
            External data (OLAP)
            Expanded dialog of the DataPilot
            --
            Ignore empty rows
            Identify categories
            Example without Identify categories
            More settings for the fields
            Data fields
            Expanded dialog for a data field
            Row and column fields
            Default setting
            Setting "Show Items with no data"
            Grouping rows or columns
            Grouping of categories with scalar values
            Grouping of categories with date or time values
            Grouping without the automatic creation of intervals
            Database with nonscalar categories (departments)
            Renamed groups and partial results
            Reduced to the new groups
            Sorting of the results
            Sort manually by using drag and drop
            Automatic sorting
            Options for a row or column field
            Drill (show details)
            Selection of the field for the subdivision
            Filtering
            Dialog for defining the filter
            Updating (refreshing) changed values
            Multiple data fields in the DataPilot
            Unnessecary columns
            Multiple analyses for the same data field
            Shortcuts
            Difficulty
            Second syntax variation
            =GETPIVOTDATA(A1;"sales value employee[Hans] category[sailing]")
            Defining the data to be consolidated
            Setting up subtotals
            Choosing options for subtotals
            Scenarios
            Display border  ___alex
            Copy back
            Prevent changes
            Working with scenarios using the Navigator
            Multiple operations in columns or rows
            Calculating with one formula and one variable
            Calculating with several formulas simultaneously
            Sheet and dialog showing input
            Multiple operations across rows and columns
            Calculating with two variables
            Goal Seek example
            Problemlösaren :)
            The Solver dialog
            Why use multiple sheets?
            Setting up multiple sheets
            Inserting new sheets
            Insert Sheet dialog
            Checking ledger
            Equal sign in input line
            Savings account cell reference
            Creating hyperlinks
            Editing hyperlinks
            Relative and absolute hyperlinks
            Using the External Data dialog
            Using the Navigator
            Linked areas in target spreadsheet
            Object Linking and Embedding (OLE)
            Insert OLE object dialog
            Inserting an object as a link
            Other OLE objects
            Advanced dialog to insert an OLE object under Windows
            Insert object from a file
            Non-linked OLE object
            Linked OLE object
            Preparing a document for review (optional)
            Baseball budget spreadsheet
            To start Calc recording changes:
            Activating change recording
            Comment dialog
            Editing comments
            To add a note:
            Inserting a note
            Viewing a note
            Formatting notes
            Show changes dialog
            Accepting or rejecting changes
            Accept or Reject Changes dialog
            Version management dialog
            Version comment dialog
            Updated version list
            Calc as Database
            OpenOffice.org Basic Macros dialog.
            New Library dialog.
            Arguments are passed as values
            Writing macros that act like built-in functions
            Named range
            Define a named range
            Database range
            Define a database range
            Sort by the Name column
            Set sort options
            Auto filters
            Standard filters
            Manipulating filtered data
            Count and sum cells that match conditions: COUNTIF and SUMIF
            Ignore filtered cells using SUBTOTAL
            Search a block of data using VLOOKUP
            Search a block of data using HLOOKUP
            Use MATCH to find the index of a value in a range
            Introduction to Calc error codes


= calc + starbasic(!)
~/Empire/curr-desktop/tmp/comp/starbasic.total_tree.mm
~/Empire/Doks/Comp/loffice/starbasic/starbasic.mm
~/Dropbox/rsc/Doks/phone/Comp/loffice/starbasic/calcmacros-orange.txt
~/Dropbox/rsc/Doks/phone/Comp/loffice/starbasic/OOME.txt
TODO: INCLUDE METHODS AS SIMPLE LIST[!!]

+some picks  [ ~/legacy/dropboxlegacy_pre2021/starbasic.txt ]
            starbasic unomodules tree:
                com
                    sun
                        star <http://api.libreoffice.org/common/ref/com/sun/star/module-ix.html>
                            accessibility         UNO Accessibility API
                            animations
                            auth         security and authenticates interfaces
                            awt         Java AWT-like user interface toolkit interface specifications for UNO.
                            beans         Java beans-like property access and introspection.
                            bridge         Interfaces for building bridges to other component models.
                            chart         Charting diagram interfaces.
                            chart2         New implementation of Charting diagram interfaces. This module contains only a rather small public API. In addition there is a private API in the chart2 project.
                            configuration         Access to the tree of configuration data.
                            connection         Data exchange interfaces for inter-process communication.
                            container         Interfaces for collections and containers.
                                XEnumeration
                                    LibreOffice: XEnumeration Interface Reference <http://api.libreoffice.org/docs/idl/ref/interfacecom_1_1sun_1_1star_1_1container_1_1XEnumeration.html>
                                    http://en.wikipedia.org/wiki/OpenOffice_Basic = Räkna stycken i en text--exemplet :) <http://en.wikipedia.org/wiki/OpenOffice_Basic>
                            corba         Modules for IOP, IIOP and GIOP.
                            datatransfer         Clipboard and Drag&Drop interfaces.
                            deployment
                            document         Office document related interfaces.
                            drawing         Drawing and shape specific interfaces.
                            embed
                            form         Interfaces for managing forms and controls.
                            formula         Interfaces for mathematical formulas.
                            frame         Desktop environment framework interfaces.
                                format-exempel
                                Nested Modules
                                status
                                Services
                                Components         specifies a collection of components
                                ContentHandler         special dispatcher for non visible contents, e.g. sounds
                                ContentHandlerFactory         factory to create content loader
                                Controller         is an abstract service for a component which offers a deeper integration of desktop components than a ::com::sun::star::awt::XWindow can offer
                                Desktop         is the environment for components which can instantiate within frames
                                DesktopTask         [ DEPRECATED ]
                                use the Frame service instead of this
                                DesktopTasks         [ DEPRECATED ]
                                DispatchHelper         provides an easy way to dispatch an URL using one call instead of multiple ones.
                                DispatchProvider         provides XDispatch objects for certain functions which are useful at the UI
                                DispatchRecorder         provides functionality to record XDispatch::dispatch() requests
                                DispatchRecorderSupplier         provides a DispatchRecorder
                                DocumentTemplates         is an abstract service for accessing the document templates of the office and manipulate them ( add or rename or remove templates )
                                Frame         represents the environment for a desktop component
                                FrameControl         contains a frame with a desktop component
                                FrameLoader         derivations of this abstract service are used to load components into Frames of the environment
                                FrameLoaderFactory         factory to create frame loader
                                FramesContainer         this is a special container which can contain frames
                                GlobalEventBroadcaster         This service offers the document event functionality that can be found at any ::com::sun::star::document::OfficeDocument, but it does it for all existing documents. So it is a single place where a listener can be registered for all events in all documents.
                                LayoutManager         controls the layout of user interface elements which are part of a frame.
                                MediaTypeDetectionHelper         provides for mapping a given sequence of content identifier strings to a sequence of respective media (mime) types
                                ModuleManager         can be used to identify office modules.
                                PopupMenuController         provides access to a pop-up menu controller.
                                PopupMenuControllerFactory         specifies a factory that creates instances of registered pop-up menu controller.
                                ProtocolHandler         special dispatch provider registered for URL protocols
                                SessionManager         The SessionManager service provides an interface to the session manager of the desktop. A session manager keeps track of applications that are running when the desktop shuts down and starts them again in the same state they were left when the desktop starts up the next time. To be able to do this the session manager needs cooperation from applications; applications have to provide sufficient information to be started again as well as restore the state they were left in. The normal flow of operation looks like this:
                                Settings         [ DEPRECATED ]
                                StatusbarController         is an abstract service for a component which offers a more complex user interface to users within a status bar.
                                StatusbarControllerFactory         specifies a factory that creates instances of registered status bar controller.
                                SynchronousFrameLoader         derivations of this abstract service are used to load components into Frames of the environment
                                Task         [ DEPRECATED ]
                                represents a top level frame in the frame hierarchy with the desktop as root
                                TemplateAccess         provides a high level API to organize document templates
                                ToolbarController         is an abstract service for a component which offers a more complex user interface to users within a toolbar.
                                TransientDocumentsDocumentContentFactory         specifies a factory for ::com::sun::star::ucb::TransientDocumentsDocumentContents.
                                Interfaces
                                XBorderResizeListener         allows to listen to border resize events of a controller.
                                XBrowseHistoryRegistry         [ DEPRECATED ]
                                XComponentLoader         this is a simple interface to load components by an URL into a frame environment
                                XComponentRegistry         [ DEPRECATED ]
                                XConfigManager         [ DEPRECATED ]
                                XControlNotificationListener         Must be implemented by dispatch objects which want to get notifications about control events.
                                XController         With this interface, components viewed in a Frame can serve events (by supplying dispatches).
                                XController2         extends the XController interface
                                XControllerBorder         allows to retrieve information about controller's border.
                                XDesktop         This is the main interface of a desktop service.
                                XDesktopTask         [ DEPRECATED ]
                                use XFrame instead of this
                                XDispatch         serves state information of objects which can be connected to controls (e.g. toolbox controls).
                                XDispatchHelper         provides an easy way to dispatch functions useful at UI level.
                                XDispatchInformationProvider         provides information about supported commands
                                XDispatchProvider         provides XDispatch interfaces for certain functions which are useful at the UI.
                                XDispatchProviderInterception         makes it possible to register an XDispatchProvider which intercepts all requests of XDispatch to this instance.
                                XDispatchProviderInterceptor         makes it possible to intercept request of XDispatch.
                                XDispatchRecorder         provides recording functionality of dispatches
                                XDispatchRecorderSupplier         provides access to the record mechanism of dispatches
                                XDispatchResultListener         listener for results of XNotifyingDispatch::dispatchWithNotification()
                                XDocumentTemplates         provides a high level API to organize document templates
                                XExtendedFilterDetection         [ DEPRECATED ]
                                use ::com::sun::star::document::XExtendedFilterDetection instead of this
                                XFilterDetect         [ DEPRECATED ]
                                use ::com::sun::star::document::XExtendedFilterDetection instead of this
                                XFrame         a frame object can be considered to be an "anchor" object where a component can be attached to.
                                XFrameActionListener         has to be provided if an object wants to receive events when several things happen to components within frames of the desktop frame tree.
                                XFrameLoader         load components into a frame
                                XFrameLoaderQuery         [ DEPRECATED ]
                                use service FrameLoaderFactory instead of this
                                XFrameSetModel         [ DEPRECATED ]
                                use XModel instead of this
                                XFrames         manages and creates frames.
                                XFramesSupplier         provides access to sub frames of current one
                                XInplaceLayout         [ DEPRECATED ]
                                special interface to support inplace editing of components inside OpenOffice.org.
                                XInterceptorInfo         makes it possible to get information about a registered interceptor and is used by frame interceptor mechanism to perform interception.
                                XLayoutManager         central interface to query for, create, destroy and manipulate user interface elements which are bound to a layout manager.
                                XLayoutManagerEventBroadcaster         makes it possible to receive events from a layout manager.
                                XLayoutManagerListener         makes it possible to receive events from a layout manager.
                                XLoadEventListener         is used to receive callbacks from an asynchronous frame loader.
                                XLoadable         offers a simple way to initialize a component or load it from an URL.
                                XMenuBarAcceptor         [ DEPRECATED ]
                                provides function to update a menu bar for inplace editing.
                                XMenuBarMergingAcceptor         provides functions to set and remove a merged menu bar for inplace editing.
                                XModel         represents a component which is created from an URL and arguments.
                                XModel2         extends interface XModel. The following functions are added: - enumeration of all currently connected controller objects. (not getCurrentController() only, which depends on focus) - establish new view controller factory methods, which will make it possible to create new views for this model.
                                XModule         can be used to overrule identification of office modules.
                                XModuleManager         can be used to identify office modules.
                                XNotifyingDispatch         dispatch with guaranteed notify (instead of XDispatch)
                                XPopupMenuController         provides data to a pop-up menu controller implementation to fill and update a pop-up menu dynamically.
                                XRecordableDispatch         extends an existing XDispatch implementation with functionality for dispatch recording
                                XSessionManagerClient         Connect to a session manager to get information about pending desktop shutdown
                                XSessionManagerListener
                                XSessionManagerListener2
                                XStatusListener         makes it possible to receive events when the state of a feature changes.
                                XStatusbarController         is an abstract service for a component which offers a more complex user interface to users within a status bar.
                                XStorable         offers a simple way to store a component to an URL.
                                XStorable2         extends XStorable.
                                XSubToolbarController         special interface to support sub-toolbars in a controller implementation.
                                XSynchronousDispatch         additional interfaces for dispatch objects: allow to execute with return value
                                XSynchronousFrameLoader         loads a resource into a Frame.
                                XTask         [ DEPRECATED ]
                                use XFrame instead of this one
                                XTasksSupplier         [ DEPRECATED ]
                                use XFramesSupplier instead of that
                                XTerminateListener         has to be provided if an object wants to receive an event when the master environment (e.g., desktop) is terminated.
                                XTerminateListener2         extend interface XTerminateListener so a listener will be informed in case termination process was canceled by other reasons.
                                XTitle         an interface representing an entity with a modifyable title.
                                XTitleChangeBroadcaster         todo document me
                                XTitleChangeListener         todo document me
                                XToolbarController         is an abstract service for a component which offers a more complex user interface to users within a toolbar.
                                XToolbarControllerListener         is used to notify a toolbar controller about events
                                XTransientDocumentsDocumentContentFactory         specifies a factory for ::com::sun::star::ucb::TransientDocumentsDocumentContents.
                                XUIControllerRegistration         is used to query, register and unregister user interface controller.
                                XUntitledNumbers         knows all currently used and all free numbers for using with untitled but counted objects.
                                XUrlList         [ DEPRECATED ]
                                XWindowArranger         [ DEPRECATED ]
                                Structs
                                BorderWidths         specifies a border area by offsets from each side.
                                ControlCommand         describes a command which can be send to a generic toolbar control.
                                ControlEvent         describes a control event send by extended user interface controls.
                                DispatchDescriptor         describes a feature to be retrieved by a URL that has to be loaded into a specified frame
                                DispatchInformation         provides information about a supported command
                                DispatchResultEvent         contains the result of the dispatch action, if State is set to SUCCESS
                                DispatchStatement         represents a dispatch statement from a recorded macro
                                FeatureStateEvent         This event is broadcast by a Controller whenever the state of the feature changes
                                FrameActionEvent         this event struct is broadcast for actions which can happen to components within frames
                                TitleChangedEvent         todo document me
                                Exceptions
                                DoubleInitializationException         This exception can be thrown in case an object is initialized second time.
                                IllegalArgumentIOException         This exception can be thrown in case arguments are wrong.
                                TerminationVetoException         can be thrown by a XTerminateListener to prevent the environment (e.g., desktop) from terminating
                                UnknownModuleException         This exception can be thrown in case an office * module could not be classified or does not have * a valid configuration.
                                Enums
                                FrameAction         these are the events which can happen to the components in frames of the desktop
                                Constant Groups
                                CommandGroup         provides information about a supported command
                                DispatchResultState         possible values for DispatchResultEvent
                                FrameSearchFlag         these types describe the algorithm to be used to search a frame
                                LayoutManagerEvents         provides information about layout manager events
                                UntitledNumbersConst
                                WindowArrange         these constants are used to specify a style of window arrangement
                            gallery
                            geometry         Interfaces and data types to deal with basic geometric entities
                            graphic         Interfaces for graphic handling
                            i18n         Interface for internationalization (deprecated draft).
                            image         image manipulation interfaces.
                            inspection
                            installation         Interfaces to control installations.
                            io         General input/output interfaces.
                            java         Java to UNO connectivity interfaces.
                            lang         General UNO concepts like factories etc.
                            ldap         lightweight directory access protocol (LDAP)
                            linguistic2         Spell checker, hyphenation and thesaurus interfaces.
                            loader         Component implementation loader interfaces.
                            logging
                            mail         Interfaces for Email connectivity
                            media         Media type interfaces
                            mozilla         Interfaces for Mozilla integration.
                            office         Office document content related interfaces.
                            oooimprovement
                            packages         Package file format interfaces.
                            pgp         Pretty Good Privacy (deprecated).
                            plugin         Netscape-like plugin interfaces.
                            presentation         Presentation specific interfaces.
                            rdf         RDF (Resource Description Framework) and metadata interfaces.
                            reflection         Runtime object inspection / core reflection interfaces.
                            registry         Interfaces to access registration databases.
                            rendering         Interfaces and data structures for rendering
                            report         interfaces for report interfaces
                            resource         Interfaces to access (UI) resource files.
                            scanner         Interfaces for scanner control.
                            script         Scripting language bindings.
                            sdb         Basic interfaces for database access.
                            sdbc         Database component interfaces.
                            sdbcx         High-level database component interfaces.
                            security         Interface for authorisation and authentification.
                            setup         Interfaces to control the setup process.
                            sheet         Spreadsheet specific interfaces.
                            smarttags
                            style         Formatting and layout style and style sheet interfaces.
                            svg         Interfaces for import/export of Scaleable Vector Format.
                            sync         Data synchronization interfaces (deprecated).
                            sync2         Data synchronization interfaces (deprecated).
                            system         Host operating system integration interfaces.
                            table         Table specific interfaces (for text and spreadsheet).
                            task         Task management interfaces.
                            test         Test interfaces for core-reflection, introspection and marshalling.
                            text         Text specific interfaces.
                            ucb         Universal Content Broker interfaces.
                            ui         Dialogs and other UI elements.
                            uno         Basic UNO interfaces.
                            uri         URI processing.
                            util         Miscellaneous interfaces for sorting, connecting objects etc.
                            view         Document view specific interfaces (e.g. selection access and printing).
                            xforms         interfaces for XForms (XML-based forms) implementation
                            xml         XML related interfaces.
                            xsd
                OpenOffice <http://www.openoffice.org/api/docs/common/ref/com/module-ix.html>
                LibreOffice <http://api.libreoffice.org/common/ref/com/module-ix.html>
                ATT GÖRA
                    Infoga ev listan från Starbasic.mm på alla övriga källorna som gås igenom för att lära känna språket och api:t ordentligt :)
                    Sätt grön färg (F3) på helt färdiga grenar av trädet :DDDDDD [satte röd på gul botten] :]


            genomgången av Starbasic total (plocka från):  = (499 sidor):
                o
                    Chapter 1 - Documents, Libraries och IDE:t :DDD (s1) :)
                        filformat: :DDD
                            o
                                .xba
                                    o
                                        File Type
                                            OpenOffice.org Basic Module File
                                        File Description
                                            Application library or macro used by OpenOffice.org, an open-source productivity suite; contains the functionality for the component and is written in the OpenOffice.org Basic programming language; used for storing the source code for software add-on components.
                                            An OpenOffice.org library is comprised of the XBA file and other configuration files, which specify the contents and user interface elements for the component. The XBA filename corresponds to the module name.
                                            NOTE: OpenOffice.org Basic files that contain encrypted and password-protected source code use the .PBA extension.
                                .xlb
                                    o
                                        File Type
                                            OpenOffice.org Module Information File
                                        File Description
                                            File used by OpenOffice.org, a free productivity suite developed by Oracle; contains information about a component library or macro, which is written in the OpenOffice.org Basic language and stored in an .XBA file.
                                            XLB files are used with the other library files for loading modules. They are saved using XML formatting and use the names script.xlb and dialogue.xlb.
                            .xlc
                                ?
                            .xdl
                                o
                                    dialogrutor :]
                                o
                                    File Type
                                        XML Schema File
                                    File Description
                                        Defines the structure and format of an XML document; used by various programs that store information in the XML format.
                            o
                                .xml
                                .xcu
                                    o
                                        File Type
                                            OpenOffice.org Configuration File
                                        File Description
                                            File used by OpenOffice.org, an open source office productivity suite; contains configuration information for an add-on in an XML format; commonly used to configure OpenOffice.org office extensions.
                                            XCU files can be included as part of an .OXT extension file. They define configuration information such as menu labels, default values for document templates, and other extension parameters.
                            EXEMPELFILER: OOoLilypond.oxt :)
                                .
                                ├── Addons.xcu
                                ├── description.xml
                                ├── META-INF
                                    │   └── manifest.xml
                                ├── Office
                                    │   └── UI
                                        │       ├── BaseWindowState.xcu
                                        │       ├── BasicIDEWindowState.xcu
                                        │       ├── CalcWindowState.xcu
                                        │       ├── DrawWindowState.xcu
                                        │       ├── ImpressWindowState.xcu
                                        │       ├── MathWindowState.xcu
                                        │       ├── StartModuleWindowState.xcu
                                        │       └── WriterWindowState.xcu
                                ├── OOoLilyPond
                                    │   ├── Ask.xdl
                                    │   ├── Config.xba
                                    │   ├── dialog.xlb
                                    │   ├── Editor.xba
                                    │   ├── GUI_Config.xdl
                                    │   ├── GUI_Editor.xdl
                                    │   ├── GUI_Out.xdl
                                    │   ├── GUI_Tmpl.xdl
                                    │   ├── LilyPond.xba
                                    │   ├── OOoLilyPond.xba
                                    │   ├── Process.xdl
                                    │   ├── script.xlb
                                    │   ├── Templates.xba
                                    │   ├── Tools.xba
                                    │   └── Vars.xba
                                ├── pkg-desc
                                    │   └── pkg-description.txt
                                └── templates
                                    ├── 2.10
                                        │   ├── Default.ly
                                        │   ├── Deutsch.ly
                                        │   ├── Direct to LilyPond.ly
                                        │   ├── Fret Board.ly
                                        │   ├── Gitarrengriffe.ly
                                        │   ├── Italiano.ly
                                        │   ├── Relative.ly
                                        │   └── Voice Exercise.ly
                                    ├── 2.12
                                        │   ├── Default.ly
                                        │   ├── Deutsch.ly
                                        │   ├── Direct to LilyPond.ly
                                        │   ├── Fret Board.ly
                                        │   ├── Gitarrengriffe.ly
                                        │   ├── Italiano.ly
                                        │   ├── Relative.ly
                                        │   └── Voice Exercise.ly
                                    └── 2.8
                                        ├── Default.ly
                                        ├── Deutsch.ly
                                        ├── Direct to LilyPond.ly
                                        ├── Fret Board.ly
                                        ├── Gitarrengriffe.ly
                                        ├── Italiano.ly
                                        ├── Relative.ly
                                        └── Voice Exercise.ly
                                9 directories, 51 files
                        o
                            o
                                ställen att lagra makron på:
                                    s9 calcmacros
                                    när det ska användas i alla dina spreadsheets :D
                                        Mymacros
                                    kunna användas från alla sp:s på ditt system
                                        OpenOffice.org Macros
                                    separat för ett visst sp
                                        spara i aktuella dokumentet
                                Välj ställe var du vill lägga din nya modul (My el Doket =markera + klicka new) + ge meningsfullt namn + spara
                            i OOoBasic-IDE:t :
                                lägg till 'option explicit'
                                visa hjälptext mm för en knapp mm: ***
                                    shift+F1 + peka
                                knappar i IDE:n : (s12 calcmacros)
                                    o
                                        run-button
                                            när trycker så körs första makrot i aktuella modulen
                                        stop
                                            Fel vid uppdatering av texten för följande indata: =för att stoppa när saker inte går som tänkt när man kör ett makro. Felet var: org.freeplane.plugin.script.ExecuteScriptException: No such property: att for class: Script1 at line -1
                                        kolla syntax för ett makro (t ex skriva till databas) utan att köra det: :)
                                            compile
                                    o
                                        step into - kör en kodrad i taget:
                                            (pil in i måsvingarna)
                                        step over - kliv över ett anrop: =undvik ett visst anrop när kör igenom ett makro
                                            (pil runt över måsvingarna)
                                        step out - slutför makrot: =detaljkollat färdigt koden så här långt + slutför resten i ett svep
                                    watch - välj variabel + klicka 'watch' :)
                                        markör till vänster:
                                            Fel vid uppdatering av texten för följande indata: =var man är i koden. Felet var: org.freeplane.plugin.script.ExecuteScriptException: No such property: man for class: Script1 at line -1
                                        watchfönstret nere till vänster:
                                            Fel vid uppdatering av texten för följande indata: =nuvarande värdet på valda variabler. Felet var: org.freeplane.plugin.script.ExecuteScriptException: No such property: värdet for class: Script1 at line -1
                                        fönstret nere högerr:
                                            Fel vid uppdatering av texten för följande indata: =visar vilka makron mm som anropas. Felet var: org.freeplane.plugin.script.ExecuteScriptException: No such property: vilka for class: Script1 at line -1
                                    breakpoint
                                        välj rad och klicka knappen, eller dubbelklicka i marginalen till vänster om aktuell rad
                                        klicka run igen när vill fortsätta från ett stopp
                                    manage breakpoints
                                    o
                                    zzzz <#ID_137838715>
                                        <../../../../a--ubuntu_one/starbasic-macro--drstest1-ppi.ods>
                                        MsgBox(meddelande, Type, titel) - 2014
                        4 tipsen för att hitta information om olika funktioner och services mm :D (se också Total Tree)
                            o
                                getting more information: s41
                                youll have noticed weve not gone into a great amount of detail here. for instance:
                                *weve seen how to declare variables but not what the different variable types are
                                *weve seen the functions (lcase, mid och msgbox) in action, but there are no technical details on them
                                quite simply, we havent got enough room here to discuss all of the functionality that is built into OOo and thats available to us. fortunately, the IDE has all the information that you require. if you need to know more, then highlight a keyword (for example, (dim or msgbox) in the BasicEditor, and then press F1. you will see a screen similar to the following screenshot
                            o
                                UNO:s s53:
                                however, in the meantime, well have a look at wdere we can find additional information about unos:
                                online referencematerial:
                                you may be wondering why were interested in online referencematerial: what about calcs builtin helpsystem? well, you will find it useful for general information on how to use unos, but it wont tell you anything about using specific unos.
                                (t ex 'CreateUnoService (runtime)'
                                we need to look at openoffice.orgs online information to learn about the actual unos that are available. so its internetbrowsertime:
                                o
                                    ((ADRESS))
                                as soon as you look at the webpage youll realize that it contains all of the nested modules for com.sun.star. In addition to this you may surmise (quiet rightly) that the website struture matches the toplevel-structure of the OOo-objectmodel that weve been discussing in this chapter:
                                o
                                o
                                if you click on any of the nested modules, you'll see all of the elements that we would expect from the objectmodel:
                                o
                                    *services
                                    *interfaces
                                    *constants
                                    *enums
                                    *exceptions
                                    *structs
                                    (feta =de fyra typerna associerade med services)
                                +nested modules, och
                                a list of interfaces used by the services in the module
                            o
                                Finding included services: s62
                                if you want to know if a service is available elsewhere as an included service, then there are two ways of going about it:
                                1. look through the documentation for the service that you are going to be using and see if it includes any other services (the one that you want access to).
                                2. go to the documentation for the service that you want to include and see if it has a 'use'-link enabled
                                in the case of the CellRange-service, youll find that the link is enabled and that the service is used in:
                                o
                                    comsunstar sheet SheetCellCursor
                                    ---- SheetCellRange
                                    ---- Spreadsheet
                            o
                                Finding which service a particular method (you want to use) belongs to: s63
                                for ex if you remember we started this chapter by considering the printing process. apart from trial-and-error, how can we learn about the printmethod; after all there must be one, mustnt there?
                                you can either use the "Index-link" främ any of the documentationpages, or go directly to the OOo's global index:
                                o
                                Here youll find a complete a-z of every module, service, method, constant, enum, exception, and struct. so if we look up print we find three references:
                                o
                                    PRINT (a constant)
                                    Print (property in service --------BaseFrameProperties
                                    print(): Function in interface  com.sun.star.view.XPrintable
                                So we know that there is a 'print'-function in the ----view.XPrintable-interface. the next question is 'where can this interface be used?'. the answer is, of course, to follow the link to the XPrintable-interface--documentationpage, ad the click on Use(!!!!!). from this we can learn that there are a number of services that support the interface:
                                (=alla olika sorters dokument mm) ;)
                    genomgång_starbasic_2011
                        Obs! Text markerad med xx ska plockas ut till listan för Starbasic med ord och termer (service mm) som ska listas och för- klaras. :DD
                    Starbasic - Grundspråket och dess konstruktioner = Kap 2 (?) :) (s19)
                        Print ”bla”
                        *lista ingående underrubriker (t ex slingor mm) :)
                        Deklarera variabler
                        Table 2. Declaring simple variables.
                            Declaration Description
                            Dim Name Name is type Variant because no type is stated.
                            Dim Name As String Name is type String because the type is explicitly stated.
                            Dim Name$ Name$ is type String because Name$ ends with a $.
                            Dim Name As String, Weight As Single Name is type String and Weight is type Single.
                            Dim Width, Length Width and Length are type Variant.
                            Dim Weight, Height As Single Weight is type Variant and Height is type Single.
                        Table 5. A few guidelines for entering numbers in OOo Basic.
                            Example Description
                            Use 1000 not 1,000 Write numbers without a thousands separator; do not use commas.
                            + 1000 A space is permitted between a leading plus or minus sign and the number.
                            &HFE is the same as 254 Precede a hexadecimal number with &H.
                            &O11 is the same as 9 Precede an octal number with &O.
                            Use 3.1415 not 3,1415 Do not use commas for the decimal.
                            6.022E23 In scientific notation, the “e” can be uppercase or lowercase.
                            Use 6.6e-34 not 6.6e -34 Spaces are not allowed in a number. With the space, this evaluates as 6.6 - 34 = -27.4.
                            6.022e+23 The exponent may contain a leading plus or minus sign.
                            1.1e2.2 evaluates as 1.1e2 The exponent must be an integer. The fractional portion is ignored.
                        Table 6. Visual Basic-compatible string constants scheduled to be supported in OOo 2.0.
                            Constant Value Description
                            vbCr CHR$(13) Carriage return
                            vbCrLf CHR$(13) & CHR$(10) Carriage return/linefeed combination
                            vbFormFeed CHR$(12) Form feed
                            vbLf CHR$(10) Line feed
                            vbNewLine CHR$(13) & CHR$(10) or Platform-specific newline character—whatever is appropriate
                            CHR$(10)
                            vbNullChar CHR$(0) Character with ASCII value 0
                            vbNullString String with value 0. Not the same as a zero-length string (""); in some programming languages this might be called a null string.
                            vbTab CHR$(9) Horizontal tab
                            vbVerticalTab CHR$(11) Vertical tab
                        definiera konstanter med Const
                        arrays
                            Arrays
                            An array is a data structure in which similar elements of data are arranged in an indexed structure—for example, a column of names or a table of numbers. See Table 8. An array allows you to store many different values in a single variable, and uses parentheses to define and access array elements. OOo Basic does not support the use of square brackets as used by other languages such as C and Java.
                            Array variables are defined using the Dim statement. Think of a one-dimensional array as a column of values and a two-dimensional array as a table of values. Higher dimensions are supported but difficult to visualize. An array index may be any Integer value from -32,768 through 32,767.
                            Table 8. Defining an array is easy!
                                Definition Elements Description
                                Dim a(5) As Integer 6 From 0 through 5 inclusive.
                                Dim b(5 To 10) As String 6 From 5 through 10 inclusive.
                                Dim c(-5 to 5) As String 11 From -5 through 5 inclusive.
                                Dim d(5, 1 To 6) As Integer 36 Six rows with six columns from 0 through 5 and 1 through 6.
                                Dim e(5 To 10, 20 To 25) As Long 36 Six rows with six columns from 5 through 10 and 20 through 25.
                        subroutines and functions (s38+)
                            Fel vid uppdatering av texten för följande indata: =SE MER :DD !. Felet var: org.freeplane.plugin.script.ExecuteScriptException: startup failed: Script1.groovy: 1: unexpected token: MER @ line 1, column 4.    SE MER :DD !       ^  1 error  at line 1
                            o
                                o
                                    sub namn
                                    end sub
                                o
                                    Function TestFunc As String
                                    TestFunc = "hello"
                                    End Function
                                o
                                    Arguments
                                    A variable that is passed to a routine is called an argument. Arguments must be declared. The same rules for declaring variable types apply to declaring argument types.
                            !! <http://en.wikipedia.org/wiki/Evaluation_strategy>
                                pass by reference
                                pass by value
                        Datorer, deras struktur och stacks :)
                            Computers use a data structure called a stack. At home, I have a stack of books that I want to read. When I receive a new book, I place it on top of the stack. When I have time to read, I take the top book from the stack. This is similar to the data structure that a computer uses: a section of memory in a computer for temporary storage in which the last item stored is the first retrieved. Stacks are usually used when a computer calls a routine and passes arguments. A typical procedure follows:
                            1. Push the current run location onto the stack.
                            2. Push each argument onto the stack.
                            3. Call the desired function or subroutine.
                            4. The called routine uses the arguments from the stack.
                            5. The called routine frequently uses the stack to store its own variables.
                            6. The called routine removes the arguments from the stack.
                            7. The called routine removes and saves the caller’s location from the stack.
                            8. If the called routine is a function, the return value is placed on the stack.
                            9. The called routine returns to the caller.
                            10. If the called routine is a function, the return value is taken from the stack.
                            Although various optimizations are used, there is always some overhead associated with calling subroutines and functions. There is overhead in running time and in the memory required. The recursive version of Factorial continually calls itself. While calculating the factorial of four, there is one point at which the stack contains information for calls for 4, 3, 2, and 1. For some functions—the Fibonacci series, for example—this call behavior may be prohibitive, and a non-recursive algorithm should be used instead.
                        om variabelomfång s44 :)
                            Although it is sometimes necessary to define a variable in a module header, you should avoid it if possible.
                            Variables defined in the header can be seen in other modules that don’t expect them. It’s difficult to determine why the compiler claims that a variable is already defined if it is defined in another library or module. Even worse, two working libraries may stop working because of naming conflicts.
                            Table 10. Life cycle of a variable defined in a module header.
                                Keyword Initialized Dies Scope
                                Global Compile time Compile time All modules and libraries.
                                Public Macro start Macro finish Declaring library container.
                                Dim Macro start Macro finish Declaring library container.
                                Private Macro start Macro finish Declaring module.
                        operatorer :)
                            Table 12. Operators supported by OpenOffice.org Basic.
                            Precedence Operator Type Description
                            1 NOT Unary Logical or bitwise NOT
                            1 - Unary Leading minus sign, negation
                            1 + Unary Leading plus sign
                            2 ^ Binary Numerical exponentiation
                            3 * Binary Numerical multiplication
                            3 / Binary Numerical division
                            4 MOD Binary Numerical remainder after division
                            5 \ Binary Integer division
                            6 - Binary Numerical subtraction
                            6 + Binary Numerical addition and string concatenation
                            7 & Binary String concatenation
                            8 IS Binary Do two objects reference the same object?
                            8 = Binary Equals
                            8 < Binary Less than
                            8 > Binary Greater than
                            8 <= Binary Less than or equal to
                            8 >= Binary Greater than or equal to
                            8 <> Binary Not equal
                            9 AND Binary Bitwise for numerics and logical for Boolean
                            9 OR Binary Bitwise for numerics and logical for Boolean
                            9 XOR Binary Exclusive OR, bitwise for numerics and logical for Boolean
                            9 EQV Binary Equivalence, bitwise for numerics and logical for Boolean
                            9 IMP Binary Implication bitwise for numerics and logical for Boolean.
                            logical and bitwise :)
                                Table 13. Truth table for logical and bitwise operators; 0 and 1 represent bit values, and True and False
                                represent logical values.
                                x y x AND y x OR y x XOR y x EQV y x IMP y
                                True True True True False True True
                                True False False True True False False
                                False True False True True False True
                                False False False False False True True
                                1100 1010 1000 1110 0110 1001 1011
                        IMP-operatorn
                            Fel vid uppdatering av texten för följande indata: =s53 :). Felet var: org.freeplane.plugin.script.ExecuteScriptException: startup failed: Script1.groovy: 1: unexpected token: ) @ line 1, column 6.    s53 :)         ^  1 error  at line 1
                        NOT
                        Kontrollstrukturer
                            If Then Else
                            IIf (=i i f = Immediate If :)
                            Choose
                            Select Case
                            While ... Wend
                            Do ... Loop
                            For ... Next
                        Exit Sub och Exit Function
                        o
                            Felhantering med On Error :)
                                Table 18. Supported On Error forms.
                                    Form Usage
                                    On Error Resume Next Ignore errors and continue running at the next line in the macro.
                                    On Error GoTo 0 Cancel the current error handler.
                                    On Error GoTo LabelName Transfer control to the specified label.
                                Table 19. Error-related variables and functions.
                                    Function Use
                                    Erl Integer line number of the last error.
                                    Err Integer error number of the last error.
                                    Error Error message of the last error.
                            Ignore errors with On Error Resume Next
                            Clear an error handler with On Error GoTo 0
                            Specify your own error handler with On Error GoTo Label
                    Runtimebiblioteket - Subrutiner och funktioner (~inbyggda) :) börjar=s73(mint)
                        Kap 3 -- Numeriska rutiner
                            ABS(nummer)
                                Det absoluta värdet av numeriskt värde
                                ABS(number) The absolute value of a specified number.
                            ATN(nummer)
                                Vinkeln i radianer
                                ATN(number) The angle, in radians, whose tangent is the specified number in the range of -Pi/2 through Pi/2.
                            CByte(uttryck)
                                CByte(expression) Round the String or numeric expression to a Byte.
                            CDbl(uttryck)
                                CDbl(expression) Convert a String or numeric expression to a Double.
                            CInt(uttryck)
                                CInt(expression) Round the String or numeric expression to the nearest Integer.
                            CLng(uttryck)
                                CLng(expression) Round the String or numeric expression to the nearest Long.
                            COS(nummer)
                                COS(number) The cosine of the specified angle.
                            CSng(expression) Convert a String or numeric expression to a Single.
                            Exp(nummer)
                                Exp(number) The base of natural logarithms raised to a power.
                            Fix(nummer)
                                Fix(number) Chop off the decimal portion.
                            Format(obj, format)
                                Format(obj, format) Fancy formatting, discussed in Chapter 6, “String Routines.”
                            Hex(n)
                                Hex(n) Return the hexadecimal representation of a number as a String.
                            Int(nummer)
                                Int(number) Round the number toward negative infinity.
                            Log(nummer)
                                Log(number) The logarithm of a number. In Visual Basic .NET this method can be overloaded to return either the natural (base e) logarithm or the logarithm of a specified base.
                            Oct(nummer)
                                Oct(number) Return the octal representation of a number as a String.
                            Rnd
                                Rnd Return a random number as a Double from 0 through 1.
                            Sgn(nummer)
                                Sgn(number) Integer value indicating the sign of a number.
                            SIN(nummer)
                                SIN(number) The sine of an angle.
                            Sqr(nummer)
                                Sqr(number) The square root of a number.
                            Str(nummer)
                                Str(number) Convert a number to a String with no localization.
                            TAN(nummer)
                                TAN(number) The tangent of an angle.
                            Val(str)
                                Val(str) Convert a String to a Double. This is very tolerant to non-numeric text.
                            Pi
                                inbyggd konstant med närmevärde för pi
                        Kap 4 -- Arrayrutiner
                            Array(args)
                                Array(args) Return a Variant array that contains the arguments.
                            DimArray(var)
                                DimArray(args) Return an empty Variant array. The arguments specify the dimension(s).
                            IsArray(var)
                                IsArray(var) Return True if this variable is an array, False otherwise.
                            Join(array); Join(array, avgränsare)
                                Join(array) Concatenate the array elements separated by the optional string delimiter and Join(array, delimiter) return as a String. The default delimiter is a single space.
                            LBound(array); LBound(array, dimension)
                                LBound(array) Return the lower bound of the array argument. The optional dimension specifies
                                LBound(array, dimension) which dimension to check. The first dimension is 1.
                            ReDim [Preserve] var(args) As Type
                                ReDim [Preserve] var(args) As Type Change the dimension of an array using the same syntax as the DIM statement. The keyword Preserve keeps existing data intact. In OOo 2.0, the “As Type” will become optional.
                            Split(str); Split(str, avgr.); Split(str, avgr., n)
                                Split(str) Split the string argument into an array of strings. The default delimiter is a space.
                                Split(str, delimiter) The optional argument n limits the number of strings returned.
                                Split(str, delimiter, n)
                            UBound(array); UBound(array, dimension)
                                UBound(array) Return the upper bound of the array argument. The optional dimension specifies
                                UBound(array, dimension) which dimension to check. The first dimension is 1.
                        Kap 5 -- Datumrutiner
                            CDate(uttryck)
                                CDate(expression) Date Convert a number or string to a date.
                                datum
                            CDateFromIso
                                CDateFromIso Date Convert to a date from an ISO 8601 date representation.
                                datum
                            CDateToIso
                                CDateToIso Date Convert a date to an ISO 8601 date representation.
                            Date
                                Date Date Return the current date as a string.
                            DateSerial(år, mån, dag)
                                DateSerial(yr, mnth, day) Date Create a date from component pieces: Year, Month, Day.
                            DateValue(datum)
                                DateValue(date) Date Extract the date from a date/time value by truncating the decimal portion.
                            Day(datum)
                                Day(date) Date Return the day as an Integer from a Date value.
                            GetSystemTicks
                                GetSystemTicks Date Return the number of system ticks as a Long.
                            Hour(datum)
                                Hour(date) Date Return the hour as an Integer from a Date value.
                            IsDate(värde)
                                IsDate(value) Date Is this (value, converted to a string) a date?
                            Minute(datum)
                                Minute(date) Date Return the minute as an Integer from a Date value.
                            Month(datum)
                                Month(date) Date Return the month as an Integer from a Date value.
                            Now
                                Now Date Return the current date and time as a Date object.
                            Second(datum)
                                Second(date) Date Return the seconds as an Integer from a Date value.
                            Time
                                Time Date Return the time as a String.
                            Timer()
                                Timer() Date Return the number of seconds since midnight as a Date. Cast this to a Long.
                            TimeSerial(timme, min, sec)
                                TimeSerial(hour, min, sec) Date Create a date from component pieces: Hours, Minutes, Seconds.
                            WeekDay(datum)
                                WeekDay(date) Date Return the integer 1 through 7 corresponding to Sunday through Saturday.
                            Year(datum)
                                Year(date) Date Return the year as an Integer from a Date value.
                        Kap 6 -- Strängrutiner
                            o
                                ASC(str)
                                    ASC(str) Return the integer ASCII value of the first character in the string. This supports 16-bit Unicode values as well.
                                CHR(n)
                                    CHR(n) Convert an ASCII number to a character.
                                CStr(obj)
                                    CStr(obj) Convert standard types to a string.
                                Format(obj, format)
                                    Format(obj, format) Fancy formatting; works only for strings.
                                Hex(n)
                                    Hex(n) Return the hexadecimal representation of a number as a string.
                                InStr(str, str); InStr(start, str, str); InStr(start, str, str, mode)
                                    InStr(str, str) Attempt to find string 2 in string 1. Returns 0 if not found and starting location if it is found.
                                    InStr(start, str, str) The optional start argument indicates where to start looking. The default value for mode is 1
                                    InStr(start, str, str, mode) (case-insensitive comparison). Setting mode to 0 performs a case-sensitive comparison.
                                Join(s()), Join(s(), str)
                                    Join(s()) Concatenate the array elements, separated by the optional string delimiter, and return the
                                    Join(s(), str) value as a string. The default delimiter is a single space. Inverse of the Split function.
                                LCase(str)
                                    LCase(str) Return a lowercase copy of the string.
                                    o
                                        s38 - calcmacros
                                        REM  *****  BASIC  *****
                                         Option explicit
                                        Sub ppi_add_user
                                            o
                                        dim fname$                'firstname
                                        dim sname$                'surname
                                        dim username$        'username
                                        fname = "Fred"
                                        sname = "Smith"
                                        username = lcase(sname+mid(fname,1,1))
                                        msgbox "Username for " & fname & " " % sname _
                                        & " is " & username, 0 ,"User Name"
                                        End Sub
                                Left(str, n)
                                    Left(str, n) Return the leftmost n characters from the string.
                                Len(str)
                                    Len(str) Return the length of the string.
                                LSet str1 = str2
                                    LSet str1 = str2 Left-justify a string into the space taken by another string.
                                LTrim(str)
                                    LTrim(str) Return a copy of the string with all leading spaces removed.
                                Mid(str, start); Mid(str, start, len); Mid(str, start, len, str)
                                    Mid(str, start) Return the substring, starting at start. If the length is omitted, the entire end of the string is
                                    Mid(str, start, len) returned. If the final string argument is included, this replaces the specified portion of the first
                                    Mid(str, start, len, str) string with the last string.
                                    o
                                        s38 - calcmacros
                                        REM  *****  BASIC  *****
                                         Option explicit
                                        Sub ppi_add_user
                                        o
                                            dim fname$                'firstname
                                            dim sname$                'surname
                                            dim username$        'username
                                            fname = "Fred"
                                            sname = "Smith"
                                            username = lcase(sname+mid(fname,1,1))
                                            msgbox "Username for " & fname & " " % sname _
                                            & " is " & username, 0 ,"User Name"
                                        End Sub
                                Oct(n)
                                    Oct(n) Return the octal representation of a number as a string.
                                Right(str, n)
                                    Right(str, n) Return the rightmost n characters.
                                RSet str1 = str2
                                    RSet str1 = str2 Right-justify a string into the space taken by another string.
                                RTrim(str)
                                    RTrim(str) Return a copy of the string with all trailing spaces removed.
                                Space(n)
                                    Space(n) Return a string with the number of specified spaces.
                                Split(str), Split(str, str)
                                    Split(str) Split a string into an array based on an optional delimiter. Inverse of the Join function.
                                    Split(str, str)
                                Str(n)
                                    Str(n) Convert a number to a string with no localization.
                                StrComp(s1, s2); StrComp(s1, s2, mode)
                                    StrComp(s1, s2) Compare two strings returning -1, 0, or 1 if the first string is less than, equal to, or greater
                                    StrComp(s1, s2, mode) than the second in alphabetical order. Set the optional third argument to zero for a case- insensitive comparison. The default is 1 for a case-sensitive comparison.
                                String(n, char), String(n, ascii)
                                    String(n, char) Return a string with a single character repeated multiple times. The first argument is the
                                    String(n, ascii) number of times to repeat; the second argument is the character or ASCII value.
                                Trim(str)
                                    Trim(str) Return a copy of the string with all leading and trailing spaces removed.
                                UCase(str)
                                    UCase(str) Return an uppercase copy of the string.
                                Val(str)
                                    Val(str) Convert a string to a double. This is very tolerant to non-numeric text.
                                :)
                                    <, >=, <> m fl jämförelseoperatorer funkar för strängar likaväl som tal. De genomför en casesensitive jämförelse. :)
                            Formatspecificeringstecken: !!!! (=infoga) :D *********** s123
                        Kap 7 -- Filrutiner
                            ChDir(sökväg)
                                ChDir(path) Change the currently logged directory or drive. Deprecated; do not use.
                            ChDrive(sökväg)
                                ChDrive(path) Change the currently logged drive. Deprecated; do not use.
                            Close #n
                                Close #n Close a previously opened file or files. Separate file numbers with a comma.
                            ConvertFromURL(str)
                                ConvertFromURL(str) Convert a path expressed as a URL to a system-specific path.
                            ConvertToURL(str)
                                ConvertToURL(str) Convert a system-specific path to a URL.
                            CurDir, CurDir(drive)
                                CurDir Return the current directory as a system-specific path. If the optional drive is specified,
                                CurDir(drive) the current directory for the specified drive is returned.
                            Dir(sökväg), Dir(sökväg, str)
                                Dir(path) Return a listing of files based on an included path. The path may contain a file
                                Dir(path, attr) specification—for example, “/home/andy/*.txt”. Optional attributes determine if a listing of files or directories is returned.
                            EOF(nummer)
                                EOF(number) Return True if the file denoted by “number” is at the end of the file.
                            FileAttr(nummer, 1)
                                FileAttr(number, 1) Return the mode used to open the file given by “number”. The second argument specifies if the file-access or the operating-system mode is desired, but only the file mode is currently supported.
                            FileCopy(src, dest)
                                FileCopy(src, dest) Copy a file from source to destination.
                            FileDateTime(sökväg)
                                FileDateTime(path) Return the date and time of the specified file as a string.
                            FileExists(sökväg)
                                FileExists(path) Return True if the specified file or directory exists.
                            FileLen(sökväg)
                                FileLen(path) Return the length of the specified file as a long.
                            FreeFile()
                                FreeFile() Return the next available file number for use.
                            Get #number, var; Get #number, pos, var
                                Get #number, variable Read a record from a relative file, or a sequence of bytes from a binary file, into a
                                Get #number, pos, variable variable. If the position argument is omitted, data is read from the current position in the
                                    file. For files opened in binary mode, the position is the byte position in the file.
                            GetAttr(sökväg)
                                GetAttr(path) Return a bit pattern identifying the file type.
                            GetPathSeparator()
                                GetPathSeparator() Return the system-specific path separator.
                            Input #nummer, var
                                Input #number, var Sequentially read numeric or string records from an open file and assign the data to one or more variables. The carriage return (ASC=13), line feed (ASC=10), and comma act as delimiters. Input cannot read commas or quotation marks (") because they delimit the text. Use the Line Input statement if you must do this.
                            Kill(sökväg)
                                Kill(path) Delete a file from disk.
                            Line Input #nummer, var
                                Line Input #number, var Sequentially read strings to a variable line-by-line up to the first carriage return (ASC=13)
                                    or line feed (ASC=10). Line end marks are not returned.
                            Loc(nummer)
                                Loc(number) Return the current position in an open file.
                            LOF(nummer)
                                LOF(number) Return the size of an open file, in bytes.
                            MkDir(sökväg)
                                MkDir(path) Create the directory.
                            Name in-namn As slutnamn
                                Name src As dest Rename a file or directory.
                            Open sökväg For Input As #n
                                Open path For Input As #n Open a data channel (file) for reading or writing.
                            Put #n, var; Put #n , pos, var
                                Put #n, var Write a record to a relative file or a sequence of bytes to a binary file.
                                Put #n, pos, var
                            Reset
                                Reset Close all open files and flush all files to disk.
                            RmDir(sökväg)
                                RmDir(path) Remove a directory.
                            Seek #n, pos
                                Seek #n, pos Set the position for the next writing or reading in a file.
                            SetAttr(sökväg, attr[dvs filegenskaper])
                                SetAttr(path, attr) Set file attributes.
                            Write #n, sträng
                                Write #n, string Write data to a file.
                        Kap 8 -- Diverse rutiner
                            ----
                                Blue(färg)
                                    Blue(color) Get the blue component
                                GetGuiType
                                    GetGuiType Get the GUI type: Mac, Windows, Unix
                                Green(färg)
                                    Green(color) Get the green component
                                QBColor(dos_färg)
                                    QBColor(dos_color) Return RGB for standard color
                                Red(färg)
                                    Red(color) Get the red component
                                RGB(röd, grön, blå)
                                    RGB(red, green, blue) RGB to colorNumber
                                TwipsPerPixelX
                                    TwipsPerPixelX Width of each pixel in twips
                                TwipsPerPixelY
                                    TwipsPerPixelY Height of each pixel in twips
                            Flow control functions
                                Choose(number, argument_list)
                                    Choose(number, argument_list) Flow control
                                IIF(villkor, TrueExpression, FalseExpression)
                                    IIF(condition, TrueExpression, FalseExpression) Flow control
                                Stop
                                    Stop Stop execution now
                                Wait(millisekunder)
                                    Wait(milliseconds) Pause the macro for a short time
                                Declare
                                    Declare Declare a DLL that you want to call
                                DDEExecute(nDDEkanal, kommando)
                                    DDEExecute(nDDEChannel, command) Execute a DDE command
                                DDEInitiate(Server, Topic)
                                    DDEInitiate(Server, Topic) Open a DDE channel
                                DDEPoke(nDDEkanal, item, data)
                                    DDEPoke(nDDEChannel, item, data) Set data on the DDE server through the channel
                                DDERequest(nDDEkanal, item)
                                    DDERequest(nDDEChannel, item) Post a DDE request over an open channel
                                DDETerminateAll()
                                    DDETerminateAll() Close all DDE connections
                                FreeLibrary
                                    FreeLibrary Free a DLL library
                                Shell
                                    kör ett kommando genom kommandotolken :)
                            User input and output functions
                                o
                                    InputBox(Msg, titel, default, x_pos, y_pos)
                                        InputBox(Msg, Title, Default, x_pos, y_pos) Request user input as a String.
                                    MsgBox(meddelande, Type, titel) - 2014
                                        MsgBox (Message, Type, Title) Display a message in a nice dialog.
                                        o
                                            s38 - calcmacros
                                            REM  *****  BASIC  *****
                                             Option explicit
                                            Sub ppi_add_user
                                            o
                                                dim fname$                'firstname
                                                dim sname$                'surname
                                                dim username$        'username
                                                fname = "Fred"
                                                sname = "Smith"
                                                username = lcase(sname+mid(fname,1,1))
                                                msgbox "Username for " & fname & " " % sname _
                                                & " is " & username, 0 ,"User Name"
                                            End Sub
                                    Print expr1; expr2; expr3; … …
                                        Print expression1; expression2, expression3;... Print expressions.
                                o
                                    Erl
                                        Erl Line number of last error.
                                    Err
                                        Err Error number of last error.
                                    Error; Error(error_number)
                                        Error Error(error_number)  Get error message either for the last error or for the specified error message.
                                o
                                    Beep
                                        Beep Make a system-dependent beep.
                                    CBool(uttryck)
                                        CBool(expression) Convert an integer or string to Boolean.
                                    Environ(sträng)
                                        Environ(string) Return an environment variable.
                                    GetSolarVersion
                                        GetSolarVersion Internal running version.
                                    CreateObject(object_type)
                                        CreateObject(obj_type) Dynamic version of “Dim As New”.
                            Variable inspection functions
                                IsArray
                                    IsArray Is the variable an array?
                                IsDate
                                    IsDate Does the string contain a valid date?
                                IsEmpty
                                    IsEmpty Is the variable an empty Variant variable?
                                IsMissing
                                    IsMissing Is the variable a missing argument?
                                IsNull
                                    IsNull Is the variable an unassigned object?
                                IsNumeric
                                    IsNumeric Does the string contain a valid number?
                                IsObject
                                    IsObject Is the variable an object?
                                IsUnoStruct
                                    IsUnoStruct Is the variable a UNO structure?
                                TypeName
                                    TypeName Return the type name of the object as a String.
                                VarType
                                    VarType Return the variable type as an Integer.
                        Lista på alla typer i Basic :)
                            BASIC VarType TypeName Len Description
                            yes 0 Empty 0 Variant variable is not initialized
                            yes 1 Null 0 No valid data in an Object variable
                            o
                                yes 2 Integer 2 Integer variable
                                yes 3 Long 4 Long Integer variable
                                    &
                                yes 4 Single 4 Single floating-point variable
                                yes 5 Double 8 Double floating-point variable
                                yes 6 Currency 8 Currency variable
                                    @
                                yes 7 Date 8 Date variable
                                yes 8 String strlen String variable
                                    $
                                yes 9 Object 0 Object variable
                                yes 11 Boolean 1 Boolean variable
                                yes 12 Variant 0 Variant variables act like any type
                            no 10 Error 2 Internal OOo type
                            no 13 DataObject 0 Internal OOo type
                            no 14 Unknown Type 0 Internal OOo type
                            no 15 Unknown Type 0 Internal OOo type
                            no 16 Char 1 Internal OOo type, a single text character
                            yes 17 Byte 1 Internal OOo type, but you can use CByte to create one
                            no 18 UShort 2 Internal OOo type, unsigned short integer (16 bits)
                            no 19 ULong 4 Internal OOo type, unsigned long (32 bits)
                            no 20 Long64 8 Internal OOo type, long (64 bits)
                            no 21 ULong64 8 Internal OOo type, unsigned long (64 bits)
                            no 22 Int 2 Internal OOo type, integer (16 bits)
                            no 23 UInt 2 Internal OOo type, unsigned integer (16 bits)
                            no 24 Void 0 Internal OOo type, no value
                            no 25 HResult 0 Internal OOo type
                            no 26 Pointer 0 Internal OOo type, pointer to something
                            no 27 DimArray 0 Internal OOo type
                            no 28 CArray 0 Internal OOo type
                            no 29 Userdef 0 Internal OOo type, user-defined
                            no 30 Lpstr strlen Internal OOo type, long pointer to a string
                            no 31 Lpwstr strlen Internal OOo type, long pointer to a “Wide” Unicode string
                            no 32 Unknown Type 0 Internal core string type
                            no 33 WString strlen Internal OOo type, “Wide” Unicode string
                            no 34 WChar 2 Internal OOo type, “Wide” Unicode character
                            no 35 Int64 8 Internal OOo type, integer (64 bits)
                            no 36 UInt64 8 Internal OOo type, unsigned integer (64 bits)
                        Deprecated and not yet implemented routines
                            AboutStarBasic Deprecated empty stub that used to be an information dialog.
                            SendKeys Empty stub.
                            DumpAllObjects(path, bool) Internal debugging routine.
                            Load(Object) Deprecated.
                            Unload(Object) Deprecated.
                            LoadPicture(path) Deprecated. Loads an image file.
                            SavePicture(obj, path) Deprecated. Fails to save an image file.
                            CreatePropertySet(object) Deprecated. Early UNO support function.
                            CCur(expression) Purposely generates a run-time error. Convert to currency.
                            StrConv Purposely generates a run-time error. Convert strings to different cases.
                            DateAdd Empty stub. Add date components.
                            DateDiff Empty stub. Difference between two date components.
                            DatePart Empty stub. Extract a specific date component.
                    Kap 9 -- Universal network objects
                        Functions related to Universal Network Objects
                            BasicLibraries
                                BasicLibraries Access document Basic libraries
                            CreateUnoDialog()
                                CreateUnoDialog() Create an existing dialog
                            CreateUnoListener()
                                CreateUnoListener() Create a listener
                            CreateUnoService()
                                CreateUnoService() Create a Universal Network Object Service
                            CreateUnoStruct()
                                CreateUnoStruct() Create a Universal Network Object
                            CreateUnoValue()
                                CreateUnoValue() Create a Universal Network Object value
                            DialogLibraries
                                DialogLibraries Document dialog libraries
                            EqualUNOObjects()
                                EqualUNOObjects() Are these the same?
                            FindObject()
                                FindObject() Find object
                            FindObjectProperty()
                                FindObjectProperty() Find object property
                            GetDefaultContext()
                                GetDefaultContext() Get a copy of the default context
                            GetProcessServiceManager()
                                GetProcessServiceManager() Get service manager
                            GlobalScope
                                GlobalScope Application-level libraries
                            HasUnoInterfaces()
                                HasUnoInterfaces() Does it support these?
                            IsUnoStruct()
                                IsUnoStruct() Is this variable a Universal Network Object?
                            ThisComponent
                                ThisComponent Special variable representing the current document
                        UNO interface
                            Methods defined by the com.sun.star.text.XTextRange interface
                                getText()
                                    getText() Return the com.sun.star.text.XText interface that contains this XTextRange.
                                getStart()
                                    getStart() Return a com.sun.star.text.XTextRange that references only the start position.
                                getEnd()
                                    getEnd() Return a com.sun.star.text.XTextRange that references only the end position.
                                getString()
                                    getString() Return a string that includes the text inside this text range.
                                setString(str)
                                    setString(str) Set the string for this text range, replacing existing text and clearing all styles.
                                o
                                    Obs! Ett UNO-interface <may be derived from another. Every UNO-interface is required to be derived from com.sun.star.uno.XInterface
                        Initial routines for inspecting Universal Network Objects
                            IsMissing(obj)
                                IsMissing(obj) Use this for optional arguments to see if they are missing.
                            IsNull(obj)
                                IsNull(obj) You cannot inspect a null object, but you know that it is null.
                            IsEmpty(obj)
                                IsEmpty(obj) You cannot inspect an empty object, but you know that it is empty.
                            IsArray(obj)
                                IsArray(obj) Use array-inspection methods to learn more about the array.
                            TypeName(obj)
                                TypeName(obj) Determine if this is a simple type such as a String or an Integer. If this is an Object, it is probably a UNO structure or a UNO service.
                            IsUnoStruct(obj)
                                IsUnoStruct(obj) Determine if this is a UNO structure.
                            o
                                Most UNO-services also support the com.sun.star.lang.XServiceInfo interface, which allows you to ask the object what services it supports. :)
                        XServicInfo methods
                            getImplementationName ()
                                getImplementationName () Returns a string that uniquely identifies the implementation of the service. For example, SwXTextDocument is the name of a Writer text document.
                            getSupportedServiceNames()
                                getSupportedServiceNames() Return a string array of services that the object supports.
                            supportService(service-namn)
                                supportsService(serviceName) Return True if the object supports the service name.
                        Unique service names based on document type
                            Drawing
                                Drawing com.sun.star.drawing.DrawDocument
                            Writer
                                Writer com.sun.star.text.TextDocument
                            Calc
                                Calc com.sun.star.sheet.SpreadsheetDocument
                            Math
                                Math com.sun.star.formula.FormulaProperties
                            Presentation
                                Presentation com.sun.star.presentation.PresentationDocument
                        UNO ”dbg_”-properties
                            Property Delimiter Description
                            dbg_properties
                                dbg_properties “;” All properties supported by the object
                            dbg_methods
                                dbg_methods “;” All methods supported by the object
                            dbg_supportedInterfaces
                                dbg_supportedInterfaces Chr$(10) All interfaces supported by the object
                    Kap 10 -- UNO och Dispatcher
                        XDispatchProvider
                            XDispatchProvider   Dispatch provider that performs the dispatch.
                        URL String
                            URL String   The command to dispatch, as a string.
                        Target Frame String
                            Target Frame String   Identifies the frame that will receive the dispatch. Use an empty string or “_self” to specify the current frame (any other value is invalid).
                        long
                            long    Optional search flags that indicate how to find the target frame. Use zero or blank (see Listing 3), because it is not supported.
                        PropertyValue()
                            PropertyValue()    Optional arguments that are dependent on the implementation.
                        DISPATCH COMMANDS
                            Global dispatch commands
                                About
                                AbsoluteRecord
                                ActiveHelp
                                AddDateField
                                AddDirect
                                AddField
                                AddressBookSource
                                AddTable
                                AddWatch
                                AlignCenter
                                AlignDown
                                AlignMiddle
                                AlignUp
                                AlwaysVisible
                                Arc
                                ArrangeHorizontal
                                ArrangeIcons
                                ArrangeVertical
                                ArrangeWinsHorizontal
                                ArrangeWinsVertical
                                AutoControlFocus
                                AutoCorrectDlg
                                AutoFilter
                                AutoFormat
                                AutoPilotAddressDataSource
                                AutoPilotAgenda
                                AutoPilotFax
                                AutoPilotLetter
                                AutoPilotMemo
                                AutoPilotMenu
                                AutoPilotPresentations
                                AutoPilotSDBImport
                                BackgroundColor
                                BackgroundPatternController
                                BasicBreak
                                BasicIDEAppear
                                BasicStepInto
                                BasicStepOut
                                BasicStepOver
                                BasicStop
                                BeamerTaskSensitive
                                Bezier_Unfilled
                                BezierClose
                                BezierConvert
                                BezierCutLine
                                BezierDelete
                                BezierEdge
                                BezierEliminatePoints
                                BezierFill
                                BezierInsert
                                BezierMove
                                BezierSmooth
                                BezierSymmetric
                                BibliographyComponent
                                BmpMask
                                Bold
                                BookmarkMenu
                                BringToFront
                                BrowseView
                                Cascade
                                CenterPara
                                ChangeCaseToFullWidth
                                ChangeCaseToHalfWidth
                                ChangeCaseToHiragana
                                ChangeCaseToKatagana
                                ChangeCaseToLower
                                ChangeCaseToUpper
                                CharFontName
                                CheckBox
                                Checkbox
                                ChooseControls
                                ChooseMacro
                                ChoosePolygon
                                Circle
                                Circle_Unfilled
                                CircleArc
                                CircleCut
                                CircleCut_Unfilled
                                CirclePie
                                CirclePie_Unfilled
                                ClearDiskCache
                                ClearHistory
                                ClearOutline
                                CloseDoc
                                CloseTask
                                CloseWin
                                Color
                                ColorControl
                                Combobox
                                ComboBox
                                CommonTaskBarVisible
                                CompareDocuments
                                CompileBasic
                                Config
                                ConfigureDialog
                                ConfigureToolboxVisible
                                Context
                                ContourDialog
                                ControlProperties
                                ConvertToButton
                                ConvertToCheckBox
                                ConvertToCombo
                                ConvertToCurrency
                                ConvertToDate
                                ConvertToEdit
                                ConvertToFileControl
                                ConvertToFixed
                                ConvertToFormatted
                                ConvertToGrid
                                ConvertToGroup
                                ConvertToImageBtn
                                ConvertToImageControl
                                ConvertToList
                                ConvertToNumeric
                                ConvertToPattern
                                ConvertToRadio
                                ConvertToTime
                                Copy
                                CountAll
                                CurrencyField
                                CurrentDate
                                CurrentTime
                                Cut
                                DatasourceAdministration
                                DateField
                                DecrementIndent
                                DefaultBullet
                                DefaultNumbering
                                Delete
                                DeleteFrame
                                DeleteRecord
                                DesignerDialog
                                DesktopMode
                                DistributeSelection
                                DocumentManager
                                DrawCaption
                                DrawText
                                DSBrowserExplorer
                                Edit
                                EditDoc
                                EditFrameSet
                                Ellipse
                                Ellipse_Unfilled
                                EllipseCut
                                EllipseCut_Unfilled
                                EnterGroup
                                Explorer
                                ExportDirectToPDF
                                ExportTo
                                ExportToPDF
                                ExtendedHelp
                                FieldController
                                FileControl
                                FileDocument
                                FillColor
                                FillShadow
                                FillStyle
                                FilterCrit
                                FirstRecord
                                Flash
                                FloatingTask
                                FmExplorerController
                                FmFilterNavigatorController
                                FontDialog
                                FontHeight
                                FontWork
                                FormatArea
                                FormatGroup
                                FormatLine
                                FormatMenu
                                FormattedField
                                FormatUngroup
                                FormFilter
                                FormFiltered
                                FormFilterExecute
                                FormFilterExit
                                FormFilterNavigator
                                FormProperties
                                FrameContent
                                FrameLineColor
                                FrameName
                                FrameSpacing
                                Freeline
                                Freeline_Unfilled
                                FullScreen
                                FunctionBarVisible
                                Gallery
                                GeneralOptions
                                GetColorTable
                                GoDown
                                GoDownBlock
                                GoDownBlockSel
                                GoDownSel
                                GoLeft
                                GoLeftBlock
                                GoLeftBlockSel
                                GoLeftSel
                                GoRight
                                GoRightSel
                                GoToEndOfData
                                GoToEndOfDataSel
                                GoToEndOfRow
                                GoToEndOfRowSel
                                GoToStart
                                GoToStartOfRow
                                GoToStartOfRowSel
                                GoToStartSel
                                GoUp
                                GoUpBlock
                                GoUpBlockSel
                                GoUpSel
                                GrabControlFocus
                                GrafAttrCrop
                                GrafBlue
                                GrafContrast
                                GrafGamma
                                GrafGreen
                                GrafInvert
                                GrafLuminance
                                GrafMode
                                GrafRed
                                GrafTransparence
                                GraphicFilterInvert
                                GraphicFilterMosaic
                                GraphicFilterPopart
                                GraphicFilterPoster
                                GraphicFilterRelief
                                GraphicFilterRemoveNoise
                                GraphicFilterSepia
                                GraphicFilterSharpen
                                GraphicFilterSmooth
                                GraphicFilterSobel
                                GraphicFilterSolarize
                                GraphicFilterToolbox
                                Grid
                                GridUse
                                GridVisible
                                Group
                                GroupBox
                                Groupbox
                                HelpChooseFile
                                HelperDialog
                                HelpIndex
                                HelplinesMove
                                HelpMenu
                                HelpOnHelp
                                HelpSupport
                                HelpTip
                                HFixedLine
                                HideDetail
                                HideSpellMark
                                HScrollbar
                                HyperlinkDialog
                                Imagebutton
                                ImageControl
                                ImageMapDialog
                                IncrementIndent
                                InsertAnnotation
                                InsertApplet
                                InsertCurrencyField
                                InsertDoc
                                InsertDraw
                                InsertEdit
                                InsertFileControl
                                InsertFixedText
                                InsertFormattedField
                                InsertGraphic
                                InsertHyperlink
                                InsertImage
                                InsertImageControl
                                InsertListbox
                                InsertMath
                                InsertMode
                                InsertNumericField
                                InsertObject
                                InsertObjectChart
                                InsertObjectFloatingFrame
                                InsertPatternField
                                InsertPlugin
                                InsertPushbutton
                                InsertSound
                                InsertSymbol
                                InsertTable
                                InsertTextFrame
                                InsertVideo
                                InternetDialog
                                Intersect
                                IsLoading
                                Italic
                                JustifyPara
                                Label
                                LastRecord
                                LaunchStarImage
                                LeaveGroup
                                LeftPara
                                LibSelector
                                Line
                                Line_Diagonal
                                LineDash
                                LineEndStyle
                                LineStyle
                                LineWidth
                                ListBox
                                LoadBasic
                                LoadConfiguration
                                MacroBarVisible
                                MacroDialog
                                MacroRecorder
                                MatchGroup
                                MenuBarVisible
                                Merge
                                MergeDocuments
                                Minimize
                                ModifiedStatus
                                ModifyFrame
                                ModuleDialog
                                NavigationBarVisible
                                Navigator
                                NewDoc
                                NewFrameSet
                                NewRecord
                                NewWindow
                                NextRecord
                                NumericField
                                ObjectAlign
                                ObjectAlignLeft
                                ObjectAlignRight
                                ObjectBackOne
                                ObjectBarVisible
                                ObjectCatalog
                                ObjectForwardOne
                                ObjectMenue
                                OnlineOptions
                                OnlineRegistrationDlg
                                Ope
                                OpenHyperlinkOnCursor
                                OpenReadOnly
                                OpenTemplate
                                OpenUrl
                                OptionBarVisible
                                OptionsTreeDialog
                                OrderCrit
                                Organizer
                                OutlineBullet
                                OutlineCollapse
                                OutlineCollapseAll
                                OutlineDown
                                OutlineExpand
                                OutlineExpandAll
                                OutlineFont
                                OutlineFormat
                                OutlineLeft
                                OutlineRight
                                OutlineUp
                                ParagraphDialog
                                ParaLeftToRight
                                ParaRightToLeft
                                Paste
                                PatternField
                                PickList
                                Pie
                                Pie_Unfilled
                                PlugInsActive
                                PolyFormen
                                Polygon_Diagonal
                                Polygon_Diagonal_Unfilled
                                Polygon_Unfilled
                                Preview
                                PrevRecord
                                Print
                                PrintDefault
                                PrinterSetup
                                PrintPreview
                                ProgressBar
                                PropertyController
                                Pushbutton
                                Quit
                                Radiobutton
                                RadioButton
                                RecFromText
                                RecSave
                                RecSearch
                                Rect
                                Rect_Rounded
                                Rect_Rounded_Unfilled
                                Rect_Unfilled
                                RecText
                                RecTotal
                                RecUndo
                                Redo
                                Refresh
                                Reload
                                RemoveFilter
                                RemoveFilterSort
                                Repaint
                                Repeat
                                RightPara
                                RubyDialog
                                RunBasic
                                Save
                                SaveAll
                                SaveAs
                                SaveAsTemplate
                                SaveAsUrl
                                SaveBasicAs
                                SaveConfiguration
                                SbaExecuteSql
                                SbaNativeSql
                                Scan
                                ScEditOptions
                                SchEditOptions
                                SdEditOptions
                                SdGraphicOptions
                                SearchDialog
                                Select
                                SelectAll
                                SelectMode
                                SelectObject
                                SendFax
                                SendMail
                                SendMailDocAsPDF
                                SendToBack
                                SetBorderStyle
                                SetDefault
                                SetDocumentProperties
                                SetObjectToBackground
                                SetObjectToForeground
                                Shadowed
                                ShowBrowser
                                ShowDetail
                                ShowFmExplorer
                                ShowForms
                                ShowHidden
                                ShowImeStatusWindow
                                ShowItemBrowser
                                ShowPropBrowser
                                ShowProperties
                                SimEditOptions
                                Size
                                SmEditOptions
                                SortDown
                                Sortup
                                SourceView
                                SpacePara1
                                SpacePara15
                                SpacePara2
                                Spelling
                                SpellOnline
                                Spinbutton
                                SplitHorizontal
                                SplitParentHorizontal
                                SplitParentVertical
                                SplitVertical
                                Square
                                Square_Rounded
                                Square_Rounded_Unfilled
                                Square_Unfilled
                                StartMenu
                                StateTableCell
                                StatusBarVisible
                                StatusGetPosition
                                StatusGetTitle
                                Stop
                                StopRecording
                                Strikeout
                                StyleApply
                                StyleCatalog
                                StyleNewByExample
                                StyleUpdateByExample
                                SubScript
                                Substract
                                SuperScript
                                SwEditOptions
                                SwitchControlDesignMode
                                TabDialog
                                TaskBarVisible
                                TestMode
                                Text
                                Text_Marquee
                                TextdirectionLeftToRight
                                TextdirectionTopToBottom
                                TextFitToSize
                                Thesaurus
                                Tile
                                TileWins
                                TimeField
                                ToggleBreakPoint
                                ToggleObjectBezierMode
                                ToggleObjectRotateMode
                                ToolBarVisible
                                ToolsMacroEdit
                                TransformDialog
                                TwainSelect
                                TwainTransfer
                                Underline
                                Undo
                                Ungroup
                                URLButton
                                UrlButton
                                UseWizards
                                VersionDialog
                                VersionVisible
                                VerticalCaption
                                VerticalText
                                VFixedLine
                                ViewDataSourceBrowser
                                ViewFormAsGrid
                                VScrollbar
                                Window3D
                                XLineColor
                                XLineStyle
                                Zoom
                                Zoom100Percent
                                ZoomIn
                                ZoomNext
                                ZoomObjects
                                ZoomOptimal
                                ZoomPage
                                ZoomPageWidth
                                ZoomPlus
                                ZoomPrevious
                                ZoomToolBox
                            Calc dispatch commands
                                AcceptChanges
                                Add
                                AddPrintArea
                                AdjustPrintZoom
                                AlignBlock
                                AlignBottom
                                AlignHorizontalCenter
                                AlignLeft
                                AlignRight
                                AlignTop
                                AlignVCenter
                                ApplyNames
                                AuditingFillMode
                                AutoComplete
                                AutoFill
                                AutomaticCalculation
                                AutoOutline
                                AutoRefreshArrows
                                Calculate
                                CalculateHard
                                Cancel
                                ChooseDesign
                                ClearArrowDependents
                                ClearArrowPrecedents
                                ClearArrows
                                ClearContents
                                ClosePreview
                                ColumnWidth
                                CommentChange
                                ConditionalFormatDialog
                                CreateNames
                                DataAreaRefresh
                                DataConsolidate
                                DataDataPilotRun
                                DataFilterAutoFilter
                                DataFilterHideAutoFilter
                                DataFilterRemoveFilter
                                DataFilterSpecialFilter
                                DataFilterStandardFilter
                                DataImport
                                DataPilotFilter
                                DataReImport
                                DataSelect
                                DataSort
                                DataSubTotals
                                DefineDBName
                                DefineLabelRange
                                DefineName
                                DefinePrintArea
                                DeleteAllBreaks
                                DeleteCell
                                DeleteColumnbreak
                                DeleteColumns
                                DeletePivotTable
                                DeletePrintArea
                                DeleteRowbreak
                                DeleteRows
                                Deselect
                                DrawChart
                                EditHeaderAndFooter
                                EditLinks
                                EditPrintArea
                                EuroConverter
                                FillDown
                                FillLeft
                                FillRight
                                FillSeries
                                FillTable
                                FillUp
                                FirstPage
                                FocusCellAddress
                                FocusInputLine
                                FormatCellDialog
                                FreezePanes
                                FunctionBox
                                FunctionDialog
                                GoalSeekDialog
                                GoDownToEndOfData
                                GoDownToEndOfDataSel
                                GoLeftBlock
                                GoLeftToStartOfData
                                GoLeftToStartOfDataSel
                                GoRightBlock
                                GoRightBlockSel
                                GoRightToEndOfData
                                GoRightToEndOfDataSel
                                GoToCurrentCell
                                GoUpToStartOfData
                                GoUpToStartOfDataSel
                                Hide
                                HideColumn
                                HideRow
                                Hyphenate
                                InputLineVisible
                                InsCellsCtrl
                                Insert
                                InsertCell
                                InsertCellsDown
                                InsertCellsRight
                                InsertColumnBreak
                                InsertColumns
                                InsertContents
                                InsertCtrl
                                InsertExternalDataSource
                                InsertName
                                InsertObjectStarImage
                                InsertObjectStarMath
                                InsertRowBreak
                                InsertRows
                                InsObjCtrl
                                JumpToNextTable
                                JumpToNextUnprotected
                                JumpToPreviousUnprotected
                                JumpToPrevTable
                                LastPage
                                MergeCells
                                Move
                                Name
                                NextPage
                                NoteVisible
                                NumberFormatCurrency
                                NumberFormatDate
                                NumberFormatDecDecimals
                                NumberFormatDecimal
                                NumberFormatIncDecimals
                                NumberFormatPercent
                                NumberFormatScientific
                                NumberFormatStandard
                                NumberFormatTime
                                ObjectMirrorHorizontal
                                ObjectMirrorVertical
                                PagebreakMode
                                PageFormatDialog
                                PasteSpecial
                                PreviousPage
                                Protect
                                ProtectTraceChangeMode
                                RecalcPivotTable
                                RefreshArrows
                                Remove
                                RenameObject
                                RenameTable
                                RepeatSearch
                                ResetAttributes
                                ResetPrintZoom
                                RowHeight
                                Scale
                                ScenarioManager
                                SelectArrayFormula
                                SelectColumn
                                SelectData
                                SelectDB
                                SelectRow
                                SelectScenario
                                SelectTables
                                SetInputMode
                                SetOptimalColumnWidth
                                SetOptimalColumnWidthDirect
                                SetOptimalRowHeight
                                Show
                                ShowChanges
                                ShowColumn
                                ShowDependents
                                ShowErrors
                                ShowInvalid
                                ShowPrecedents
                                ShowRow
                                SimpleReferenz
                                SortAscending
                                SortDescending
                                SplitCell
                                SplitWindow
                                StandardTextAttributes
                                StarChartDataDialog
                                StarChartDialog
                                StatusDocPos
                                StatusPageStyle
                                StatusSelectionMode
                                StatusSelectionModeExp
                                StatusSelectionModeExt
                                TableOperationDialog
                                TableSelectAll
                                TextAttributes
                                ToggleAnchorType
                                ToggleRelative
                                ToolProtectionDocument
                                ToolsOptions
                                TraceChangeMode
                                UnderlineDotted
                                UnderlineDouble
                                UnderlineNone
                                UnderlineSingle
                                UpdateChart
                                Validation
                                ViewRowColumnHeaders
                                ViewValueHighlighting
                                WrapText
                                ZoomIn
                                ZoomOut
                            Chart dispatch commands
                                AllTitles
                                Backward
                                BarWidth
                                ChartTitle
                                ContextType
                                DataDescriptionType
                                DataInColumns
                                DataInRows
                                DefaultColors
                                DiagramArea
                                DiagramAxisA
                                DiagramAxisAll
                                DiagramAxisB
                                DiagramAxisX
                                DiagramAxisY
                                DiagramAxisZ
                                DiagramData
                                DiagramFloor
                                DiagramGrid
                                DiagramGridAll
                                DiagramGridXHelp
                                DiagramGridXMain
                                DiagramGridYHelp
                                DiagramGridYMain
                                DiagramGridZHelp
                                DiagramGridZMain
                                DiagramObjects
                                DiagramType
                                DiagramWall
                                Forward
                                InsertAxis
                                InsertDescription
                                InsertGrids
                                InsertLegend
                                InsertStatistics
                                InsertTitle
                                Legend
                                LegendPosition
                                MainTitle
                                NewArrangement
                                NumberOfLines
                                ScaleText
                                SubTitle
                                ToggleAxisDescr
                                ToggleAxisTitle
                                ToggleGridHorizontal
                                ToggleGridVertical
                                ToggleLegend
                                ToggleTitle
                                ToolSelect
                                Update
                                View3D
                                XTitle
                                YTitle
                                ZTitle
                            Draw dispatch commands
                                ActionMode
                                AdvancedMode
                                AnimationEffects
                                AnimationMode
                                AnimationObjects
                                ArrowsToolbox
                                Backward
                                BeforeObject
                                BehindObject
                                BigHandles
                                Break
                                Bullet
                                CapturePoint
                                ChangeBezier
                                ChangePolygon
                                ClickChangeRotation
                                ColorView
                                Combine
                                Cone
                                Connect
                                Connector
                                ConnectorArrowEnd
                                ConnectorArrows
                                ConnectorArrowStart
                                ConnectorAttributes
                                ConnectorCircleEnd
                                ConnectorCircles
                                ConnectorCircleStart
                                ConnectorCurve
                                ConnectorCurveArrowEnd
                                ConnectorCurveArrows
                                ConnectorCurveArrowStart
                                ConnectorCurveCircleEnd
                                ConnectorCurveCircles
                                ConnectorCurveCircleStart
                                ConnectorLine
                                ConnectorLineArrowEnd
                                ConnectorLineArrows
                                ConnectorLineArrowStart
                                ConnectorLineCircleEnd
                                ConnectorLineCircles
                                ConnectorLineCircleStart
                                ConnectorLines
                                ConnectorLinesArrowEnd
                                ConnectorLinesArrows
                                ConnectorLinesArrowStart
                                ConnectorLinesCircleEnd
                                ConnectorLinesCircles
                                ConnectorLinesCircleStart
                                ConnectorToolbox
                                convert_to_contour
                                ConvertInto3D
                                ConvertInto3DLathe
                                ConvertInto3DLatheFast
                                ConvertIntoBitmap
                                ConvertIntoMetaFile
                                ConvertTo1BitMatrix
                                ConvertTo1BitThreshold
                                ConvertTo4BitColors
                                ConvertTo4BitGrays
                                ConvertTo8BitColors
                                ConvertTo8BitGrays
                                ConvertToTrueColor
                                CopyObjects
                                CrookRotate
                                CrookSlant
                                CrookStretch
                                Cube
                                CustomShowDialog
                                Cylinder
                                Cyramid
                                DeleteLayer
                                DeletePage
                                DeleteSnapItem
                                Dia
                                DiaAuto
                                DiaEffect
                                DiaMode
                                DiaSpeed
                                DiaTime
                                Dismantle
                                DoubleClickTextEdit
                                DrawingMode
                                DuplicatePage
                                EditHyperlink EffectWindow EllipseToolbox ExpandPage
                                FillDraft
                                Forward
                                GlueEditMode
                                GlueEscapeDirection
                                GlueEscapeDirectionBottom
                                GlueEscapeDirectionLeft
                                GlueEscapeDirectionRight
                                GlueEscapeDirectionTop
                                GlueHorzAlignCenter
                                GlueHorzAlignLeft
                                GlueHorzAlignRight
                                GlueInsertPoint
                                GluePercent
                                GlueVertAlignBottom
                                GlueVertAlignCenter
                                GlueVertAlignTop
                                GrafFilterInvert
                                GrafFilterRemoveNoise
                                GrafFilterSharpen
                                GrafFilterSmooth
                                GrafFilterToolbox
                                GraphicDraft
                                GridFront
                                HalfSphere
                                HandlesDraft
                                HandoutMasterPage
                                HandoutMode
                                HelplinesFront
                                HelplinesUse
                                HelplinesVisible
                                HideSlide
                                Hyphenation
                                ImportFromFile
                                InsertAuthorField
                                InsertDateFieldFix
                                InsertDateFieldVar
                                InsertFileField
                                InsertLayer
                                InsertPage
                                InsertPageField
                                InsertPageQuick
                                InsertTimeFieldFix
                                InsertTimeFieldVar
                                InsertToolbox
                                InteractiveGradient
                                InteractiveTransparence
                                LayerMode
                                LayoutStatus
                                LeaveAllGroups
                                LineArrowCircle
                                LineArrowEnd
                                LineArrows
                                LineArrowSquare
                                LineArrowStart
                                LineCircleArrow
                                LineDraft
                                LineSquareArrow
                                LineToolbox
                                ManageLinks
                                MasterPage
                                MeasureAttributes
                                MeasureLine
                                MirrorHorz
                                MirrorVert
                                ModifyField
                                ModifyLayer
                                ModifyPage
                                Morphing
                                NameGroup
                                NewRouting
                                NotesMasterPage
                                NotesMode
                                ObjectPosition
                                Objects3DToolbox
                                OutlineMode
                                OutputQualityBlackWhite
                                OutputQualityColor
                                OutputQualityContrast
                                OutputQualityGrayscale
                                PackAndGo
                                PageMode
                                PageSetup
                                PagesPerRow
                                PageStatus
                                ParaspaceDecrease
                                ParaspaceIncrease
                                PasteClipboard
                                PickThrough
                                PixelMode
                                Polygon
                                Presentation
                                PresentationDialog
                                PresentationLayout
                                PreviewQualityBlackWhite
                                PreviewQualityColor
                                PreviewQualityContrast
                                PreviewQualityGrayscale
                                PreviewWindow
                                QuickEdit
                                RectangleToolbox
                                RehearseTimings
                                RenameLayer
                                RenamePage
                                RenamePageQuick
                                ReverseOrder
                                Shear
                                Shell3D
                                SlideChangeWindow
                                SlideMasterPage
                                SnapBorder
                                SnapFrame
                                SnapPoints
                                SolidCreate
                                Sphere
                                SummaryPage
                                SwitchLayer
                                SwitchPage
                                TextAttributes
                                TextDraft
                                TextFitToSizeTool
                                TextToolbox
                                TitleMasterPage
                                Torus
                                VerticalTextFitToSizeTool
                                ZoomPanning
                            Math dispatch commands
                                Adjust
                                ChangeAlignment
                                ChangeDistance
                                ChangeFont
                                ChangeFontSize
                                Draw
                                FitInWindow
                                FormelCursor
                                InsertCommand
                                InsertConfigName
                                InsertFormula
                                ModifyStatus
                                NextError
                                NextMark
                                Preferences
                                PrevError
                                PrevMark
                                RedrawAutomatic
                                SymbolCatalogue
                                Symbols
                                Textmode
                                TextStatus
                                ToolBox
                                View100
                                View200
                                View50
                                ZoomIn
                                ZoomOut
                            Writer dispatch commands
                                AcceptTrackedChanges
                                AddAllUnknownWords
                                AlignBottom
                                AlignCharBottom
                                AlignCharTop
                                AlignHorizontalCenter
                                AlignLeft
                                AlignRight
                                AlignRowBottom
                                AlignRowTop
                                AlignTop
                                AlignVerticalCenter
                                AlignVerticalCharCenter
                                AlignVerticalRowCenter
                                AuthoritiesEntryDialog
                                AutoFormatApply
                                AutoFormatRedlineApply
                                AutoSum
                                BackColor
                                BackgroundDialog
                                BorderDialog
                                BulletsAndNumberingDialog
                                Calc
                                CalculateSel
                                CellVertBottom
                                CellVertCenter
                                CellVertTop
                                ChainFrames
                                ChangeDatabaseField
                                ChapterNumberingDialog
                                CharBackgroundExt
                                CharColorExt
                                CharLeftSel
                                CharRightSel
                                ClosePreview
                                CommentChangeTracking
                                ControlCodes
                                ConvertTableText
                                CreateAbstract
                                DecrementIndentValue
                                DecrementLevel
                                DecrementSubLevels
                                DeleteColumns
                                DeleteRows
                                DelLine
                                DelToEndOfLine
                                DelToEndOfPara
                                DelToEndOfSentence
                                DelToEndOfWord
                                DelToStartOfLine
                                DelToStartOfPara
                                DelToStartOfSentence
                                DelToStartOfWord
                                DistributeColumns
                                DistributeRows
                                EditCurIndex
                                EditFootnote
                                EditGlossary
                                EditHyperlink
                                EditRegion
                                EndOfDocumentSel
                                EndOfLineSel
                                EndOfParaSel
                                EntireColumn
                                EntireRow
                                Escape
                                ExecHyperlinks
                                ExecuteMacroField
                                ExpandGlossary
                                FieldDialog
                                Fieldnames
                                Fields
                                FlipHorizontal
                                FlipVertical
                                FontColor
                                FootnoteDialog
                                FormatColumns
                                FormatDropcap
                                FrameDialog
                                GoDown
                                GoLeft
                                GoRight
                                GoToAnchor
                                GoToEnd
                                GoToEndOfColumn
                                GoToEndOfDoc
                                GoToEndOfLine
                                GoToEndOfNextColumn
                                GoToEndOfNextPage
                                GoToEndOfNextPageSel
                                GoToEndOfPage
                                GoToEndOfPageSel
                                GoToEndOfPara
                                GoToEndOfPrevColumn
                                GoToEndOfPrevPage
                                GoToEndOfPrevPageSel
                                GotoNextIndexMark
                                GotoNextInputField
                                GotoNextObject
                                GoToNextPara
                                GotoNextPlacemarker
                                GoToNextSentence
                                GotoNextSentenceSel
                                GotoNextTableFormula
                                GoToNextWord
                                GotoNextWrongTableFormula
                                GotoPage
                                GotoPrevIndexMark
                                GotoPrevInputField
                                GotoPrevObject
                                GoToPrevPara
                                GotoPrevPlacemarker
                                GoToPrevSentence
                                GotoPrevSentenceSel
                                GotoPrevTableFormula
                                GoToPrevWord
                                GotoPrevWrongTableFormula
                                GoToStartOfColumn
                                GoToStartOfDoc
                                GoToStartOfLine
                                GoToStartOfNextColumn
                                GoToStartOfNextPage
                                GoToStartOfNextPageSel
                                GoToStartOfPage
                                GoToStartOfPageSel
                                GoToStartOfPara
                                GoToStartOfPrevColumn
                                GoToStartOfPrevPage
                                GoToStartOfPrevPageSel
                                GoToStartOfTable
                                GoUp
                                Graphic
                                GraphicDialog
                                Grow
                                HScroll
                                Hyphenate
                                IncrementIndentValue
                                IncrementLevel
                                IncrementSubLevels
                                IndexEntryDialog
                                IndexMarkToIndex
                                InsertAnnotation
                                InsertAuthorField
                                InsertAuthoritiesEntry
                                InsertBookmark
                                InsertBreak
                                InsertBusinessCard
                                InsertCaptionDialog
                                InsertColumnBreak
                                InsertColumns
                                InsertColumnSection
                                InsertCtrl
                                InsertDateField
                                InsertEndnote
                                InsertEnvelope
                                InsertField
                                InsertFieldCtrl
                                InsertFooter
                                InsertFootnote
                                InsertFootnoteDialog
                                InsertFormula
                                InsertFrame
                                InsertFrameInteract
                                InsertFrameInteractNoColumns
                                InsertGraphicRuler
                                InsertHardHyphen
                                InsertHeader
                                InsertHyperlinkDlg
                                InsertIndexesEntry
                                InsertLabels
                                InsertLinebreak
                                InsertMultiIndex
                                InsertNeutralParagraph
                                InsertNonBreakingSpace
                                InsertObjCtrl
                                InsertObjectDialog
                                InsertObjectStarMath
                                InsertPagebreak
                                InsertPageCountField
                                InsertPageFooter
                                InsertPageHeader
                                InsertPageNumberField
                                InsertPara
                                InsertReferenceField
                                InsertRows
                                InsertScript
                                InsertSection
                                InsertSoftHyphen
                                InsertSymbol
                                InsertTable
                                InsertTimeField
                                InsertTitleField
                                InsertTopicField
                                JumpDownThisLevel
                                JumpToEndOfDoc
                                JumpToFooter
                                JumpToFootnoteArea
                                JumpToFootnoteOrAnchor
                                JumpToHeader
                                JumpToNextBookmark
                                JumpToNextFootnote
                                JumpToNextFrame
                                JumpToNextRegion
                                JumpToNextTable
                                JumpToPrevBookmark
                                JumpToPrevFootnote
                                JumpToPrevRegion
                                JumpToPrevTable
                                JumpToReference
                                JumpToStartOfDoc
                                JumpUpThisLevel
                                LineDownSel
                                LineNumberingDialog
                                LineUpSel
                                LinkDialog
                                LoadStyles
                                Marks
                                MergeCells
                                MergeDialog
                                MergeTable
                                MirrorGraphicOnEvenPages
                                MirrorOnEvenPages
                                MoveDown
                                MoveDownSubItems
                                MoveUp
                                MoveUpSubItems
                                NameGroup (!)
                                NewGlobalDoc
                                NewHtmlDoc
                                NumberFormatCurrency
                                NumberFormatDate
                                NumberFormatDecimal
                                NumberFormatPercent
                                NumberFormatScientific
                                NumberFormatStandard
                                NumberFormatTime
                                NumberingStart
                                NumberOrNoNumber
                                ObjectBackOne
                                ObjectForwardOne
                                OnlineAutoFormat
                                OptimizeTable
                                PageColumnDialog
                                PageDialog
                                PageDown
                                PageDownSel
                                PageOffsetDialog
                                PageStyleApply
                                PageStyleName
                                PageUp
                                PageUpSel
                                PasteSpecial
                                PreviewPrintOptions
                                PreviewZoom
                                PrintLayout
                                PrintPagePreView
                                Protect
                                ProtectTraceChangeMode
                                RefreshView
                                RemoveBullets
                                RemoveTableOf
                                Repaginate
                                RepeatSearch
                                ResetAttributes
                                ResetTableProtection
                                Ruler
                                SelectionMode
                                SelectTable
                                SelectText
                                SelectTextMode
                                SelectWord
                                SendAbstractToStarImpress
                                SendOutlineToClipboard
                                SendOutlineToStarImpress
                                SetAnchorAtChar
                                SetAnchorToChar
                                SetAnchorToFrame
                                SetAnchorToPage
                                SetAnchorToPara
                                SetExtSelection
                                SetMultiSelection
                                SetOptimalColumnWidth
                                SetOptimalRowHeight
                                SetRowHeight
                                ShadowCursor
                                ShiftBackspace
                                ShowFourPages
                                ShowHiddenParagraphs
                                ShowMultiplePages
                                ShowTrackedChanges
                                ShowTwoPages
                                Shrink
                                SortDialog
                                Spelling
                                SplitCell
                                SplitTable
                                StartAutoCorrect
                                StartOfDocumentSel
                                StartOfLineSel
                                StartOfParaSel
                                StatePageNumber
                                SubScript
                                SuperScript
                                SwBackspace
                                TableBoundaries
                                TableDialog
                                TableModeFix
                                TableModeFixProp
                                TableModeVariable
                                TableNumberFormatDialog
                                TableNumberRecognition
                                TextAttributes
                                TextWrap
                                ThesaurusDialog
                                ToggleAnchorType
                                ToggleObjectLayer
                                TrackChanges
                                UnderlineDouble
                                UnhainFrames
                                UnsetCellsReadOnly
                                UpdateAll
                                UpdateAllIndexes
                                UpdateAllLinks
                                UpdateCharts
                                UpdateCurIndex
                                UpdateFields
                                UpdateInputFields
                                ViewBounds
                                VRuler
                                VScroll
                                WordLeftSel
                                WordRightSel
                                WrapAnchorOnly
                                WrapContour
                                WrapIdeal
                                WrapLeft
                                WrapOff
                                WrapOn
                                WrapRight
                                WrapThrough
                                WrapThroughTransparent
                    Conclusion:: The dispatch commands are powerful and require little knowledge of the internal workings of OOo. Although some functionality, such as the Undo command, can only be used in the dispatcher, macros that will be used for a long time are better off using the internal objects directly. 
                    11 - The StarDesktop object
                        o
                            o
                                o
                                zzzz = NÄSTA: s73 Numeriska rutiner :)
                                VIKTIGA ORD OCH TERMER
                                    service
                                    interface
                                    dispatcher
                                    exception
                                    method
                                    object
                                    från total_tree-dokumentet
                                        Nested Modules
                                        Services
                                        Interfaces
                                        Structs
                                            t ex UNO structs :}
                                        Exceptions
                                        Enums
                                        Constant Groups
                            överblick :)
                                such as accessing indexed objects, enumerating open documents, and loading new documents
                                —while discussing and demonstrating the base functionality of the Desktop object. This chapter also covers
                                the Desktop object and ThisComponent.
                                FYRA FUNKTIONERNA :D
                                    The Desktop object is a com.sun.star.frame.Desktop service, which supplies four primary functions;
                                    *frame
                                    *desktop
                                    *document loader
                                    *event broadcaster
                            com.sun.star.frame.Desktop
                                getActiveFrame() (s204)
                                    print title of current (last active) frame =
                                    Print StarDesktop.getActiveFrame().Title
                                getFrames() (s204)
                                    Use the getFrames() method to enumerate or search all of the frames contained in the desktop. The getFrames() method returns an object that implements the com.sun.star.frame.XFrames interface. A frame can contain other frames; the XFrames interface provides access to the contained frames.
                                    getFrames().queryFrames( mmm ) (s206) = se exempel för komplett dok. med alla objekt (=från hemsidan :] )
                                    Exempel:
                                    http://api.openoffice.org/docs/common/ref/com/sun/star/frame/XDesktop.html.
                            com.sun.star.frame.Frame
                            TIPS!
                                Use the full interface name to find the Web address for the API information on the XFrames interface. It is important that you learn to find the Web pages on the API site from the full service or interface name.
                            com.sun.star.container.XIndexAccess
                                Fel vid uppdatering av texten för följande indata: =bra att kunna eftersom OOo använder tjänsten på många andra ställen :]. Felet var: org.freeplane.plugin.script.ExecuteScriptException: startup failed: Script1.groovy: 1: expecting EOF, found ':' @ line 1, column 69.    änsten på många andra ställen :]                                  ^  1 error  at line 1
                            com.sun.star.frame.FrameSearchFlag
                                Konstanter
                                    0 AUTO Deprecated. Use 6 = SELF+CHILDREN.
                                    1 PARENT Include the parent frame.
                                    2 SELF Include this frame.
                                    4 CHILDREN Include the child frames of this frame.
                                    8 CREATE Create a frame if the requested frame is not found.
                                    16 SIBLINGS Include the child frames of the parent of this frame.
                                    32 TASKS Include all frames in all tasks in the current frames hierarchy.
                                    23 ALL Include all frames except TASKS frames. 23 = 1+2+4+16 = PARENT + SELF + CHILDREN + SIBLINGS.
                                    55 GLOBAL Include every frame. 55 = 1+2+4+16+32 = PARENT + SELF + CHILDREN + SIBLINGS + TASKS.
                                t ex com.sun.star.frame.FrameSearchFlag.tasks
                            com.sun.star.document.XEventBroadcaster
                                When certain important events occur in OOo, the event is broadcast to all the objects that register as listeners for a specific event—for example, to be notified before a document is closed. The com.sun.star.document.XEventBroadcaster interface allows the desktop to act as a broadcaster.
                                The XEventBroadcaster interface defines the methods addEventListener() and removeEventListener() to add and remove event listeners. These two methods are not usually used directly because methods that are specific to the listener are typically used. For example, the Controller object contains the methods addKeyHandler() and removeKeyHandler() to add and remove listeners for key-press events.
                            com.sun.star.frame.XDesktop
                                The com.sun.star.frame.XDesktop interface defines the primary functionality of the Desktop service. The desktop contains the top-level components that can be viewed in a frame. In other words, it contains and controls the life cycle of the OpenOffice.org documents, help window, Basic IDE, and the other component types.
                                The desktop is a Frame service so that it can act as the root frame containing all the other frames. The desktop, therefore, has access to and controls all the other frames. This control includes the ability to load documents and the ability to close all frames and exit OOo.
                                o
                                    terminate()
                                        To close the desktop and all the contained frames, call the terminate() method. This method is not guaranteed to close the desktop; it is merely a suggestion (or request) that you would like OOo to close.
                                    o
                                        The methods addTerminateListener() and removeTerminateListener() are defined by the XDesktop interface. Each termination listener has the ability to tell OOo that it should not terminate. When you call the terminate() method, the following sequence of events occurs:
                                         The queryTermination() method is called on each com.sun.star.frame.XTerminateListener that is registered with the desktop. A listener can prevent OOo from terminating by raising a TerminationVetoException.
                                         If no termination listener throws an exception, the notifyTermination() method is called on each registered listener, notifying them that OOo will terminate.
                                         If the termination is aborted, an abortTermination event is broadcast and False is returned.
                                    addTerminateListener()
                                    removeTerminateListener()
                                    queryTermination()
                                    notifyTermination()
                            com.sun.star.util.XCloseable
                                close()
                                    “close(bForce As Boolean)”. If bForce is False, the object may refuse to close. If bForce is True, the object is not able to refuse.
                            T EX
                                Listing 5. The safe way to close a document using any version of OOo.
                                If HasUnoInterfaces(oDoc, "com.sun.star.util.XCloseable") Then
                                oDoc.close(true)
                                Else
                                oDoc.dispose()
                                End If
                            com.sun.star.container.XEnumerationAccess
                                Usually, a component refers to an OOo document, but it may refer to other things, such as the Basic IDE or the included help pages. Use the getComponents() method defined in the XDesktop interface to return an enumeration of the components controlled by the desktop. The returned object supports the interface com.sun.star.container.XEnumerationAccess.
                                A component that is also an OOo document supports the XModel interface. The model represents the underlying document data, so if a component doesn’t support the XModel interface, it isn’t an OOo document. In other words, supporing the XModel interface implies that a component has data; if it doesn’t have data, then it isn’t a document. Use the HasUnoInterfaces function to check each component to see if it is an OOo document. To find a specific document, search all of the components and check the URL or some other distinguishing characteristic. The code in
                                Listing 6 demonstrates how to enumerate the components.
                            XModel interface
                                stöds av alla OOo-dokument= om objektet inte stöds är doket inte OOo
                            getCurrentComponent()
                                Use the getCurrentComponent() method defined in the XDesktop interface to return the currently focused component, which is not necessarily an OOo document. To obtain the most current document, use the globally defined variable ThisComponent (see Listing 7).
                                o
                                    Listing 7. ThisComponent references the current OOo document.
                                    Print ThisComponent.getURL()
                                        Works from Basic IDE
                                    Print StarDesktop.getCurrentComponent().getURL()
                                        Fails from Basic IDE
                                StarDesktop.getCurrentComponent() returns the currently focused component. If the Basic IDE is open, the Basic IDE component is returned. Use the globally defined variable ThisComponent to return the most current document.
                            Table 2. Some useful properties in the com.sun.star.document.DocumentInfo service.
                                Author Initial author of the document.
                                CreationDate Date and time the document was created.
                                Title The document title.
                                Description Multi-line document description.
                                Keywords Comma-separated list of keywords for the document.
                                MIMEType MIME type of the document’s resource. <http://en.wikipedia.org/wiki/MIME>
                                ModifiedBy Name of the last person who modified the document.
                                ModifyDate Date and time the document was last stored.
                                PrintedBy Name of the last person to print the document.
                                PrintDate Date and time the document was last printed.
                                Template The path and name of the template from which the document was created.
                                TemplateDate Date and time when the document was created or last updated from the template.
                                AutoloadURL URL to load automatically a specified time after the document is loaded.
                                AutoloadSecs Number of seconds to wait before auto-loading the AutoloadURL.
                                DefaultTarget Name of the default frame into which links should be loaded if no target is specified.
                            OBS/TIPS :)
                                o
                                    You can configure OOo to call a BASIC macro when certain events occur. When a macro is called because an event occurred, ThisComponent refers to the document that produced the event even if it isn’t the currently focused document; however, these are usually the same document. The variable ThisComponent is available only from BASIC. Obtaining the current document is more difficult from other programming languages and is generally accomplished by searching all of the components for a specific document based on the URL.
                                o
                                    The desktop has a CurrentComponent property. StarDesktop.CurrentComponent is equivalent to StarDesktop.getCurrentComponent(). Although StarDesktop.getCurrentComponent() can be used in many situations, it is not a reliable method to obtain the document that most recently had focus. The method getCurrentComponent() returns either the component that currently has focus, or the component that had the focus before control was switched to a different application.
                                    This behavior causes problems when attempting to debug Basic programs, because the Basic IDE is the current component. It is therefore preferable to use ThisComponent rather than StarDesktop.CurrentComponent. Forcing a new document’s window to become focused does not change the value of ThisComponent. The value of ThisComponent is set once and then it is not changed (see Listing 9).
                                    Listing 9. Use one of these two methods to cause oDoc2 to become the focused document.
                                    oDoc2.CurrentController.Frame.ContainerWindow.toFront()
                                    oDoc2.CurrentController.Frame.Activate()
                                When a macro is called because an event occurred, ThisComponent refers to the document that produced the event unless the macro is contained in another document. Therefore, it’s better to place global macros that will be called from other documents inside a global library rather than inside a document.
                            o
                                com.sun.star.frame.XComponentLoader interface
                                    The desktop implements the com.sun.star.frame.XComponentLoader interface. This is a simple interface to load components from a URL. Use the method LoadComponentFromUrl() defined in the XComponentLoader interface to load an existing document or create a new one.
                                LoadComponentFromUrl()
                                Table 3. URLS for creating new documents.
                                    URL Document Type
                                    "private:factory/scalc" Calc document
                                    "private:factory/swriter" Writer document
                                    "private:factory/swriter/web" Writer HTML Web document
                                    "private:factory/swriter/GlobalDocument" Master document
                                    "private:factory/sdraw" Draw document
                                    "private:factory/smath" Math formula document
                                    "private:factory/simpress" Impress presentation document
                                    "private:factory/schart" Chart
                                    ".component:Bibliography/View1" Bibliography—Edit the bibliography entries
                                    o
                                        ".component:DB/QueryDesign" Database components
                                        ".component:DB/TableDesign"
                                        ".component:DB/RelationDesign"
                                        ".component:DB/DataSourceBrowser"
                                        ".component:DB/FormGridView"
                                Table 4. Special frame names.
                                    Frame Name Description
                                    "_blank" Creates a new frame.
                                    "_default" Detects an already loaded document or creates a new frame if it is not found.
                                    "_self" Use or return this frame.
                                    "" Use or return this frame.
                                    "_parent" Use or return the direct parent of this frame.
                                    "_top" Use or return the highest level parent frame.
                                    "_beamer" Use or return a special subframe.
                                Table 5. Valid named parameters for loading and storing documents.
                                    Parameter Description
                                    AsTemplate A value of True creates a new untitled document, even if the document is not a template. The default loads the template document for editing.
                                    Author Sets the current author if the component can track the author of the current version when the document is saved.
                                    CharacterSet Identifies the character set for single-byte characters.
                                    Comment Similar to Author parameter, but sets the document description for version control.
                                    ComponentData Allows component-specific properties.
                                    DocumentTitle Sets the Document title.
                                    FilterName Name of the filter for loading or storing the component when not using OOo types.
                                    FilterOptions Additional properties for a filter if it is required.
                                    FilterData Additional properties for a filter if it is required.
                                    Hidden A value of False loads the document so that it is hidden. Do not do this if you intend to make the document visible after it is loaded.
                                    InputStream You can specify an existing input stream for loading a document—for example, if you have the document in memory and don’t want to write it to disk first.
                                    InteractionHandler Passes an interaction handler to handle errors and obtains a password if required.
                                    JumpMark Jumps to a marked position after loading the component.
                                    MediaType Specifies the MIME type of the data that will be loaded.
                                    OpenNewView A value of True forces the component to create a new window even if the document is already loaded. Some components support multiple views to the same data. If the opened component does not support multiple views, a new window is opened. It is not a view, but merely the document loaded one more time.
                                    Overwrite A value of True overwrites any existing file with the same name while saving.
                                    Password Password for loading or storing a document. If a document that requires a password is loaded and no password is specified, the document is not loaded.
                                    PostData Posts data to an HTTP address and then loads the response as a document. PostData is usually used to obtain a result from a Web form on a Web site.
                                    Preview A value of True specifies that the document is loaded for preview. OOo may make some optimizations when it opens a document in preview mode.
                                    ReadOnly Opens the document as read-only. Read-only documents are not modifiable from the user interface, but you can modify them by using the OOo API (in other words, from a macro).
                                    StartPresentation If the document contains a presentation, it is started immediately.
                                    Referer A URL indicating the referrer who opened this document. Without a referrer, a document that requires security checks is denied. (Yes, the parameter name is “Referer,” not “Referrer.”)
                                    RepairPackage OOo documents are stored in a compressed zipped format. A value of True attempts to recover information from a damaged ZIP file.
                                    StatusIndicator Value is an object to use as a progress indicator as the document is loaded or saved.
                                    TemplateName Name of the template instead of the URL. Must also use the TemplateRegionName.
                                    TemplateRegionName Path to the template instead of the URL. Must also use the TemplateName.
                                    Unpacked OOo stores documents in a zipped format. A value of True stores the file in a folder if it is supported for the component type.
                                    URL Fully qualified URL of the document to load, including the JumpDescriptor if required.
                                    Version If versioning is supported for the component, this parameter indicates the version to load or save. The main document is loaded or saved if no version is specified.
                                    ViewData The value for this parameter is component specific and usually supplied by the frame controller.
                                    ViewId Some components support different views of the same data. The value specifies the view to use after loading. The default is zero and is treated as the default view.
                                    MacroExecutionMode The numeric value specifies if macros are executed when the document is loaded ( Table 6).
                                    UpdateDocMode The numeric value specifies how the document is updated. See the API site for the constant com.sun.star.document.UpdateDocMode.
                                Enabling macros while loading a document
                                    When a document that contains a macro is opened from the user interface (UI), a security dialog opens, asking if macros should be run. When a document is loaded from a macro using the OOo API, macros are disabled in the document. Some macros run based on events that occur in a document. If macros are disabled in the document, you can still manually run the contained macros, but the macros that are usually started from an event in the document will never run.
                                    The named parameter MacroExecutionMode directs OOo how to treat macros when a document is loaded. Table 6 enumerates the valid values for the MacroExecutionMode parameter.
                                    Table 6. com.sun.star.document.MacroExecutionMode constants.
                                        # Name Description
                                        0 NEVER_EXECUTE Do not execute a macro.
                                        1 FROM_LIST Execute macros from a list based on configuration.
                                        2 ALWAYS_EXECUTE Execute, but warn if the configuration says to.
                                        3 USE_CONFIG Do what the configuration says to do.
                                        4 ALWAYS_EXECUTE_NO_WARN Run the macro and do not warn.
                                        5 USE_CONFIG_REJECT_CONFIRMATION The configuration specifies what to do when the user says not to run macros; do that.
                                        6 USE_CONFIG_APPROVE_CONFIRMATION The configuration specifies what to do when the user says to run macros; do that.
                            o
                                Importing and exporting non-OpenOffice.org documents, s216
                                o
                                    Listing 18. Export the current document, assuming it is a Writer document, as PDF.
                                    Dim args(0) as new com.sun.star.beans.PropertyValue
                                    args(0).Name = "FilterName"
                                    args(0).Value = "writer_pdf_Export"
                                    ThisComponent.storeToURL("file:///test.pdf",args())
                            Table 7. CSV field format values.
                                Fel vid uppdatering av texten för följande indata: = SE MER OM BEHÖVS. Felet var: org.freeplane.plugin.script.ExecuteScriptException: startup failed: Script1.groovy: 1: unexpected token: MER @ line 1, column 5.     SE MER OM BEHÖVS        ^  1 error  at line 1
                            Table 8. Writer import and export filter names.
                                Fel vid uppdatering av texten för följande indata: = SE MER NÄR BEHÖVS. Felet var: org.freeplane.plugin.script.ExecuteScriptException: startup failed: Script1.groovy: 1: unexpected token: MER @ line 1, column 5.     SE MER NÄR BEHÖVS        ^  1 error  at line 1
                            Table 9. Writer Web import and export filter names.
                                SE MER
                            Table 10. Writer Global import and export filter names.
                                SE MER
                            Table 11. Calc import and export filter names.
                                SE MER
                            Table 12. Draw import and export filter names.
                                SE MER
                            Table 13. Impress import and export filter names.
                                SE MER
                            Table 14. Chart import and export filter names.
                                se mer
                            Table 15. Math import and export filter names.
                                se mer
                            Table 16. Graphics import and export filter names.
                                SE MER
                            o
                                Error handling while loading a document When a document is loaded, no exceptions occur. Instead, errors are thrown using an interaction handler that is passed in as a named parameter. Unfortunately, as of OOo 1.1.0, it is not possible to implement an interaction handler in OOo Basic. The OOo Developer’s Guide, however, has examples of error handlers using other languages. In other words, in BASIC, you cannot trap errors while loading a document; the document simply fails to load and returns a null document.
                                The Graphical User Interface (GUI) provides an interaction handler that interacts with the user. The GUI’s interaction handler displays error messages when errors occur and prompts the user for a password if it is required. If no handler is included as a named parameter, a default handler is used. The default handler simply ignores most errors, providing little feedback to the user. Hopefully this will be improved in later versions of OOo.
                            SIST
                                :D
                                Conclusion
                                The desktop acts as the main application that controls OpenOffice.org, so when you need to obtain something that is globally related to the documents or frames, look at the desktop. The globally available variables StarDesktop and ThisComponent provide easy access to the OOo Desktop object and the current document. This chapter introduced techniques for accessing containers with multiple objects. Familiarize yourself with the basic capabilities for opening documents, for importing and exporting file types, and the capabilities and limitations of OOo, in order to expand your ability to use and create a wide variety of file types within the OOo environment.
                    Chapter 12 - Generic Document Methods
                        Table 1. Unique services that identify the document’s type.
                            com.sun.star.text.TextDocument
                            com.sun.star.sheet.SpreadsheetDocument
                            com.sun.star.drawing.DrawingDocument
                            com.sun.star.presentation.PresentationDocument
                            com.sun.star.formula.FormulaProperties
                        Table 2. Interfaces supported by more than one document type
                            ((+markera vilka sorters dokument de funkar för))
                            com.sun.star.beans.XPropertySet
                            com.sun.star.container.XChild
                            com.sun.star.datatransfer.XTransferable
                            com.sun.star.document.XDocumentInfoSupplier
                            com.sun.star.document.XEventBroadcaster
                            com.sun.star.document.XEventsSupplier
                            com.sun.star.document.XLinkTargetSupplier
                            com.sun.star.document.XViewDataSupplier
                            com.sun.star.drawing.XDrawPagesSupplier
                            com.sun.star.frame.XLoadable
                            com.sun.star.frame.XModel
                            com.sun.star.frame.XStorable
                            com.sun.star.lang.XComponent
                            com.sun.star.lang.XEventListener
                            com.sun.star.lang.XMultiServiceFactory
                            com.sun.star.lang.XServiceInfo
                            com.sun.star.lang.XTypeProvider
                            com.sun.star.script.XStarBasicAccess
                            com.sun.star.style.XStyleFamiliesSupplier
                            com.sun.star.util.XCloseBroadcaster
                            com.sun.star.util.XCloseable
                            com.sun.star.util.XModifiable
                            com.sun.star.util.XModifyBroadcaster
                            com.sun.star.util.XNumberFormatsSupplier
                            com.sun.star.view.XPrintJobBroadcaster
                            com.sun.star.view.XPrintable
                            com.sun.star.view.XRenderable
                        Table 3. Object methods defined by the interface XPropertySet.
                            getPropertySetInfo()
                            setPropertyValue(name, value)
                            getPropertyValue(name)
                            addPropertyChangeListener(name, listener)
                            removePropertyChangeListener(name, listener)
                            addVetoableChangeListener(name, listener)
                            removeVetoableChangeListener(name, listener)
                        Listing 1. Two methods to obtain the name of the font style.
                            Print ThisComponent.CharFontName
                            Print CStr(ThisComponent.getPropertyValue("CharFontName"))
                        Table 4. Object methods defined by the interface XDocumentInfo.
                            Object Method + Description
                            GetUserFieldCount() Number of available fields.
                            getUserFieldName(index) Name of the specified field.
                            getUserFieldValue(index) Value of the specified field.
                            setUserFieldName(index, name) Set the name of the specified field.
                            setUserFieldValue(index, value) Set the value of the specified field.
                        List event listeners: XEventsSupplier
                        Table 5. Object methods defined by the interface XCloseBroadcaster.
                            Object Method Description
                            addCloseListener(XCloseListener) Add listener to receive or have a veto for “close” events.
                            removeCloseListener(XCloseListener) Remove an object registered as a close listener using addCloseListener().
                        Table 6. Object methods defined by the interface XDrawPages.
                            Object Method Description
                            InsertNewByIndex(index) Create and insert a new draw page or master page.
                            remove(XDrawPage) Remove a draw page or master page.
                            getCount() Return the number of draw pages.
                            getByIndex(index) Return a specific draw page.
                            hasElements() Return True if there are documents.
                        Table 7. Object methods defined by the interface com.sun.star.frame.XModel.
                            Object Method Description
                            getURL() URL of the document returned as a String.
                            getArgs() Return a copy of the com.sun.star.document.MediaDescriptor for this model (document).
                            lockControllers() Prevent some display updates—macros may run faster.
                            unlockControllers() Call this once for each call to lockControllers().
                            hasControllersLocked() Is there at least one lock remaining?
                            getCurrentController() The controller that currently controls this model.
                            getCurrentSelection() Current selection on the current controller.
                        Table 8. Object properties defined by the service MediaDescriptor.
                            Property Description
                            AsTemplate Document was loaded as a template.
                            Author Author of this document version; this is for versioning.
                            CharacterSet Document character set for single-byte characters.
                            Comment Comment on the current document version; this is for versioning.
                            DocumentTitle If the document title is specified, it is included here.
                            FilterName Filter used to import or save this document.
                            FilterOptions Filter used to import this document.
                            FilterData Additional import properties if the FilterOptions string is not sufficient.
                            Hidden If the Hidden argument is specified during load, it is included here.
                            InputStream If the InputStream is specified during load, it is included here.
                            InteractionHandler Exception handler if an error occurs during import.
                            JumpMark Jump to this marked position after loading the document.
                            MediaType MIME type of this document.
                            OpenNewView Opens a new view for an already loaded document, rather than just opening the document
                                twice. In other words, request two views of the same data.
                            Overwrite Overwrite any existing file on save.
                            Password Password for loading or storing the document.
                            Preview Document loaded in preview mode; optimizes for preview-only use.
                            ReadOnly Document opened as read-only; controller will not change the document.
                            StartPresentation Immediately after loading an Impress document, start the presentation.
                            Referer URL of document referrer—for example, if opened by clicking an HTTP link.
                            RepairPackage Open the document in repair mode.
                            StatusIndicator If a status indicator was specified when the document was loaded, it is included here.
                            Unpacked If True, an OOo document is stored as a folder rather than a ZIP file.
                            URL URL of the document.
                            Version Current document version, if versioning is supported.
                            ViewData The view data to use.
                            ViewId The ID of the initial view.
                            MacroExecutionMode Specifies how macros are treated when the document is loaded.
                        Table 9. Object methods defined by the service com.sun.star.frame.XStorable.
                            Object Method Description
                            hasLocation() True if the document has a storage location and False if this is a new blank document.
                            getLocation() Return the URL where the object was stored after calling storeAsURL().
                            isReadonly() You cannot call store() if the file was called from a read-only location.
                            store() Stores the data to the current URL.
                            storeAsURL(URL, args) Stores the document to the specified URL, which becomes the current URL.
                            storeToURL(URL, args) Stores the document to the specified URL, but the current URL does not change.
                        Table 10. Difference between storeToURL and storeAsURL.
                            Step Action Comment
                            1 Create document Cannot use the store() method because the document has no location.
                            2 Use storeToURL Document saved, but cannot use the store() methodbecause it has no location.
                            3 Use storeAsURL Can use the store() method because now the document has a location.
                            4 Use storeToURL Document saved, but the location is the same as set in step 3.
                        Table 11. Object methods defined in the com.sun.star.style.Style service.
                            Method or Property Description
                            isUserDefined() Is this style user-defined? If not, it is included with OOo.
                            isInUse() Is this style used in the document?
                            getParentStyle() What is the parent style?
                            setParentStyle(name) Set the parent style.
                            IsPhysical Is the style physically created?
                            FollowStyle Style name applied to the next paragraph. For example, while using a heading style I might
                                want the next paragraph to be regular text.
                            DisplayName Name of the style as displayed in the user interface.
                            IsAutoUpdate If the properties of an object using this style are changed (for example, if I change the font),
                                are these changes automatically updated to the style?
                        Table 12. Locale language codes, alphabetized by code.
                            (se lista)
                        Table 14. Object methods defined by com.sun.star.view.XPrintable.
                            Object Method Description
                            getPrinter() Default printer as an array of properties (com.sun.star.view.PrinterDescriptor).
                            setPrinter(properties) Assign a new printer to the object (com.sun.star.view.PrinterDescriptor).
                            print(properties) Print the document (com.sun.star.view.PrintOptions).
                        Table 15. Properties defined by the service com.sun.star.view.PrinterDescriptor.
                            Property Description
                            Name Name of the printer queue.
                            PaperOrientation Paper orientation (com.sun.star.view.PaperOrientation).
                            PaperFormat Predefined paper sizes (com.sun.star.view.PaperFormat).
                            PaperSize Paper size in twips (com.sun.star.awt.Size).
                            IsBusy Is the printer busy?
                            CanSetPaperOrientation Can the paper orientation be set?
                            CanSetPaperFormat Are other paper formats supported?
                            CanSetPaperSize Can the paper size be set?
                        Table 16. Properties defined by the com.sun.star.view.PrintOptions service.
                            Property Description
                            CopyCount Number of copies to print.
                            FileName Send the output to a file rather than to the printer.
                            Collate Collate the printed pages (set to True or False).
                            Pages Specifies pages and page ranges to print.
                        Table 17. Methods defined by the com.sun.star.text.XPagePrintable interface.
                            Object Methods Description
                            getPagePrintSettings() Returns an array of properties (see Table 18).
                            setPagePrintSettings(properties) Change the settings (see Table 18).
                            printPages(properties) Print using properties in Table 16.
                        Table 18. Properties used by the com.sun.star.text.XPagePrintable interface.
                            Property Description
                            PageRows Number of rows of pages on each printed page.
                            PageColumns Number of columns of pages on each printed page.
                            LeftMargin Left margin.
                            RightMargin Right margin.
                            TopMargin Top margin.
                            BottomMargin Bottom margin.
                            HoriMargin Margin between rows of pages.
                            VertMargin Margin between columns of pages.
                            IsLandscape True or False; print in landscape format.
                        Table 19. Properties used by the com.sun.star.sheet.XPrintAreas interface.
                            Object Method Description
                            getPrintAreas() Return array of type com.sun.star.table.CellRangeAddress.
                            setPrintAreas(ranges) Set print areas for the sheet with array of type CellRangeAddress. Print everything if
                                nothing is set.
                            getPrintTitleColumns() Return True if title columns are repeated to the right.
                            setPrintTitleColumns(boolean) Set True if title columns are repeated on all print pages to the right.
                            getTitleColumns() Array of type com.sun.star.table.CellRangeAddress.
                            setTitleColumns(ranges) Set columns to use as titles. Rows are ignored; only columns matter.
                            getPrintTitleRows() Return True if title rows are repeated on all print pages.
                            setPrintTitleRows(boolean) Set to True if row titles are repeated on all print pages to the bottom.
                            getTitleRows() Return array of type com.sun.star.table.CellRangeAddress.
                            setTitleRows(ranges) Set rows to use as titles. Columns are ignored; only rows matter.
                        Table 20. Common document properties in com.sun.star.document.Settings.
                            Property Description
                            ForbiddenCharacters Allow access to otherwise forbidden characters.
                            LinkUpdateMode The update mode for links when loading text documents.
                            PrinterName Printer used by the document.
                            PrinterSetup Platform- and driver-dependent printer setup data.
                            IsKernAsianPunctuation Is kerning applied to Asian punctuation?
                            CharacterCompressionType Compression (character spacing) used for Asian characters.
                            ApplyUserData Should user-specific settings saved in a document be loaded again?
                            SaveVersionOnClose Is a new version created when a modified document is closed?
                            UpdateFromTemplate Should a document be updated when its creation template changes?
                            FieldAutoUpdate Are text document fields automatically updated?
                            CurrentDatabaseDataSource Name of the data source from which the current data is taken.
                            CurrentDatabaseCommand Displayed object’s name (or the SQL statement used).
                            CurrentDatabaseCommandType Specifies how to interpret the DataTableName property.
                            DefaultTabStop Default tab width.
                            IsPrintBooklet Is the document printed as a booklet (brochure)?
                            IsPrintBookletFront If True, only the front pages of a booklet are printed.
                            IsPrintBookletBack If True, only the back pages of a booklet are printed.
                            PrintQuality Quality to use when printing.
                            ColorTableURL URL of the color table (SOC file) showing a palette in dialogs that use colors.
                            PrinterIndependentLayout If true, do not use printer metrics for layout.
                        Table 21. Specific document settings service types.
                            Document Settings Service Document Type
                            com.sun.star.text.DocumentSettings Writer
                            com.sun.star.sheet.DocumentSettings Calc
                            com.sun.star.drawing.DocumentSettings Draw
                            com.sun.star.presentation.DocumentSettings Impress
                        Table 22. Properties defined by the com.sun.star.text.PrintSettings service.
                            Property Description
                            PrintGraphics If True, print graphic object.
                            PrintTables If True, print text tables.
                            PrintDrawings If True, print shapes.
                            PrintLeftPages If True, print left pages.
                            PrintRightPages If True, print right pages.
                            PrintControls If True, print control contained in the document.
                            PrintReversed If True, print the pages in reverse order, starting with the last page.
                            PrintPaperFromSetup If True, use the paper tray specified for the system printer. If False, use the paper tray
                                specified by the page style.
                            PrintFaxName Name of the fax.
                            PrintAnnotationMode Specify how notes are printed. Uses com.sun.star.text.NotePrintMode enumerated value.
                                Possible values include NOT, ONLY, DOC_END, or PAGE_END.
                            PrintProspect If True, prospect printing is used; however, I cannot find a definition for prospect printing.
                            PrintPageBackground If True, the background color and/or background graphic is printed.
                            PrintBlackFonts If True, characters are always printed in black.
                    Chapter 13 - Writer Documents, s265
                        Table 1. Interfaces supported by text documents.
                            Service + Description
                            com.sun.star.text.XTextDocument Main text document interface.
                            com.sun.star.text.XBookmarksSupplier Access the bookmarks.
                            com.sun.star.text.XChapterNumberingSupplier Numbering rules for chapters.
                            com.sun.star.text.XDocumentIndexesSupplier Access the collection of indexes.
                            com.sun.star.text.XTextEmbeddedObjectsSupplier Access embedded objects.
                            com.sun.star.text.XEndnotesSupplier Access endnote content.
                            com.sun.star.text.XFootnotesSupplier Access footnote content.
                            com.sun.star.text.XLineNumberingSupplier Numbering rules for line numbers.
                            com.sun.star.text.XPagePrintable Print multiple pages on one page.
                            com.sun.star.text.XReferenceMarksSupplier Access the document reference marks, which are used to
                                refer to text positions in a text document.
                            com.sun.star.text.XTextFieldsSupplier Access contained fields.
                            com.sun.star.text.XTextFramesSupplier Access contained text frames.
                            com.sun.star.text.XTextGraphicObjectsSupplier Access embedded and linked graphics.
                            com.sun.star.text.XTextSectionsSupplier Access contained text sections.
                            com.sun.star.text.XTextTablesSupplier Access contained tables.
                            com.sun.star.style.XStyleFamiliesSupplier Access contained styles by type.
                            com.sun.star.util.XNumberFormatsSupplier Access contained number formats.
                            com.sun.star.util.XRefreshable Refresh data that can be refreshed from a database.
                            com.sun.star.util.XReplaceable Replace text found with a search descriptor.
                            com.sun.star.util.XSearchable Search a text range for a specific string pattern.
                            com.sun.star.beans.XPropertySet Access document properties by name.
                        Table 2. Methods defined by the com.sun.text.XText interface.
                            Method Description
                            createTextCursor() Return a TextCursor service used to traverse the text object.
                            createTextCursorByRange(XTextRange) Return a TextCursor that is located at the specified TextRange.
                            insertString(XTextRange, String, boolean) Insert a string of characters into the text at the specified text range. Each
                                CR (ASCII 13) inserts a new paragraph and each LF (ASCII 10) inserts a new line. If the Boolean value is True, the text in the range is overwritten; otherwise, the text characters are inserted after the text range.
                            insertControlCharacter(XTextRange, Short, Insert a control character (such as a paragraph break or a hard space) boolean) into the text. The short integer is a value from the constant group com.sun.star.text.ControlCharacter:
                                • PARAGRAPH_BREAK = 0 – Start a new paragraph.
                                • LINE_BREAK = 1 – Start a new line in a paragraph.
                                • HARD_HYPHEN = 2 – Insert a dash that will not hyphenate.
                                • SOFT_HYPHEN = 3 – Define a preferred hyphenation point if the word must be split at the end of a line.
                                • HARD_SPACE = 4 – Insert a space that prevents two words from splitting at a line break.
                                • APPEND_PARAGRAPH = 5 – Append a new paragraph. If the Boolean value is True, the text in the text range is overwritten; otherwise, the control character is inserted after the text range.
                            insertTextContent(XTextRange, XTextContent, boolean) - Insert text content such as a text table, text frame, or text field. In general, the text content should be created by the text object. If the Boolean value is True, the text in the text range is overwritten; otherwise, the text content is inserted after the text range.
                            removeTextContent(XTextContent) Remove the specified text content from the text object.
                        Table 3. Methods defined by the com.sun.text.XTextRange interface.
                            Method + Description
                            getText() Return the XText interface that contains the text range.
                            getStart() A text range has a start and end position. The getStart() method returns a text range that contains only the start position of this text range.
                            getEnd() A text range has a start and end position. The getStart() method returns a text range that contains only the end position of this text range.
                            setString(String) A text range has a start and end position. The setString() method replaces all of the text between the start and end positions with the argument string. All styles are removed and all text in this text range is replaced.
                            getString() Return a string that represents the text in this text range. Strings in OOo Basic are limited to 64KB in size, but text ranges and text objects are not; use this with care.
                        Table 4. Properties supported by the com.sun.star.text.TextContent service.
                            Property Description
                            AnchorType Enumeration of type com.sun.star.text.TextContentAnchorType that defines how this text content is attached to the surrounding text.
                                • AT_PARAGRAPH – The anchor is set at the top left position of the paragraph. The object moves if the paragraph moves.
                                • AS_CHARACTER – The text content object is anchored as a character. The size of the object influences the height of the text line and the object can move as a character if the surrounding text moves.
                                • AT_PAGE – The text content object is anchored to the page. The object does not move even if the text content around it changes.
                                • AT_FRAME – The text content object is anchored to a text frame.
                                • AT_CHARACTER – The text content object is anchored to a character. The object moves if the character moves.
                            AnchorTypes Array of TextContentAnchorType that contains the anchor types of the text content.
                            TextWrap
                                Enumeration of type com.sun.star.text.WrapTextMode that defines how the surrounding text wraps around this text content object.
                                • NONE – Text does not flow around the object.
                                • THROUGHT – Text flow ignores the object. (Yes, it is THROUGHT.) This can be thought of as THROUGH iT, as in, “the text flows through the object.”
                                • PARALLEL – Text flows to the left and right of the object.
                                • DYNAMIC – The text formatting decides the best wrapping method.
                                • LEFT – Text flows to the left of the object.
                                • RIGHT – Text flows to the right of the object.
                        Table 5. Properties supported by the com.sun.style.ParagraphProperties service.
                            Property Description
                            ParaAdjust Specify how the paragraph is aligned (or justified). Five values are supported from the com.sun.star.style.ParagraphAdjust enumeration:
                                • LEFT – Left-align the paragraph.
                                • RIGHT – Right-align the paragraph.
                                • CENTER – Center-align the paragraph.
                                • BLOCK – Fill-justify every line except for the last line.
                                • STRETCH – Fill-justify every line including the last line.
                            ParaLastLineAdjust Adjust the last line if the ParaAdjust is set to BLOCK.
                            ParaLineSpacing Specify the paragraph line spacing. The property is a structure of type com.sun.star.style.LineSpacing, which contains two properties of type Short. The Height property specifies the height and the Mode property specifies how to use the Height property. The Mode property supports values defined in the com.sun.star.style.LineSpacingMode constants group.
                                • PROP = 0 – The height is proportional.
                                • MINIMUM = 1 – The height is the minimum line height.
                                • LEADING = 2 – The height is the distance to the previous line.
                                • FIX = 3 – The height is fixed.
                            ParaBackColor Specify the paragraph background color as a Long Integer.
                            ParaBackTransparent If True, set the paragraph background color to transparent.
                            ParaBackGraphicURL Specify the URL of the paragraph background graphic.
                            ParaBackGraphicFilter Specify the name of the graphic filter for the paragraph background graphic.
                            ParaBackGraphicLocation Specify the position of the background graphic using the enumeration sun.star.style.GraphicLocation:
                                • NONE – A location is not yet assigned.
                                • LEFT_TOP – The graphic is in the top left corner.
                                • MIDDLE_TOP – The graphic is in the middle of the top edge.
                                • RIGHT_TOP – The graphic is in the top right corner.
                                • LEFT_MIDDLE – The graphic is in the middle of the left edge.
                                • MIDDLE_MIDDLE – The graphic is in the center of the surrounding object.
                                • RIGHT_MIDDLE – The graphic is in the middle of the right edge.
                                • LEFT_BOTTOM – The graphic is in the bottom left corner.
                                • MIDDLE_BOTTOM – The graphic is in the middle of the bottom edge.
                                • RIGHT_BOTTOM – The graphic is in the bottom right corner.
                                • AREA – The graphic is scaled to fill the whole surrounding area.
                                • TILED – The graphic is repeated over the surrounding object like tiles.
                            ParaExpandSingleWord If True, single words may be stretched.
                            ParaLeftMargin Specify the left paragraph margin in 0.01 mm as a Long Integer.
                            ParaRightMargin Specify the right paragraph margin in 0.01 mm as a Long Integer.
                            ParaTopMargin Specify the top paragraph margin in 0.01 mm as a Long Integer. The distance between two paragraphs is the maximum of the bottom margin of the previous paragraph and the top margin of the next paragraph.
                            ParaBottomMargin Specify the bottom paragraph margin in 0.01 mm as a Long Integer. The distance between two paragraphs is the maximum of the bottom margin of the previous paragraph and the top margin of the next paragraph.
                            ParaLineNumberCount If True, this paragraph is included in line numbering.
                            ParaLineNumberStartValue Specify the start value for line numbering as a Long Integer.
                            PageDescName Setting this string causes a page break to occur before the paragraph. The new page
                                uses the specified page style name.
                            PageNumberOffset Specify a new page number if a page break occurs.
                            ParaRegisterModeActive If True, and if the paragraph's page style also has the register mode set to True, the
                                register mode is active for this paragraph. If register mode is active, each line has the
                                same height.
                            ParaTabStops Specify the tab stops for this paragraph. This is an array of structures of type com.sun.star.style.TabStop. Each structure contains the following properties:
                                • Position – Long integer position relative to the left border.
                                • Alignment – Alignment of the text range before the tab. This is an enumeration of
                            type com.sun.star.style.TabAlign. Valid values include LEFT, RIGHT, CENTER,
                            DECIMAL, and DEFAULT.
                            • DecimalChar – Specifies which character is the decimal.
                                • FillChar – Character used to fill space between the text.
                            ParaStyleName Specify the name of the current paragraph style.
                            DropCapFormat Structure that determines if the first characters of the paragraph use dropped capital letters. The com.sun.star.style.DropCapFormat contains the following properties:
                                • Lines – Number of lines used for a drop cap.
                                • Count – Number of characters in the drop cap.
                                • Distance – Distance between the drop cap and the following text.
                            DropCapWholeWord If True, the DropCapFormat is applied to the entire first word.
                            ParaKeepTogether If True, prevents a page or column break after this paragraph —for example, to prevent a title from being the last line on a page or column.
                            ParaSplit If False, prevents the paragraph from splitting into two pages or columns.
                            NumberingLevel Specify the numbering level of the paragraph.
                            NumberingRules Specify the numbering rules applied to this paragraph. This object implements the com.sun.star.container.XIndexReplace interface.
                            NumberingStartValue Specify the start value for numbering if ParaIsNumberingRestart is True.
                            ParaIsNumberingRestart Specify if numbering restarts at the current paragraph (see NumberingStartValue).
                            NumberingStyleName Specify the name of the style for numbering (see ParaLineNumberCount).
                            ParaOrphans Specify the minimum number of lines at the bottom of a page if the paragraph spans more than one page.
                            ParaWidows Specify the minimum number of lines at the top of a page if the paragraph spans more than one page.
                            ParaShadowFormat Specify the paragraph shadow format as a com.sun.star.table.ShadowFormat:
                                • Location – Specify the shadow location as an enumeration of type com.sun.star.table.ShadowLocation. Valid values include NONE, TOP_LEFT, TOP_RIGHT, BOTTOM_LEFT, and BOTTOM_RIGHT.
                                • ShadowWidth – Specify the size of the shadow as an Integer.
                                • IsTransparent – If True, the shadow is transparent.
                                • Color – Specify the color of the shadow as a Long Integer.
                            LeftBorder Specify the left border as a com.sun.star.table.BorderLine:
                                • Color – Specify the color of the line.
                                • InnerLineWidth – Specify the inner width of a double line (in 0.01 mm). If zero, a single line is drawn.
                                • OuterLineWidth – Specify the width of a single line or the outer width of a double line (in 0.01 mm). If zero, no line is drawn.
                                • LineDistance – Specify the distance between the inner and outer parts of a double line (in 0.01 mm).
                            RightBorder Specify the right border (see Left Border).
                            TopBorder Specify the top border (see Left Border).
                            BottomBorder Specify the bottom border (see Left Border).
                            BorderDistance Specify the distance from the border to the object (in 0.01 mm).
                            LeftBorderDistance Specify the distance from the left border to the object (in 0.01 mm).
                            RightBorderDistance Specify the distance from the right border to the object (in 0.01 mm).
                            TopBorderDistance Specify the distance from the top border to the object (in 0.01 mm).
                            BottomBorderDistance Specify the distance from the bottom border to the object (in 0.01 mm).
                            BreakType Specify the type of break that is applied at the start of the paragraph. This is an enumeration of type com.sun.star.style.BreakType with the following values:
                                • NONE – No column or page break is applied.
                                • COLUMN_BEFORE – A column break is applied before the current paragraph. The current paragraph, therefore, is the first in the column.
                                • COLUMN_AFTER – A column break is applied after the current paragraph. The current paragraph, therefore, is the last in the column.
                                • COLUMN_BOTH – A column break is applied before and after the current paragraph. The current paragraph, therefore, is the only paragraph in the column.
                                • PAGE_BEFORE – A page break is applied before the current paragraph. The current paragraph, therefore, is the first on the page.
                                • PAGE_AFTER – A page break is applied after the current paragraph. The current paragraph, therefore, is the last on the page.
                                • PAGE_BOTH – A page break is applied before and after the current paragraph. The current paragraph, therefore, is the only paragraph on the page.
                            DropCapCharStyleName Specify the name of the character style for drop caps.
                            ParaFirstLineIndent Specify the indent for the first line in a paragraph.
                            ParaIsAutoFirstLineIndent If True, the first line is indented automatically.
                            ParaIsHyphenation If True, automatic hyphenation is applied.
                            ParaHyphenationMaxHyphens Specify the maximum number of consecutive hyphens for each word contained in the
                                current paragraph.
                            ParaHyphenationMaxLeadingChars Specify the maximum number of characters to remain before a hyphen character.
                            ParaHyphenationMaxTrailingChars
                            Specify the maximum number of characters to remain after a hyphen character.
                            ParaVertAlignment Specify the vertical alignment of the paragraph. This is a constant group of type com.sun.star.text.ParagraphVertAlign with valid values:
                                • AUTOMATIC = 0 – In automatic mode, horizontal text is aligned to the baseline. The same applies to text that is rotated 90 degrees. Text that is rotated 270 degrees is aligned to the center.
                                • BASELINE = 1 – The text is aligned to the baseline.
                                • TOP = 2 – The text is aligned to the top.
                                • CENTER = 3 – The text is aligned to the center.
                                • BOTTOM = 4 – The text is aligned to bottom.
                            ParaUserDefinedAttributes Stores XML attributes that are saved and restored from the automatic styles inside XML files. The object implements the com.sun.star.container.XNameContainer interface.
                            NumberingIsNumber If True, the numbering of a paragraph is a number but has no symbol. This is void if the paragraph is not part of a paragraph numbering sequence.
                            ParaIsConnectBorder - If True, paragraph borders are merged with the previous paragraph if the borders are identical. This property may be void.
                        Table 6. Paragraph styles used for formatting code examples in this book.
                            Style Description
                            _code one line Used for a single line of code. There is extra space above and below the paragraph.
                            _code first line First line of code in an example that uses more than one line. There is extra space above, but not below, the paragraph.
                            _code last line Last line of code in an example that uses more than one line. There is extra space below, but not above, the paragraph.
                            _code Line of code that is neither first nor last. There is no extra space above or below the paragraph.
                        Table 7. Properties supported by the com.sun.style.CharacterProperties service.
                            Property Description
                            CharFontName Specify the name of the font in western text. This may be a comma-separated list of names.
                            CharFontStyleName Specify the name of the font style.
                            CharFontFamily Specify the name of the font family as specified in com.sun.star.awt.FontFamily constant group.
                                • DONTKNOW = 0 – The font family is not known.
                                • DECORATIVE = 1 – The font family uses decorative fonts.
                                • MODERN = 2 – The font family is a modern font; this is a specific style.
                                • ROMAN = 3 – The font family is a Roman font with serifs.
                                • SCRIPT = 4 – The font family is a script font.
                                • SWISS = 5 – The font family is a Roman font without serifs.
                                • SYSTEM = 6 – The font family is a system font.
                            CharFontCharSet Specify the text encoding of the font using the com.sun.star.awt.CharSet constant group. The values are self-explanatory: DONTKNOW, ANSI, MAC, IBMPC_437 (IBM PC character set number 437), IBMPC_850, IBMPC_860, IBMPC_86, IBMPC_863, IBMPC_865, SYSTEM, and SYMBOL.
                            CharFontPitch Specify the character font pitch using the com.sun.star.awt.FontPitch constant group. The values are self-explanatory: DONTKNOW, FIXED, and VARIABLE.
                            CharColor Specify the text color as a Long Integer.
                            CharEscapement Specify the Short Integer representing the percentage of raising or lowering for superscript/subscript characters. Negative values lower the characters.
                            CharHeight Specify the character height in points as a decimal number.
                            CharUnderline Specify the character underline type using the com.sun.star.awt.FontUnderline constant group.
                                • NONE = 0 – No underlining.
                                • SINGLE = 1 – Single line.
                                • DOUBLE = 2 – Double line.
                                • DOTTED = 3 – Dotted line.
                                • DONTKNOW = 4 – Unknown underlining.
                                • DASH = 5 – Dashed line.
                                • LONGDASH = 6 – Long dashes.
                                • DASHDOT = 7 – Dash and dot sequence.
                                • DASHDOTDOT = 8 – Dash, dot, dot sequence.
                                • SMALLWAVE = 9 – Small wave.
                                • WAVE = 10 – Wave.
                                • DOUBLEWAVE = 11 – Double wave.
                                • BOLD = 12 – Bold line.
                                • BOLDDOTTED = 13 – Bold dots.
                                • BOLDDASH = 14 – Bold dashes.
                                • BOLDLONGDASH = 15 – Long bold dashes.
                                • BOLDDASHDOT = 16 – Dash and dot sequence in bold.
                                • BOLDDASHDOTDOT = 17 – Dash, dot, dot sequence in bold.
                                • BOLDWAVE = 18 – Bold wave.
                            CharWeight Specify the font weight using the com.sun.star.awt.FontWeight constant group.
                                • DONTKNOW = 0.000 – Not specified/unknown.
                                • THIN = 50.00 – 50% font weight.
                                • ULTRALIGHT = 60.00 – 60% font weight.
                                • LIGHT = 75.00 – 75% font weight.
                                • SEMILIGHT = 90.00 – 90% font weight.
                                • NORMAL = 100.00 – normal font weight (100%).
                                • SEMIBOLD = 110.00 – 110% font weight.
                                • BOLD = 150.00 – 150% font weight.
                                • ULTRABOLD = 175.00 – 175% font weight.
                                • BLACK = 200.00 – 200% font weight.
                            CharPosture Specify the character posture using the com.sun.star.awt.FontSlant enumeration with values:
                                • NONE – No slant, regular text.
                                • OBLIQUE – Oblique font (slant not designed into the font).
                                • ITALIC – Italic font (slant designed into the font).
                                • DONTKNOW – Unknown slant.
                                • REVERSE_OBLIQUE – Reverse oblique (slant not designed into the font).
                                • REVERSE_ITALIC – Reverse italic font (slant designed into the font).
                            CharAutoKerning Set to True to use the kerning tables for the current font. Automatic kerning adjusts the spacing between certain pairs of characters to improve readability.
                            CharBackColor Specify the text background color as a Long Integer.
                            CharBackTransparent If True, the text background color is transparent.
                            CharCaseMap Specify how characters should be displayed using the com.sun.star.style.CaseMap constant group. This does not change the actual text —only the way it is displayed.
                                • NONE = 0 – No case mapping is performed; this is the most commonly used value.
                                • UPPERCASE = 1 – All characters are displayed in uppercase.
                                • LOWERCASE = 2 – All characters are displayed in lowercase.
                                • TITLE = 3 – The first character of each word is displayed in uppercase.
                                • SMALLCAPS = 4 – All characters are displayed in uppercase, but with a smaller font.
                            CharCrossedOut If True, the characters have a line through them.
                            CharFlash If True, the characters are displayed flashing.
                            CharStrikeout Specify character strikeout using the com.sun.star.awt.FontStrikeout constant group:
                                • NONE = 0 – Do not strike out characters.
                                • SINGLE = 1 – Strike out the characters with a single line.
                                • DOUBLE = 2 – Strike out the characters with a double line.
                                • DONTKNOW = 3 – The strikeout mode is not specified.
                                • BOLD = 4 – Strike out the characters with a bold line.
                                • SLASH = 5 – Strike out the characters with slashes.
                                • X = 6 – Strike out the characters with X's.
                            CharWordMode If True, white spaces (spaces and tabs) ignore the CharStrikeout and CharUnderline properties.
                            CharKerning Specify the character kerning value as a Short Integer.
                            CharLocale Specify the character locale as a com.star.lang.Locale structure.
                            CharKeepTogether If True, OOo tries to keep the character range on the same line. If a break must occur, it occurs before the characters.
                            CharNoLineBreak If True, OOo ignores a line break in the character range. If a break must occur, it occurs after the characters so it is possible that they will cross a border.
                            CharShadowed If True, the characters are formatted and displayed with a shadow effect.
                            CharFontType Specify the fundamental technology of the font using the com.sun.star.awt.FontType constant group.
                                • DONTKNOW = 0 – The type of the font is not known.
                                • RASTER = 1 – The font is a raster (bitmapped) font.
                                • DEVICE = 2 – The font is output-device specific, such as a printer font.
                                • SCALABLE = 3 – The font is scalable.
                            CharStyleName Specify the name of the font style as a string.
                            CharContoured If True, characters are formatted and displayed with a contour (3-D outline) effect.
                            CharCombineIsOn If True, text is formatted and displayed using two lines. The CharCombinePrefix string precedes the text in full size, and the CharCombineSuffix follows the text in full size.
                            CharCombinePrefix Specify the prefix (usually parentheses) used with the CharCombineIsOn property.
                            CharCombineSuffix Specify the suffix (usually parentheses) used with the CharCombineIsOn property.
                            CharEmphasize Specify the type and position of emphasis marks in Asian texts using the com.sun.star.text.FontEmphasis constant group:
                                • NONE = 0 – No emphasis mark is used.
                                • DOT_ABOVE = 1 – A dot is set above (or right from vertical text) the text.
                                • CIRCLE_ABOVE = 2 – A circle is set above (or right from vertical text) the text.
                                • DISK_ABOVE = 3 – A disk is set above (or right from vertical text) the text.
                                • ACCENT_ABOVE = 4 – An accent is set above (or right from vertical text) the text.
                                • DOT_BELOW = 11 – A dot is set below (or left from vertical text) the text.
                                • CIRCLE_BELOW = 12 – A circle is set below (or left from vertical text) the text.
                                • DISK_BELOW = 13 – A disk is set below (or left from vertical text) the text.
                                • ACCENT_BELOW = 14 – An accent is set below (or left from vertical text) the text.
                            CharRelief Specify the relief value from the com.sun.star.text.FontRelief constant group:
                                • NONE = 0 – No relief is used; normal text.
                                • EMBOSSED = 1 – Characters look embossed (raised).
                                • ENGRAVED = 2 – Characters look engraved (lowered).
                            RubyText Specify the text that is set as ruby. “Ruby Text” acts as an annotation and is associated with a “Ruby Base.” This is typically used in Asian writing systems, providing a helper for uncommonly used writing characters that are not easily recognizable, especially by children. For example, in Japanese writing, the phonetic Hiragana alphabet is used to pair phonetic “helper” readings (called Furigana or Yomigana in Japanese) with the Chinese character counterpart.
                            RubyAdjust Specify the ruby text adjustment using the com.sun.star.text.RubyAdjust enumeration:
                                • LEFT – Adjust to the left.
                                • CENTER – Adjust to the center.
                                • RIGHT – Adjust to the right.
                                • BLOCK – Adjust to both borders (stretched).
                                • INDENT_BLOCK – Adjust to both borders with a small indent on both sides.
                            RubyCharStyleName Specify the name of the character style that is applied to RubyText.
                            RubyIsAbove If True, the Ruby is printed above the text (right if the text is vertical).
                            CharRotation Specify the rotation of a character in degrees as a Short Integer. Not all implementations support all values.
                            CharRotationIsFitToLine If True, OOo tries to fit the rotated text to the surrounding line height.
                            CharScaleWidth Specify the scaling for superscript and subscript as a percentage using a Short Integer.
                            HyperLinkURL Specify the URL of a hyperlink (if set) as a String.
                            HyperLinkTarget Specify the name of the target for a hyperlink (if set) as a String.
                            HyperLinkName Specify the name of the hyperlink (if set) as a String.
                            VisitedCharStyleName Specify the character style for visited hyperlinks as a String.
                            UnvisitedCharStyleName Specify the character style name for unvisited hyperlinks as a String.
                            CharEscapementHeight Specify the additional height used for subscript or superscript characters as an Integer percent. For subscript characters the value is negative.
                            CharNoHyphenation If True, the word cannot be hyphenated at the character.
                            CharUnderlineColor Specify the color of the underline as a Long Integer.
                            CharUnderlineHasColor If True, the CharUnderlineColor is used for an underline.
                            CharStyleNames An array of character style names applied to the text. The order is not necessarily relevant.
                        Table 8. Properties supported by the com.sun.text.TextPortion service.
                            Property Description
                            TextPortionType String containing the type of the text portion. Valid content type names are:
                                • Text – String content.
                                • TextField – TextField content.
                                • TextContent – Indicates that text content is anchored as or to a character that is not really part of the paragraph—for example, a text frame or a graphic object. As of OOo 1.1.0 and OOo 1.1.1, the type “Frame” is returned rather than “TextContent”. The OOo team refers to this as issue #24444.
                                • Frame – This is not a documented return value, but it is returned rather than the type “TextContent”.
                                • Footnote – Footnote or endnote.
                                • ControlCharacter – Control character.
                                • ReferenceMark – Reference mark.
                                • DocumentIndexMark – Document index mark.
                                • Bookmark – Bookmark.
                                • Redline – Redline portion, which is a result of the change-tracking feature.
                                • Ruby – Ruby attribute (used in Asian text).
                            ControlCharacter Short Integer containing the control character if the text portion contains a ControlCharacter.
                            Bookmark If the text content is a bookmark, this is a reference to the bookmark. The property implements the com.sun.star.text.XTextContent interface.
                            IsCollapsed If True, the text portion is a point.
                            IsStart If True, the text portion is a start portion if two portions are needed to include an object.
                            For example, a DocmentIndexMark has a start and end text portion surrounding the text to be indexed.
                        Table 9. In general, view cursors are not related to text ranges or XTextCursor.
                            Cursor Description
                            com.sun.star.view.XViewCursor Simple cursor with basic movement methods that work in both text and tables.
                            com.sun.star.text.XTextViewCursor Derived from XTextCursor, this describes a cursor in a text document’s view. It supports only very simple movements.
                            com.sun.star.view.XLineCursor Defines line-related methods; this interface is not derived from a text range.
                            com.sun.star.text.XPageCursor Defines page-related methods; this interface is not derived from a text range.
                            com.sun.star.view.XScreenCursor Defines methods to move up and down one screen at a time.
                        Table 10. Object methods related to view cursors.
                            Defined Method Description
                            XViewCursor goDown(n, Boolean) Move the cursor down by n lines.
                            XViewCursor goUp(n, Boolean) Move the cursor up by n lines.
                            XViewCursor goLeft(n, Boolean) Move the cursor left by n characters.
                            XViewCursor goRight(n, Boolean) Move the cursor right by n characters.
                            XTextViewCursor isVisible() Return True if the cursor is visible.
                            XTextViewCursor setVisible(Boolean) Show or hide the cursor.
                            XTextViewCursor getPosition() Return a com.sun.star.awt.Point structure specifying the cursor’s coordinates relative to the top-left position of the first page of the document.
                            XLineCursor isAtStartOfLine() Return True if the cursor is at the start of the line.
                            XLineCursor isAtEndOfLine() Return True if the cursor is at the end of the line.
                            XLineCursor gotoEndOfLine(Boolean) Move the cursor to the end of the current line.
                            XLineCursor gotoStartOfLine(Boolean) Move the cursor to the start of the current line.
                            XPageCursor jumpToFirstPage() Move the cursor to the first page.
                            XPageCursor jumpToLastPage() Move the cursor to the last page.
                            XPageCursor jumpToPage(n) Move the cursor to the specified page.
                            XPageCursor getPage() Return the current page as a Short Integer.
                            XPageCursor jumpToNextPage() Move the cursor to the next page.
                            XPageCursor jumpToPreviousPage() Move the cursor to the previous page.
                            XPageCursor jumpToEndOfPage() Move the cursor to the end of the current page.
                            XPageCursor jumpToStartOfPage() Move the cursor to the start of the current page.
                            XScreenCursor screenDown() Scroll the view forward by one visible page.
                            XScreenCursor screenUp() Scroll the view backward by one visible page.
                        Table 11. Text cursor interfaces all implement the XTextCursor interface.
                            Cursor Description
                            com.sun.star.text.XTextCursor The primary text cursor that defines simple movement methods.
                            com.sun.star.text.XWordCursor Provides word-related movement and testing methods.
                            com.sun.star.text.XSentenceCursor Provides sentence-related movement and testing methods.
                            com.sun.star.text.XParagraphCursor Provides paragraph-related movement and testing methods.
                            com.sun.star.text.XTextViewCursor Derived from XTextCursor, this describes a cursor in a text document’s view.
                        Table 12. Object methods related to text cursors.
                            Defined Method Description
                            XTextCursor collapseToStart() Set the end position to the start position.
                            XTextCursor collapseToEnd() Set the start position to the end position.
                            XTextCursor isCollapsed() Return True if the start and end positions are the same.
                            XTextCursor goLeft(n, Boolean) Move the cursor left by n characters.
                            XTextCursor goRight(n, Boolean) Move the cursor right by n characters.
                            XTextCursor gotoStart(Boolean) Move the cursor to the start of the text.
                            XTextCursor gotoEnd(Boolean) Move the cursor to the end of the text.
                            XTextCursor gotoRange(XTextRange, Boolean) Move or expand the cursor to the TextRange.
                            XWordCursor isStartOfWord() Return True if at the start of a word.
                            XWordCursor isEndOfWord() Return True if at the end of a word.
                            XWordCursor gotoNextWord(Boolean) Move to the start of the next word.
                            XWordCursor gotoPreviousWord(Boolean) Move to the end of the previous word.
                            XWordCursor gotoEndOfWord(Boolean) Move to the end of the current word.
                            XWordCursor gotoStartOfWord(Boolean) Move to the start of the current word.
                            XSentenceCursor isStartOfSentence() Return True if at the start of a sentence.
                            XSentenceCursor isEndOfSentence() Return True if at the end of a sentence.
                            XSentenceCursor gotoNextSentence(Boolean) Move to the start of the next sentence.
                            XSentenceCursor gotoPreviousSentence(Boolean) Move to the end of the previous sentence.
                            XSentenceCursor gotoEndOfSentence(Boolean) Move to the end of the current sentence.
                            XSentenceCursor gotoStartOfSentence(Boolean) Move to the start of the current sentence.
                            XParagraphCursor isStartOfParagraph() True if at the start of a paragraph.
                            XParagraphCursor isEndOfParagraph() True if at the end of a paragraph.
                            XParagraphCursor gotoNextParagraph(Boolean) Move to the start of the next paragraph.
                            XParagraphCursor gotoPreviousParagraph(Boolean) Move to the end of the previous paragraph.
                            XParagraphCursor gotoEndOfParagraph(Boolean) Move to the end of the current paragraph.
                        Table 13. Methods defined by the com.sun.star.text.XTextRangeCompare interface.
                            Method Description
                            compareRegionStarts(XTextRange, XTextRange) 
                                • Return 1 if the first range starts before the second.
                                • Return 0 if the first range starts at the same position as the second.
                                • Return -1 if the first range starts after the second.
                            compareRegionEnds(XTextRange, XTextRange) 
                                • Return 1 if the first range ends before the second.
                                • Return 0 if the first range ends at the same position as the second.
                                • Return -1 if the first range ends after the second.
                        Table 14. Properties of the com.sun.star.util.SearchDescriptor service.
                            Property Description
                            SearchBackwards If True, search the document backwards.
                            SearchCaseSensitive If True, the case of the letters affects the search.
                            SearchWords If True, only complete words are found.
                            SearchRegularExpression If True, the search string is treated as a regular expression.
                            SearchStyles If True, text is found based on applied style names—not on the text content.
                            SearchSimilarity If True, a “similarity search” is performed.
                            SearchSimilarityRelax If True, the properties SearchSimilarityRelax, SearchSimilarityRemove, SearchSimilarityAdd, and SearchSimilarityExchange are all used.
                            SearchSimilarityRemove Short Integer specifying how many characters may be ignored in a match.
                            SearchSimilarityAdd Short Integer specifying how many characters may be added in a match.
                            SearchSimilarityExchange Short Integer specifying how many characters may be replaced in a match.
                        Table 15. Methods defined by the com.sun.star.util.XSearchable interface.
                            Method Description
                            createSearchDescriptor() Create a new SearchDescriptor.
                            findAll(XSearchDescriptor) Return an XindexAccess containing all occurrences.
                            findFirst(XSearchDescriptor) Starting from the beginning of the searchable object, return a text range containing the first found text.
                            findNext(XTextRange, XSearchDescriptor) Starting from the provided text range, return a text range containing the first found text.
                        Table 16. Supported regular expression characters.
                            Character Description
                            . A period represents any single character. The search term "sh.rt" finds both “shirt” and “short”.
                            * An asterisk represents any number of characters. The search term “sh*rt” finds “shrt”, “shirt”, ”shiirt”, “shioibaldawpclasdfa asdf asdfrt” and “short”—to name a few things that it can find.
                            ^ A caret represents the beginning of a paragraph. The search term “^Bob” only finds the word “Bob” if it is at the beginning of a paragraph. The search term “^.” finds the first character in a paragraph.
                            $ A dollar sign represents the end of a paragraph. The search term “Bob$” only finds the word “Bob” if it is at the end of a paragraph.
                            ^$ Search for an empty paragraph. This is listed here only because it is used so frequently.
                            + A plus sign indicates that the preceding character must appear at least once. The plus sign also works with the wildcard character “.”. For example, “t.+s” finds a section of text that starts with a “t” and ends with an “s”.
                            The longest possible text within the paragraph is always found. In other words, multiple words may be found, but the found text will always reside in the same paragraph.
                            ? A question mark marks the previous character as optional. For example, you could find words that include the characters that come before the character that is in front of the “\”. For example, “birds?” finds both “bird” and “birds”.
                            \n The text “\n” has two uses. When searching, this finds a hard row break inserted with Shift+Enter. In the replace field, this represents a paragraph break. You can, therefore, replace all hard breaks with a paragraph break.
                            \t The text “\t” is used to find a tab. In the replace field, this adds a tab.
                            \> Using the text “\>” indicates that the preceding text must end a word. For example, “book\>” finds “checkbook” but not “bookmark”.
                            \< Using the text “\<” indicates that the following text must end a word. For example, “\<book” finds “bookmark” but not “checkbook”.
                            \xXXXX A backslash followed by a lowercase x followed by a four-digit hexadecimal number (XXXX) finds the character whose Unicode (ASCII) value is the same as the four-digit hexadecimal number.
                            \ The backslash character followed by anything other than “n”, “t”, “>”, “<”, or “x” is used to specify the character that follows. For example, “\M” finds “M”. The primary purpose is to allow special wild characters to be found. For example, assume that I wanted to find any character preceded by a “+”. Well, the “+” is a special character so I need to precede it with a “\”. Use “.\+” to find any character preceding a “+” character.
                            & The ampersand is used in the replace text to add the found characters. In Listing 35, the ampersand is used to surround all bold text with “{{“ and “}}”.
                            [abc123] Match any character that is between square brackets. For example, “t[ex]+t” finds “text”, “teet”, and “txeeet”; to name a few examples of what it finds.
                            [a-e] The minus sign is used to define a range when used inside of square brackets. For example, “[a-e]” matches characters between “a” and “e” and “[a-ex-z]” matches characters between “a” and “e” or “x” and “z”.
                            [^a-e] Placing a caret symbol inside square brackets will find anything but the specified characters. For example, “[^a-e]” finds any character that is not between “a” and “e”.
                            | Placing a vertical bar between two search strings will match what is before and also match what is after. For example, “bob|jean” matches the string “bob” and also matches the string “jean”
                            {2} Placing a number between curly brackets finds that many occurrences of the previous character. For example, “me{2}t” matches “meet”, and “[0-9]{3}” matches any three-digit number. Note that “[0-9]{3}” will also find the first three digits of a number with more than three digits, unless “find whole words” is also specified.
                            {1,2} Placing two numbers separated by a comma between curly brackets finds the preceding character a variable number of times. For example, “[0-9]{1,4}” finds any number that contains between one and four digits.
                            () Text placed within parentheses is treated as a reference. The text “\1” finds the first reference, “\2” finds the second reference, and so on. For example, “([0-9]{3})-[0-9]{2}-\1” finds “123-45-123” but not “123-45-678”.
                            Parentheses can also be used for grouping. For example, “(he|she|me)$” finds any paragraph that ends with “he”, “she”, or “me”.
                            [:digit:] Finds a single-digit number. For example, “[:digit:]?” finds a single-digit number and “[:digit:]+” finds any number with one or more digits.
                            [:space:] Finds any white space, such as spaces and tabs.
                            [:print:] Finds any printable characters.
                            [:cntrl:] Finds any non-printing characters.
                            [:alnum:] Finds any alphanumeric characters (numbers and text characters).
                            [:alpha:] Finds any alphabetic characters, both uppercase and lowercase.
                            [:lower:] Finds any lowercase characters if “Match case” is selected in the Options area.
                            [:upper:] Finds any uppercase characters if “Match case” is selected in the Options area.
                        Table 17. Content contained in a text document.
                            Content Type  ||  Mechanism  ||  Access Method
                            Footnotes Index Access getFootnotes()
                            Endnotes Index Access getEndnotes()
                            Reference marks Named Access getReferenceMarks()
                            Graphic objects Named Access getGraphicObjects()
                            Embedded objects Named Access getEmbeddedObjects()
                            Text tables Named Access getTables()
                            Bookmarks Named Access getBookmarks()
                            Style families Named Access getStyleFamilies()
                            Document indexes Index Access getDocumentIndexes()
                            Text fields Enumeration Access getTextFields()
                            Text field masters Named Access getTextFieldMasters()
                            Text frames Named Access getTextFrames()
                            Text sections Named Access getTextSections()
                        Table 18. Object methods supported by text tables.
                            Method Description
                            autoFormat(name) Apply the specified auto-format name to the table.
                            createCursorByCellName(name) XTextTableCursor positioned at the specified cell.
                            createSortDescriptor() Array of PropertyValues that specify the sort criteria.
                            dispose() Destroy a text object, which also removes it from the document.
                            getAnchor() Return a text range identifying where the table is anchored. This method allows text content to be added easily before or after a text table.
                            getCellByName(name) Return an XCell based on the cell name, such as “B3”.
                            getCellByPosition(col, row) Numbering starts at zero. This has difficulties with complex tables.
                            getCellNames() String array of cell names contained in the table.
                            getCellRangeByName(name) XCellRange based on cell name, such as A1:B4. Fails if the name identifies a cell that has been split.
                            getCellRangeByPosition(left, top, right, bottom) XCellRange based on numeric range.
                            getColumnDescriptions() Array of strings describing the columns. Fails for complex tables.
                            getColumns() XTableColumns object enumerates columns by index. Also supports insertByIndex(idx, count) and removeByIndex(idx, count).
                            getData() Get numerical data as a nested sequence of values (arrays in an array). Fails for complex tables.
                            getDataArray() Same as getData() but may contain String or Double.
                            getName() Get the table name as a string.
                            getRowDescriptions() Array of strings describing the rows. Fails for complex tables.
                            getRows() XTableRows object enumerates rows by index. Also supports insertByIndex(idx, count) and removeByIndex(idx, count).
                            initialize(rows, cols) Set the numbers of rows and columns. Must be done before the table is inserted (see Listing 4).
                            setColumnDescriptions(string()) Set the column descriptions from an array of strings.
                            setData(Double()) Set numerical data as a nested sequence of values. Fails for complex tables.
                            setDataArray(array()) Same as setData() but may contain String or Double.
                            setName(name) Set the table name.
                            setRowDescriptions(string()) Set the row descriptions from an array of strings.
                            sort(array()) Sort the table based on a sort descriptor.
                        Table 19. Properties supported by the com.sun.star.text.TextTable service.
                            Property Description
                            BreakType Specify the type of break that is applied at the start of the table (see the BreakType attribute in Table 5).
                            LeftMargin Specify the left table margin in 0.01 mm as a Long Integer. Set the HoriOrient property to something other than FULL.
                            RightMargin Specify the right table margin in 0.01 mm as a Long Integer. Set the HoriOrient property to something other than FULL.
                            HoriOrient Specify the horizontal orientation using the com.sun.star.text.HoriOrientation constants. The default value is com.sun.star.text.HoriOrientation.FULL.
                                • NONE = 0 – No alignment is applied.
                                • RIGHT = 1 – The object is aligned at the right side.
                                • CENTER = 2 – The object is aligned at the middle.
                                • LEFT = 3 – The object is aligned at the left side.
                                • INSIDE = 4 – (Not yet supported)
                                • OUTSIDE = 5 – (Not yet supported)
                                • FULL = 6 – The object uses the full space (for text tables only).
                                • LEFT_AND_WIDTH = 7 – The left offset and the width of the object are defined.
                            KeepTogether If True, prevents page or column breaks between this table and the following paragraph or text table.
                            Split If False, the table will not split across two pages.
                            PageDescName If this string is set, a page break occurs before the paragraph, and the new page uses the given page style name (see PageDescName in Table 5).
                            PageNumberOffset If a page break occurs, specify a new page number (see PageNumberOffset in Table 5).
                            RelativeWidth Specify the width of the table relative to its environment as a Short Integer.
                            IsWidthRelative If True, the relative width is valid.
                            RepeatHeadline If True, the first row of the table is repeated on every new page.
                            ShadowFormat Specify the type, color, and size of the shadow (see ParaShadowFormat in Table 5).
                            TopMargin Specify the top table margin in 0.01 mm as a Long Integer.
                            BottomMargin Specify the bottom table margin in 0.01 mm as a Long Integer.
                            BackTransparent If True, the background color is transparent.
                            Width Specify the absolute table width as a Long Integer—this is a read-only property.
                            ChartRowAsLabel If True, the first row is treated as axis labels if a chart is created.
                            ChartColumnAsLabel If True, the first column is treated as axis labels if a chart is created.
                            TableBorder Specify the table borders in a com.sun.star.table.TableBorder structure. The structure contains numerous complicated properties:
                                • The properties TopLine, BottomLine, LeftLine, RightLine, HorizontalLine, and VeriticalLine are all structures of type BorderLine as described by the LeftBorder property in Table 5.
                                • The Distance property contains the distance between the lines and other contents.
                                • You can turn each border property on or off by setting one of the following properties to True or False: IsTopLineValid, IsBottomLineValid, IsLeftLineValid, IsRightLineValid, IsHorizontalLineValid, IsVerticalLineValid, and IsDistanceValid.
                        Table 20. Rows are labeled numerically; columns are labeled alphabetically.
                            A1 B1 C1
                            A2 B2 C2
                            A3 B3 C3
                        Table 21. When a row or column is split or merged, cell names become more complicated.
                            (se bild på sidan 308)
                        Table 22. Methods defined by the com.sun.star.table.XCell interface.
                            Method Description
                            getFormula() The original string typed into the cell, even if it is not a formula.
                            setFormula(String) Set the cell’s formula. Use setString() from the XText interface to set text.
                            getValue() Floating-point (Double) value of the cell.
                            setValue(Double) Set the floating-point value of the cell.
                            getType() Return a com.sun.star.table.CellContentType enumeration with valid values of EMPTY, VALUE, TEXT, and FORMULA.
                            getError() Long Integer error value. If the cell is not a formula, the error value is zero.
                        Table 23. Methods defined by the com.sun.star.text.XTextTableCursor interface.
                            Method Description
                            getRangeName() Return the cell range selected by this cursor as a string. For example, “B3:D5”.
                            gotoCellByName(String, boolean) Move the cursor to the cell with the specified name; return Boolean.
                            goLeft(n, boolean) Move the cursor left n cells; return Boolean.
                            goRight(n, boolean) Move the cursor right n cells; return Boolean.
                            goUp(n, boolean) Move the cursor up n cells; return Boolean.
                            goDown(n, boolean) Move the cursor down n cells; return Boolean.
                            gotoStart(boolean) Move the cursor to the top left cell.
                            gotoEnd(boolean) Move the cursor to the bottom right cell.
                            mergeRange() Merge the selected range of cells; return True for success.
                            splitRange(n, boolean) Create n (an integer) new cells in each cell selected by the cursor. For the Boolean, specify True to split horizontally, False for vertically. Returns True on success.
                        Table 24. Text field interfaces starting with com.sun.star.text.TextField.
                            Field Type Description
                            Annotation Inserted note with string properties Author and Content. The property Date, of type com.sun.star.util.Date, contains the date that the note was created.
                            Author Displays the document’s author. The following optional fields may be present:
                                • IsFixed – If False, the author is modified every time the document is saved.
                                • Content – String content of the text field.
                                • AuthorFormat – Constants from the com.sun.star.text.AuthorDisplayFormat constant group; these have the values: FULL (0), LAST_NAME (1), FIRST_NAME (2), or INITIALS (3).
                                • CurrentPresentation – String containing the current text of the field.
                                • FullName – If False, the initials are displayed rather than the full name.
                            Bibliography Contains a property named Fields, which is an array of type PropertyValue. This field is dependent on a Bibliography text field master.
                            Chapter Chapter information. The Level property is a Byte integer. The ChapterFormat property is a constant group of type com.sun.star.text.ChapterFormat with the following valid values: NAME (0), NUMBER (1), NAME_NUMBER (2), NO_PREFIX_SUFFIX (3), or DIGIT (4).
                            CharacterCount Indicates the number of characters in the document. This contains one property, NumberingType, from the constant group com.sun.star.style.NumberingType; valid values are shown in Table 25.
                            CombinedCharacters Displays one to six characters and treats them as one character.
                            ConditionalText Displays text that changes based on a condition in the text field.
                                • TrueContent – String to use if the condition is True.
                                • FalseContent – String to use if the condition is False.
                                • Condition – String condition to evaluate.
                                • IsConditionTrue – Boolean result of the evaluation (read-only value).
                            DDE Displays the result from a DDE connection. Uses a DDE text field master.
                            Database Database text field used as a mail-merge field. This field depends on a text field master and contains the following properties:
                                • Content – Merged database content as a String.
                                • CurrentPresentation – Displays content as a String.
                                • DataBaseFormat – If True, the database number display format is used.
                                • NumberFormat – com.sun.star.util.NumberFormatter that formats the field.
                            DatabaseName Display the database name when performing database operations (depends on a text field master) with these properties:
                                • DataBaseName – String containing the database name.
                                • DataCommandType – Constant group com.sun.star.sdb.CommandType specifies what DataTable Name supports: TABLE (0), QUERY(1), or COMMAND (2).
                                • DataTableName – String containing the table name, query, or statement.
                            DatabaseNextSet Increment a selection (depends on a text field master) with these properties:
                                • DataBaseName – String name of the database.
                                • DataCommandType – Constant group com.sun.star.sdb.CommandType specifies what DataTable Name supports: TABLE (0), QUERY(1), or COMMAND (2).
                                • DataTableName – String containing the table name, query, or statement.
                                • Condition – String that determines if the selection is advanced to the next position.
                            DatabaseNumberOfSet Set the database cursor selection (depends on a text field master) with these properties:
                                • DataBaseName – String name of the database.
                                • DataCommandType – Constant group com.sun.star.sdb.CommandType specifies what DataTable Name supports: TABLE (0), QUERY(1), or COMMAND (2).
                                • DataTableName – String containing the table name, query, or statement.
                                • Condition – String condition that determines if the SetNumber is applied.
                                • SetNumber – Long Integer set number to be applied.
                            DatabaseSetNumber Display the current database set number (depends on a text field master) with these properties:
                                • DataBaseName – String name of the database.
                                • DataCommandType – Constant group com.sun.star.sdb.CommandType specifies what DataTableName supports: TABLE (0), QUERY(1), or COMMAND (2).
                                • DataTableName – String containing the table name, query, or statement.
                                • NumberingType – See CharacterCount property for valid values.
                                • SetNumber – Long Integer database set.
                            DateTime Display a date or time with the following optional properties:
                                • IsFixed – If False, the current date or time is displayed.
                                • IsDate – If False, this is only a time. If True, this is a date with an optional time.
                                • DateTimeValue – com.sun.star.util.DateTime object with the actual content.
                                • NumberFormat – com.sun.star.util.NumberFormatter that formats the field.
                                • Adjust – Long Integer offset to the date or time in minutes.
                                • IsFixedLanguage – If False, setting the adjacent text language may change the field display.
                            DropDown Display a drop-down field with the following properties:
                                • Name – Field name.
                                • Items – Array of strings with the drop-down value.
                                • SelectedItem – The selected item or an empty string if nothing is selected.
                            EmbeddedObjectCount Display the number of objects embedded in the document. Contains the NumberingType property; see CharacterCount property for valid values.
                            ExtendedUser Display information for the user data (under Tools | Options | OpenOffice.org | User Data) such as name, address, or phone number.
                                • Content – String content.
                                • CurrentPresentation – String containing the current text of the field.
                                • IsFixed – If False, the content is updated.
                                • UserDataType – Specify what to display from the com.sun.star.text.UserDataPart constant group: COMPANY, FIRSTNAME, NAME, SHORTCUT, STREET, COUNTRY, ZIP, CITY, TITLE, POSITION, PHONE_PRIVATE, PHONE_COMPANY, FAX, EMAIL, STATE.
                            FileName Display the document file name (URL). Contains the following properties:
                                • CurrentPresentation – String containing the current text of the field.
                                • FileFormat – File name format com.sun.star.text.FilenameDisplayFormat constants with the following values: FULL, PATH, NAME, and NAME_AND_EXT.
                                • IsFixed – If False, the content is updated.
                            GetExpression Display the result from a “get expression” text field.
                                • Content – String content.
                                • CurrentPresentation – String containing the current text of the field.
                                • NumberFormat – com.sun.star.util.NumberFormatter that formats the field.
                                • NumberingType – See CharacterCount property for valid values.
                                • IsShowFormula – If True, the formula is displayed rather than the content.
                                • SubType – Variable type from the com.sun.star.text.SetVariableType constants with the following values: VAR, SEQUENCE, FORMULA, and STRING.
                                • Value – Numerical (Double) value of the field.
                                • IsFixedLanguage – If False, setting the adjacent text language may change the field display.
                            GetReference Reference field with these properties:
                                • CurrentPresentation – String containing the current text of the field.
                                    • ReferenceFieldSource – com.sun.star.text.ReferenceFieldSource constant with the following
                                        values: REFERENCE_MARK, SEQUENCE_FIELD, BOOKMARK, FOOTNOTE, or
                                        ENDNOTE.
                                        • SourceName – String reference name such as a bookmark name.
                                            • ReferenceFieldPart – com.sun.star.text.ReferenceFieldPart constant with the following
                                                values: PAGE, CHAPTER, TEXT, UP_DOWN, PAGE_DESC,
                                                CATEGORY_AND_NUMBER, ONLY_CAPTION, and ONLY_SEQUENCE_NUMBER.
                                                • SequenceNumber – Short integer sequence number used as sequence field or ReferenceId
                                                    property of a footnote or endnote.
                            GraphicObjectCount Display the number of graphic objects embedded in the document. Contains the NumberingType property; see CharacterCount property for valid values.
                            HiddenParagraph Allow a paragraph to be hidden. Used, for example, to create a test with the questions and answers all in one document. Setting the answers to hidden allows the test questions to be printed for the students.
                                • Condition – String condition to evaluate.
                                • IsHidden – Boolean result of the last evaluation of the condition.
                            HiddenText A field with hidden text. Differs from a hidden paragraph in that only the text in the field is hidden, rather than the entire containing paragraph.
                                • Content – String text content of the hidden text field.
                                • Condition – String condition.
                                • IsHidden – Boolean result of the last evaluation of the condition.
                            Input Text input field.
                                • Content – String text content of the field.
                                • Hint – String hint text.
                            InputUser User-defined text field that depends on a field master.
                                • Content – String text content of the field.
                                • Hint – String hint text.
                            JumpEdit Placeholder text field.
                                • Hint – String hint text.
                                • PlaceHolder – String text of the placeholder.
                                • PlaceHolderType – com.sun.star.text.PlaceholderType constant with the following valid values: TEXT, TABLE, TEXTFRAME, GRAPHIC, or OBJECT.
                            Macro Macro text field.
                                • Hint – Sting hint text.
                                • MacroName – String macro name to run.
                                • MacroLibrary – String library name that contains the macro.
                            PageCount Display the number of pages in the document. Contains the NumberingType property; see CharacterCount property for valid values.
                            PageNumber Display a page number.
                                • Offset – Short Integer offset to show a different page number.
                                • SubType – Which page is displayed from the com.sun.star.text.PageNumberType enumeration. Valid values: PREV, CURRENT, or NEXT.
                                • UserText – String that is displayed when the NumberingType is CHAR_SPECIAL.
                                • NumberingType – See CharacterCount property for valid values.
                            ParagraphCount Display the number of paragraphs in the document. Contains the NumberingType property; see CharacterCount property for valid values.
                            ReferencePageGet Display the page number of a reference point. Contains the NumberingType property; see CharacterCount property for valid values.
                            ReferencePageSet Insert additional page numbers. Contains these properties:
                                • Offset – Short Integer that changes the displayed value of a ReferencePageGet field.
                                • NameOn – If True, the ReferencePageGet text fields are displayed.
                            Script Display text obtained by running a script. Contains these properties:
                                • Content – Script text or URL of the script as a string.
                                • ScriptType – String script type, such as JavaScript.
                                • URLContent – If True, Content is a URL. If False, Content is the script text.
                            SetExpression An expression text field. Contains these properties:
                                • Content – String content.
                                • CurrentPresentation – String containing the current text of the field.
                                • NumberFormat – com.sun.star.util.NumberFormatter that formats the field.
                                • NumberingType – See CharacterCount property for valid values.
                                • IsShowFormula – If True, the formula is displayed rather than the content.
                                • Hint – String hint used if this is an input field.
                                • IsInput – If True, the field is an input field.
                                • IsVisible – If True, the field is visible.
                                • SequenceValue – Sequence value when this field is used as sequence field.
                                • SubType – Variable type from the com.sun.star.text.SetVariableType constants with the following values: VAR, SEQUENCE, FORMULA, and STRING.
                                • Value – Numerical (Double) value of the field.
                                • VariableName – Name of the associated set expression field master.
                                • IsFixedLanguage – If False, setting the adjacent text language may change the field display.
                            TableCount Display the number of tables in the document. Contains the NumberingType property; see CharacterCount property for valid values.
                            TemplateName Display the name of the template used to create the document. Supports the FileFormat property as supported by the Filename property.
                            URL Display a URL. Contains these properties:
                                • Format – Short Integer specifying the URL output format.
                                • URL – String containing the unparsed original URL.
                                • Representation – Display string shown to the user.
                                • TargetFrame – String frame name where the URL will be opened.
                            User Display a user-defined field with a field master. Contains these properties:
                                • IsShowFormula – If True, the formula is displayed rather than the content.
                                • IsVisible – If True, the field is visible.
                                • NumberFormat – com.sun.star.util.NumberFormatter that formats the field.
                                • IsFixedLanguage – If False, setting the adjacent text language may change the field display.
                            WordCount Display the number of words in the document. Contains the NumberingType property; see CharacterCount property for valid values.
                            docinfo.ChangeAuthor Display the name of the last author to modify the document.
                                • Author – String containing the name of the author.
                                • CurrentPresentation – Current content of the text field as a String.
                                • IsFixed – If False, the content is updated when the document is saved.
                            docinfo.ChangeDateTime Display the date and time the document was last changed. Contains these properties:
                                • CurrentPresentation – Current content of the text field as a String.
                                • IsFixed – If False, the current date or time is displayed.
                                • IsDate – If False, this is only a time. If True, this is a date with an optional time.
                                • DateTimeValue – com.sun.star.util.DateTime object with the actual content.
                                • NumberFormat – com.sun.star.util.NumberFormatter that formats the field.
                                • IsFixedLanguage – If False, setting the adjacent text language may change the field display.
                            docinfo.CreateAuthor Display the name of the author who created the document (see docinfo.ChangeAuthor for supported properties).
                            docinfo.CreateDateTime Display the date and time the document was created (see docinfo.ChangeDateTime for supported properties).
                            docinfo.Description Display the document description as contained in the document properties (File | Properties).
                                • Content – String content.
                                • CurrentPresentation – String containing the current text of the field.
                                • IsFixed – If False, the content is updated when the document information is changed.
                            docinfo.EditTime Display the duration the document has been edited. In other words, how long did it take to write?
                                • CurrentPresentation – String containing the current text of the field.
                                • IsFixed – If False, the date or time is always displayed as the current date or time.
                                • DateTimeValue – Date and time as a Double.
                                • NumberFormat – com.sun.star.util.NumberFormatter that formats the field.
                                • IsFixedLanguage – If False, setting the adjacent text language may change the field display.
                            docinfo.Info0 Display the document info 0 (see doc.Description).
                            docinfo.Info1 Display the document info 1 (see doc.Description).
                            docinfo.Info2 Display the document info 2 (see doc.Description).
                            docinfo.Info3 Display the document info 3 (see doc.Description).
                            docinfo.Keywords Display the document info keywords (see doc.Description).
                            docinfo.PrintAuthor Display the name of the author who printed the document (see docinfo.ChangeAuthor for supported properties).
                            docinfo.PrintDateTime Display the time the document was last printed (see docinfo.ChangeDateTime for supported properties).
                            docinfo.Revision Display the current document revision (see doc.Description).
                            docinfo.Subject Display the document subject specified in the document information (see doc.Description).
                            docinfo.Title Display the document title specified in the document information (see doc.Description).
                        Table 25. Constants defined by com.sun.star.style.NumberingType.
                            Constant Description
                            CHARS_UPPER_LETTER Numbering is in uppercase letters as “A, B, C, D, ...”.
                            CHARS_LOWER_LETTER Numbering is in lowercase letters as “a, b, c, d,...”.
                            ROMAN_UPPER Numbering is in Roman numbers with uppercase letters as “I, II, III, IV, ...”.
                            ROMAN_LOWER Numbering is in Roman numbers with lowercase letters as “i, ii, iii, iv, ...”.
                            ARABIC Numbering is in Arabic numbers as “1, 2, 3, 4, ...”.
                            NUMBER_NONE Numbering is invisible.
                            CHAR_SPECIAL Use a character from a specified font.
                            PAGE_DESCRIPTOR Numbering is specified in the page style.
                            BITMAP Numbering is displayed as a bitmap graphic.
                            CHARS_UPPER_LETTER_N Numbering is in uppercase letters as “A, B, ..., Y, Z, AA, BB, CC, ... AAA, ...”.
                            CHARS_LOWER_LETTER_N Numbering is in lowercase letters as “a, b, ..., y, z, aa, bb, cc, ... aaa, ...”.
                            TRANSLITERATION A transliteration module is used to produce numbers in Chinese, Japanese, etc.
                            NATIVE_NUMBERING The native-number-supplier service is called to produce numbers in native languages.
                            FULLWIDTH_ARABIC Numbering for full-width Arabic number.
                            CIRCLE_NUMBER Bullet for Circle Number.
                            NUMBER_LOWER_ZH Numbering for Chinese lowercase numbers.
                            NUMBER_UPPER_ZH Numbering for Chinese uppercase numbers.
                            NUMBER_UPPER_ZH_TW Numbering for Traditional Chinese uppercase numbers.
                            TIAN_GAN_ZH Bullet for Chinese Tian Gan.
                            DI_ZI_ZH Bullet for Chinese Di Zi.
                            NUMBER_TRADITIONAL_JA Numbering for Japanese traditional numbers.
                            AIU_FULLWIDTH_JA Bullet for Japanese AIU full width.
                            AIU_HALFWIDTH_JA Bullet for Japanese AIU half width.
                            IROHA_FULLWIDTH_JA Bullet for Japanese IROHA full width.
                            IROHA_HALFWIDTH_JA Bullet for Japanese IROHA half width.
                            NUMBER_UPPER_KO Numbering for Korean uppercase numbers.
                            NUMBER_HANGUL_KO Numbering for Korean hangul numbers.
                            HANGUL_JAMO_KO Bullet for Korean Hangul Jamo.
                            HANGUL_SYLLABLE_KO Bullet for Korean Hangul Syllable.
                            HANGUL_CIRCLED_JAMO_KO Bullet for Korean Hangul Circled Jamo.
                            HANGUL_CIRCLED_SYLLABLE_KO Bullet for Korean Hangul Circled Syllable.
                            CHARS_ARABIC Numbering in Arabic alphabet letters.
                            CHARS_THAI Numbering in Thai alphabet letters.
                        Table 26. Text field interfaces starting with com.sun.star.text.FieldMaster.
                            Field Type Description
                            Bibliography Field master to a Bibliography text field. Contains these properties:
                                • IsNumberEntries – If True, the fields are numbered; otherwise, the short entry name is used.
                                • IsSortByPosition – If True, the bibliography index is sorted by the document position (see SortKey).
                                • BracketBefore – The opening bracket displayed in the Bibliography text field.
                                • BracketAfter – The closing bracket displayed in the Bibliography text field.
                                • SortKeys – This array of PropertyValues is used if IsSortByPosition is False. The properties are a sequence of the property SortKey (com.sun.star.text.BibliographyDataField constant identifying the field to sort) and IsSortAscending (Boolean).
                                • Locale – com.sun.star.lang.Locale of the field master.
                                • SortAlgorithm – String containing the name of the sort algorithm used to sort the text fields.
                            DDE Field master to a DDE text field. Contains these properties:
                                • DDECommandElement – DDE command as a string.
                                • DDECommandFile – File string of the DDE command.
                                • DDECommandType – DDE command type as a string.
                                • IsAutomaticUpdate – If True, the DDE link is automatically updated.
                            Database Field master to a Database text field. Contains these properties:
                                • DataBaseName – String name of the data source.
                                • CommandType – Long Integer CommandType (0 = table, 1 = query, 2 = statement).
                                • DataTableName – Command string type is determined by the CommandType property.
                                • DataColumnName – Database table name as a String.
                            SetExpression Field master to a “set expression” text field. Contains these properties:
                                • ChapterNumberingLevel – Chapter number as a byte, if this is a number sequence.
                                • NumberingSeparator – Numbering separator string, used if this is a number sequence.
                                • SubType – Variable type from the com.sun.star.text.SetVariableType constants with the following values: VAR, SEQUENCE, FORMULA, and STRING.
                            User Field master to a user text field. Contains the properties:
                                • IsExpression – If True, the field contains an expression.
                                • Value – Double value.
                                • Content – Field content as a string.
                        Table 27. Properties defined by the service com.sun.star.text.FieldMaster.
                            Property Description
                            Name Optional string with the field name; this must be set before the field is added to the document.
                            DependentTextFields Array of text fields that use this master field.
                            InstanceName String instance name as it is used in the XTextFieldsSupplier.
                    Chapter 14 - Calc Documents, s325
                        Table 1.Some interfaces supported by Calc documents.
                            Service Description
                            com.sun.star.document.XActionLockable Temporarily lock the document from user interaction and automatic cell updates. Locking an object makes it possible to prevent internal object updates while you quickly change multiple parts of the objects that might temporarily invalidate each other.
                            com.sun.star.drawing.XDrawPagesSupplier Access all draw pages in this document; there is one draw page for each contained sheet.
                            com.sun.star.sheet.XCalculatable Control automatic calculation of cells.
                            com.sun.star.sheet.XConsolidatable Perform data consolidation.
                            com.sun.star.sheet.XGoalSeek Perform a “Goal Seek” for a cell.
                            com.sun.star.sheet.XSpreadsheetDocument Access the contained spreadsheets.
                            com.sun.star.style.XStyleFamiliesSupplier Access the contained styles by type.
                            com.sun.star.util.XNumberFormatsSupplier Access the number formats.
                            com.sun.star.util.XProtectable Protect and unprotect the document.
                        Table 2. Methods implemented by the com.sun.star.sheet.Spreadsheets service.
                            Method Description
                            copyByName( srcName, destName, index ) Copy the sheet named srcNam to the specified index and name it destName.
                            createEnumeration() Create an object that enumerates the spreadsheets.
                            getByIndex(index) Obtain a spreadsheet based on the sheet’s index.
                            getByName(name) Obtain a spreadsheet based on the sheet’s name.
                            getCount() Return the number of sheets as a Long Integer.
                            hasByName(name) Return True if the named spreadsheet exits.
                            hasElements() Return True if the document contains at least one spreadsheet.
                            insertNewByName(name, index) Create a new spreadsheet and insert it at the specified location with the supplied name.
                            moveByName(name, index) Move the named spreadsheet to the specified index.
                            removeByName(name) Remove the named spreadsheet.
                        Table 3. Properties of the com.sun.star.table.CellAddress structure.
                            Property Description
                            Sheet Short Integer index of the sheet that contains the cell.
                            Column Long Integer index of the column where the cell is located.
                            Row Long Integer index of the row where the cell is located.
                        Table 4. Properties of the com.sun.star.table.BorderLine structure.
                            Property Description
                            Color Line color as a Long Integer.
                            InnerLineWidth Width of the inner part of a double line (in 0.01 mm) as a Short Integer—zero for a single line.
                            OuterLineWidth Width of a single line, or width of the outer part of a double line (in 0.01 mm) as a Short Integer.
                            LineDistance Distance between the inner and outer parts of a double line (in 0.01 mm) as a Short Integer.
                        Table 5. Properties of the com.sun.star.table.TableBorder structure.
                            Property Description
                            TopLine Line style at the top edge (see Table 4).
                            IsTopLineValid If True, the TopLine is used when setting values.
                            BottomLine Line style at the bottom edge (see Table 4).
                            IsBottomLineValid If True, the BottomLine is used when setting values.
                            LeftLine Line style at the left edge (see Table 4).
                            IsLeftLineValid If True, the LeftLine is used when setting values.
                            RightLine Line style at the right edge (see Table 4).
                            IsRightLineValid If True, the RightLine is used when setting values.
                            HorizontalLine Line style for horizontal lines between cells (see Table 4).
                            IsHorizontalLineValid If True, the HorizontalLine is used when setting values.
                            VerticalLine Line style for vertical lines between cells (see Table 4).
                            IsVerticalLineValid If True, the VerticalLine is used when setting values.
                            Distance Distance between the lines and other contents as a Short Integer.
                            IsDistanceValid If True, the Distance is used when setting values.
                        Table 6. Properties supported by the com.sun.star.table.CellProperties service.
                            Property Description
                            CellStyle Optional property; the name of the style of the cell as a String.
                            CellBackColor The cell background color as a Long Integer (see IsCellBackgroundTransparent).
                            IsCellBackgroundTransparent If True, the cell background is transparent and the CellBackColor is ignored.
                            HoriJustify The cell’s horizontal alignment as a com.sun.star.table.CellHoriJustify enum:
                                • STANDARD – Default alignment is left for numbers and right for text.
                                • LEFT – Content is aligned to the cell’s left edge.
                                • CENTER – Content is horizontally centered.
                                • RIGHT – Content is aligned to the cell’s right edge.
                                • BLOCK – Content is justified to the cell’s width.
                                • REPEAT – Content is repeated to fill the cell (but this doesn’t seem to work).
                            VertJustify The cell’s vertical alignment as a com.sun.star.table.CellVertJustify enum:
                                • STANDARD – Use the default.
                                • TOP – Align to the upper edge of the cell.
                                • CENTER – Align to the vertical middle of the cell.
                                • BOTTOM – Align to the lower edge of the cell.
                            IsTextWrapped If True, the cell’s content is automatically wrapped at the right border.
                            ParaIndent The indentation of the cell’s content (in 0.01 mm) as a Short Integer.
                            Orientation If the RotateAngle is zero, this specifies the orientation of the cell’s content as an enum of type com.sun.star.table.CellOrientation:
                                • STANDARD – The cell’s content is displayed from left to right.
                                • TOPBOTTOM – The cell’s content is displayed from top to bottom.
                                • BOTTOMTOP – The cell’s content is displayed from bottom to top.
                                • STACKED – Same as TOPBOTTOM but each character is horizontal.
                            RotateAngle Defines how much to rotate the cell’s content (in 0.01 degrees) as a Long Integer. The entire string is rotated as one unit rather than as individual characters.
                            RotateReference Defines the edge where rotated cells are aligned using the same enum as VertJustify.
                            AsianVerticalMode If True, only Asian characters use a vertical orientation. In other words, in Asian mode only Asian characters are printed in horizontal orientation if the Orientation property is STACKED; for other orientations, this value is not used.
                            TableBorder Description of the cell or cell range border (see Table 5). When used with a single cell, the values set the borders for the single cell. When used with a range of cells, the borders are for the outer edges of the range rather than the individual cells.
                            TopBorder Description of the cell’s top border line (see Table 4).
                            BottomBorder Description of the cell’s bottom border line (see Table 4).
                            LeftBorder Description of the cell’s left border line (see Table 4).
                            RightBorder Description of the cell’s right border line (see Table 4).
                            NumberFormat Index of the cell’s number format. The proper value can be determined by using the com.sun.star.util.XNumberFormatter interface supported by the document.
                            ShadowFormat Defines the shadow format using a com.sun.star.table.ShadowFormat structure: Location – The shadow’s location as a com.sun.star.table.ShadowLocation enum with valid values of NONE, TOP_LEFT, TOP_RIGHT, BOTTOM_LEFT, and BOTTOM_RIGHT.
                                • ShadowWidth – The shadow’s size as a Short Integer.
                                • IsTransparent – If True, the shadow is transparent.
                                • Color – The shadow’s color as a Long Integer.
                            CellProtection Defines the cell’s protection as a com.sun.star.util.CellProtection structure:
                                • IsLocked – If True, the cell is locked from modifications by the user.
                                • IsFormulaHidden – If True, the formula is hidden from the user.
                                • IsHidden – If True, the cell is hidden from the user.
                                • IsPrintHidden – If True, the cell is hidden on printouts.
                            UserDefinedAttributes
                                This property is used to store additional attributes in a com.sun.star.container.XNameContainer interface.
                        Table 7. Properties supported by the com.sun.star.sheet.SheetCell service.
                            Property Description
                            Position The position of the cell in the sheet (in 0.01 mm) as a com.sun.star.awt.Point structure. This is the absolute position in the entire sheet, not the position in the visible area.
                                • X – The x-coordinate as a Long Integer.
                                • Y – The y-coordinate as a Long Integer.
                            Size The size of the cell (in 0.01 mm) as a com.sun.star.awt.Size structure:
                                • Width – The width as a Long Integer.
                                • Height – The height as a Long Integer.
                            FormulaLocal Optional string containing the formula using localized function names.
                            FormulaResultType Formula result type with values from the com.sun.star.sheet.FormulaResult constant group:
                                • VALUE = 1 – The formula returns a Double precision floating-point number.
                                • STRING = 2 – The formula returns a String value.
                                • ERROR = 4 – The formula has an error of some sort.
                            ConditionalFormat The conditional formatting settings for this cell. When a conditional format is changed, it must be reinserted into the property set.
                            ConditionalFormatLocal Optional property duplicating ConditionalFormat except that formula names use local names.
                            Validation The data validation settings for this cell as a com.sun.star.beans.XPropertySet.
                            ValidationLocal Optional property duplicating Validation except that formula names use local names.
                        Table 8. Methods implemented by the com.sun.star.sheet.CellAnnotation service.
                            Method Description
                            getParent() Get the object (cell) containing this annotation.
                            setParent(oCell) Set the cell that contains this annotation.
                            getPosition() Get the com.sun.star.table.CellAddress of the cell containing this annotation (see Table 3).
                            getAuthor() Get the user who last changed the annotation as a String.
                            getDate() Get the date the annotation was last changed as a formatted String.
                            getIsVisible() Returns True if the annotation is visible.
                            setIsVisible(boolean) Set whether the annotation is visible.
                        Table 9. Properties of the com.sun.star.table.CellRangeAddress structure.
                            Property Description
                            Sheet Short Integer index of the sheet that contains the cell.
                            StartColumn Long Integer index of the column where the left edge is located.
                            StartRow Long Integer index of the row where the top edge is located.
                            EndColumn Long Integer index of the column of the right edge of the range.
                            EndRow Long Integer index of the row of the bottom edge of the range.
                        Table 10. Methods defined by the com.sun.star.table.XSheetCellRanges interface.
                            Method Description
                            getCells() Return the collection of contained cells as an XEnumerationAccess.
                            getRangeAddressesAsString() Return a string with the addresses of all contained ranges. The output format is similar to “Sheet1.B2:D6;Sheet3.C4:D5”.
                            getRangeAddresses() Return an array of services of type CellRangeAddress (see Table 9).
                        Table 11. Validation types defined by the com.sun.star.sheet.ValidationType enum.
                            Value Description
                            com.sun.star.sheet.ValidationType.ANY All content is valid; no conditions are used.
                            com.sun.star.sheet.ValidationType.WHOLE Compare a whole (integer) number against the specified condition.
                            com.sun.star.sheet.ValidationType.DECIMAL Compare any number against the specified condition.
                            com.sun.star.sheet.ValidationType.DATE Compare a date value against the specified condition.
                            com.sun.star.sheet.ValidationType.TIME Compare a time value against the specified condition.
                            com.sun.star.sheet.ValidationType.TEXT_LEN Compare a string length against the specified condition.
                            com.sun.star.sheet.ValidationType.LIST Only allow strings in the specified list.
                            com.sun.star.sheet.ValidationType.CUSTOM Specify a formula that determines if the contents are valid.
                        Table 12. Validation alerts defined by the com.sun.star.sheet.ValidationAlertStyle enum.
                            Value Description
                            com.sun.star.sheet.ValidationAlertStyle.STOP Display an error message and reject the change.
                            com.sun.star.sheet.ValidationAlertStyle.WARNING Display a warning message and ask the user if the change will be accepted. The default answer is No.
                            com.sun.star.sheet.ValidationAlertStyle.INFO Display an information message and ask the user if the change will be accepted. The default answer is Yes.
                            com.sun.star.sheet.ValidationAlertStyle.MACRO Execute a specified macro.
                        Table 13. Conditions defined by the com.sun.star.sheet.ConditionOperator enum.
                            Value Description
                            com.sun.star.sheet.ConditionOperator.NONE No condition is specified.
                            com.sun.star.sheet.ConditionOperator.EQUAL The value must be equal to the specified value.
                            com.sun.star.sheet.ConditionOperator.NOT_EQUAL The value must not be equal to the specified value.
                            com.sun.star.sheet.ConditionOperator.GREATER The value must be greater than the specified value.
                            com.sun.star.sheet.ConditionOperator.GREATER_EQUAL The value must be greater than or equal to the specified value.
                            com.sun.star.sheet.ConditionOperator.LESS The value must be less than the specified value.
                            com.sun.star.sheet.ConditionOperator.LESS_EQUAL The value must be less than or equal to the specified value.
                            com.sun.star.sheet.ConditionOperator.BETWEEN The value must be between the two specified values.
                            com.sun.star.sheet.ConditionOperator.NOT_BETWEEN The value must be outside of the two specified values.
                            com.sun.star.sheet.ConditionOperator.FORMULA The specified formula must have a non-zero result.
                        Table 14. Properties supported by the com.sun.star.sheet.TableValidation service.
                            Property Description
                            Type The type of validation to perform, as shown in Table 11.
                            ShowInputMessage If True, an input message appears when the cursor is in an invalid cell.
                            InputTitle Title (String) of the dialog with the input message.
                            InputMessage Text (String) of the input message.
                            ShowErrorMessage If True, an error message appears when invalid data is entered.
                            ErrorTitle Title (String) of the dialog showing the error message.
                            ErrorMessage Text (String) of the error message.
                            IgnoreBlankCells If True, blank cells are allowed.
                            ErrorAlertStyle The action that is taken when an error occurs, as shown in Table 12.
                        Table 15. Methods supported by the com.sun.star.sheet.TableValidation service.
                            Method Description
                            getOperator() Get the operator used in the condition, as shown in Table 13.
                            setOperator(condition) Set the operator used in the condition, as shown in Table 13.
                            getFormula1() Get the comparison value (String) used in the condition, or the first value if two are needed.
                            setFormula1(String) Set the comparison value used in the condition, or the first value if two are required.
                            getFormula2() Get the second value (String) if two are required.
                            setFormula2(String) Set the second value (String) if two are required.
                            getSourcePosition() Get the CellAddress that is used as a base for relative references in the formulas (see Table 3).
                            setSourcePosition(CellAddress) Set the CellAddress that is used as a base for relative references in the formulas (see Table 3).
                        Table 16. Methods supported by the com.sun.star.table.XCellRange interface.
                            Method Description
                            getCellByPosition(left, top) Get a cell within the range.
                            getCellRangeByPosition(left, top, right, bottom) Get a cell range within the range.
                            getCellRangeByName(name) Get a cell range within the range based on its name. The string directly references cells using the standard formats—such as “B2:D5” or “$B$2”—or defined cell range names.
                        Table 17. Values in the com.sun.star.sheet.CellFlags constant group.
                            Value Flag Description
                            1 com.sun.star.sheet.CellFlags.VALUE Select numbers not formatted as dates or times.
                            2 com.sun.star.sheet.CellFlags.DATETIME Select numbers formatted as dates or times.
                            4 com.sun.star.sheet.CellFlags.STRING Select strings.
                            8 com.sun.star.sheet.CellFlags.ANNOTATION Select cell annotations.
                            16 com.sun.star.sheet.CellFlags.FORMULA Select formulas.
                            32 com.sun.star.sheet.CellFlags.HARDATTR Select explicit formatting—not styles.
                            64 com.sun.star.sheet.CellFlags.STYLES Select cell styles.
                            128 com.sun.star.sheet.CellFlags.OBJECTS Select drawing objects such as buttons and graphics.
                            256 com.sun.star.sheet.CellFlags.EDITATTR Select formatting within the cell’s content.
                        Table 18. Methods to query a cell range.
                            Method Description
                            queryDependents(boolean) Return all cells that reference cells in this range. If True, search is recursive.
                            queryPrecedents(boolean) Return all cells referenced by cells in this range. If True, search is recursive.
                            queryVisibleCells() Return all visible cells.
                            queryEmptyCells() Return all empty cells.
                            queryContentCells(CellFlags) Return all cells with the specified content types (see Table 17).
                            queryFormulaCells(FormulaResult) Return all cells containing a formula with the specified result type (see FormulaResultType in Table 7).
                            queryColumnDifferences(CellAddress) Return all cells that differ from the comparison cell in the specified cell’s row (see Table 3).
                            queryRowDifferences(CellAddress) Return all cells that differ from the comparison cell in the specified cell’s column (see Table 3).
                            queryIntersection(CellRangeAddress) Return the range of cells that intersect the specified range (see Table 9).
                        Table 19. The formulas and values set by Listing 14.
                            (se s 341)
                        Table 20. Individual row and column properties.
                            Type Property Description
                            Column Width Width of the column (in 0.01 mm) as a Long Integer.
                            Row Height Height of the row (in 0.01 mm) as a Long Integer.
                            Column OptimalWidth If True, the column always keeps its optimal width.
                            Row OptimalHeight If True, the column always keeps its optimal height.
                            Both IsVisible If True, the row or column is visible.
                            Both IsStartOfNewPage If True, a horizontal (vertical) page break is attached to the column (row).
                        Table 21. The com.sun.star.sheet.GeneralFunction enumeration.
                            Value Description
                            com.sun.star.sheet.GeneralFunction.NONE Nothing is calculated.
                            com.sun.star.sheet.GeneralFunction.AUTO Use SUM if all values are numerical; otherwise use COUNT.
                            com.sun.star.sheet.GeneralFunction.SUM Sum (add) all of the numerical values.
                            com.sun.star.sheet.GeneralFunction.COUNT Count all of the values.
                            com.sun.star.sheet.GeneralFunction.AVERAGE Average all of the numerical values.
                            com.sun.star.sheet.GeneralFunction.MAX Maximum numerical value.
                            com.sun.star.sheet.GeneralFunction.MIN Minimum numerical value.
                            com.sun.star.sheet.GeneralFunction.PRODUCT Product (multiplication) of all the numerical values.
                            com.sun.star.sheet.GeneralFunction.COUNTNUMS Count the numerical values.
                            com.sun.star.sheet.GeneralFunction.STDEV Standard deviation based on a sample.
                            com.sun.star.sheet.GeneralFunction.STDEVP Standard deviation based on the entire population.
                            com.sun.star.sheet.GeneralFunction.VAR Variance based on a sample.
                            com.sun.star.sheet.GeneralFunction.VARP Variance based on the entire population.
                        Table 22. The com.sun.star.sheet.FillDirection enumeration.
                            Value Description
                            com.sun.star.sheet.FillDirection.TO_BOTTOM Rows are filled from top to bottom.
                            com.sun.star.sheet.FillDirection.TO_RIGHT Columns are filled from left to right.
                            com.sun.star.sheet.FillDirection.TO_TOP Rows are filled from bottom to top.
                            com.sun.star.sheet.FillDirection.TO_LEFT Columns are filled from right to left.
                        Table 23. The com.sun.star.sheet.FillMode enumeration.
                            Value Description
                            com.sun.star.sheet.FillMode.SIMPLE All of the values are the same (constant series).
                            com.sun.star.sheet.FillMode.LINEAR The values change by a constant increment (arithmetic series).
                            com.sun.star.sheet.FillMode.GROWTH The values change by a constant multiple (geometric series).
                            com.sun.star.sheet.FillMode.DATE An arithmetic series for date values. This causes all numbers to be treated as dates, regardless of formatting.
                            com.sun.star.sheet.FillMode.AUTO The cells are filled from a user-defined list.
                        Table 24. The com.sun.star.sheet.FillDateMode enumeration.
                            Value Description
                            com.sun.star.sheet.FillDateMode.FILL_DATE_DAY Increment the day by 1.
                            com.sun.star.sheet.FillDateMode.FILL_DATE_WEEKDAY Increment the day by 1 but skip Saturday and Sunday.
                            com.sun.star.sheet.FillDateMode.FILL_DATE_MONTH Increment the month (the day is unchanged).
                            com.sun.star.sheet.FillDateMode.FILL_DATE_YEAR Increment the year (the day and month are unchanged).
                        Table 26. The com.sun.star.sheet.TableOperationMode enumeration
                            Value Description
                            com.sun.star.sheet.TableOperationMode.COLUMN Apply the operation down the columns.
                            com.sun.star.sheet.TableOperationMode.ROW Apply the operation across the rows.
                            com.sun.star.sheet.TableOperationMode.BOTH Apply the operation to both rows and columns.
                        Table 27. The com.sun.star.table.TableSortFieldType enumeration.
                            Value Description
                            com.sun.star.table.TableSortFieldType.AUTOMATIC Automatically determine the data type.
                            com.sun.star.table.TableSortFieldType.NUMERIC Sort the data as a number.
                            com.sun.star.table.TableSortFieldType.ALPHANUMERIC Sort the data as text.
                        Table 28. The com.sun.star.table.TableSortField structure.
                            Property Description
                            Field Zero-based index of the row or column in the table to sort. The index is relative to the start of the sort range.
                            IsAscending If True, sort the data in ascending order.
                            IsCaseSensitive If True, the sort is case sensitive.
                            FieldType Specify the data type as a TableSortFieldType (see Table 27).
                            CollatorLocale The Locale object to use when sorting text.
                            CollatorAlgorithm The sorting algorithm used by the collator when sorting text. Check the interface com.sun.star.i18n.XCollator to investigate what algorithms are supported for your locale. I have always used the default value.
                        Table 29. The old way to specify a sort using a SortDescriptor.
                            Property Description
                            IsCaseSensitive If True, the sort is case sensitive.
                            SortAscending If True, sort the data in ascending order. This property typically is not used, because the TableSortField specifies IsAscending for each field.
                            SortColumns If True, columns are sorted. If False, rows are sorted.
                            CollatorLocale The Locale object to use when sorting text (usually set in the TableSortField).
                            CollatorAlgorithm Sorting algorithm to use (usually set in the TableSortField).
                            SortFields Array of type TableSortField (see Table 28) that directs what is sorted.
                            MaxSortFieldsCount Long Integer that specifies the maximum number of sort fields the descriptor can hold. This value cannot be set, but it can be read.
                            ContainsHeader If True, the first row or column is considered a header and is not sorted.
                            Orientation This property is deprecated and should no longer be used!
                        Table 30. The new way to specify a sort using a SortDescriptor2.
                            Property Description
                            SortFields Array of type TableSortField (see Table 28) that directs what is sorted.
                            MaxSortFieldsCount Long Integer that specifies the maximum number of sort fields the descriptor can hold. This value cannot be set, but it can be read.
                            IsSortColumns If True, columns are sorted. If False, rows are sorted.
                            BindFormatsToContent If True, cell formats are moved with the contents during the sort. This property matters only if different cells in the sort range use different formatting.
                            IsUserListEnabled If True, a user-defined sorting list is used from the GlobalSheetSettings.
                            UserListIndex Specify which user-defined sorting list is used as a Long Integer.
                            CopyOutputData If True, the sorted data is copied to another position in the document.
                            OutputPosition CellAddress that specifies where to copy the sorted data (if CopyOutputData is True).
                            ContainsHeader If True, the first row or column is considered a header and is not sorted.
                        Table 31. Interfaces implemented by the com.sun.star.sheet.Spreadsheet service.
                            Interfaces Description
                            com.sun.star.sheet.XSpreadsheet Methods to create a cell cursor.
                            com.sun.star.container.XNamed Access the spreadsheet name.
                            com.sun.star.util.XProtectable Methods to protect and unprotect the individual sheet.
                            com.sun.star.sheet.XDataPilotTablesSupplier Access the DataPilot tables with the method getDataPilotTables().
                            com.sun.star.sheet.XScenariosSupplier Access the scenarios with the method getScenarios().
                            com.sun.star.sheet.XSheetAnnotationsSupplier Access the annotations with the method getAnnotations().
                            com.sun.star.drawing.XDrawPageSupplier Access the sheet’s draw page with the method getDrawPage().
                            com.sun.star.table.XTableChartsSupplier Access the document’s chart objects with the method getCharts().
                            com.sun.star.sheet.XCellRangeMovement Move cell ranges inside the sheet or to other spreadsheets in this document.
                            com.sun.star.sheet.XPrintAreas Access to the print-area settings of this sheet.
                            com.sun.star.sheet.XSheetPageBreak Access and modify the page breaks in this sheet.
                            com.sun.star.sheet.XScenario Provide methods for a scenario sheet.
                            com.sun.star.sheet.XSheetOutline Access the row and column outline settings for the sheet.
                            com.sun.star.sheet.XSheetAuditing Look for linked cells (detective).
                            com.sun.star.sheet.XSheetLinkable Methods to link to existing sheets in other documents.
                        Table 32. Values supported by the com.sun.star.sheet.SheetLinkMode enumeration.
                            Value Description
                            com.sun.star.sheet.SheetLinkMode.NONE The sheet is not linked.
                            com.sun.star.sheet.SheetLinkMode.NORMAL Copy the entire content including values and formulas.
                            com.sun.star.sheet.SheetLinkMode.VALUE Copy the content by value; each formula’s returned value is copied rather than the formula itself.
                        Table 33. Values supported by the com.sun.star.sheet.SheetLinkMode enumeration.
                            Method Description
                            getLinkMode() Get the sheet’s link mode (see Table 32).
                            getLinkMode(SheetLinkMode) Set the link mode (see Table 32).
                            getLinkUrl() Get the link URL.
                            setLinkUrl(url) Set the link URL.
                            getLinkSheetName() Get the name of the linked sheet.
                            setLinkSheetName(name) Set the name of the linked sheet.
                            link(url, sheetName, filterName, filterOptions, Link the sheet to another sheet in another document. SheetLinkMode)
                        Table 34. Methods supported by the com.sun.star.sheet.XSheetAuditing interface.
                            Method Description
                            hideDependents(CellAddress) Remove arrows for one level of dependents; return True if cells are marked.
                            hidePrecedents(CellAddress) Remove arrows for one level of precedents; return True if cells are marked.
                            showDependents(CellAddress) Draw arrows from the CellAddress (see Table 3) to its dependents; return True if cells are marked.
                            showPrecedents(CellAddress) Draw arrows to the CellAddress (see Table 3) from its dependents; return True if cells are marked.
                            showErrors(CellAddress) Draw arrows from the CellAddress (see Table 3) containing an error and the cells causing the error; return True if cells are marked.
                            showInvalid() Show all cells containing invalid values; return True if cells are marked.
                            clearArrows() Remove all auditing arrows from the sheet.
                        Table 35. Values defined by the com.sun.star.table.TableOrientation enumeration.
                            Value Description
                            com.sun.star.table.TableOrientation.ROWS Use rows.
                            com.sun.star.table.TableOrientation.COLUMNS Use columns.
                        Table 36. Methods supported by the com.sun.star.sheet.XSheetOutline interface.
                            Value Description
                            group(CellRangeAddress, TableOrientation) Group the cells in the cell range into one group.
                            ungroup(CellRangeAddress, TableOrientation) Remove the innermost levels from the group.
                            autoOutline(CellRangeAddress) Create outline groups based on formula references.
                            clearOutline() Remove all outline groups from the sheet.
                            hideDetail(CellRangeAddress) Collapse an outline group.
                            showDetail(CellRangeAddress) Open (uncollapse) an outline group.
                            showLevel(n, CellRangeAddress) Show outlined groups from levels one through n.
                        Table 37. Values defined by the com.sun.star.sheet.CellInsertMode enumeration.
                            Value Description
                            com.sun.star.sheet.CellInsertMode.NONE No cells are moved.
                            com.sun.star.sheet.CellInsertMode.DOWN Move cells down.
                            com.sun.star.sheet.CellInsertMode.RIGHT Move cells right.
                            com.sun.star.sheet.CellInsertMode.ROWS Move the entire row down.
                            com.sun.star.sheet.CellInsertMode.COLUMNS Move the entire column right.
                        Table 38. Methods defined by the com.sun.star.sheet.XDataPilotTables interface.
                            Fel vid uppdatering av texten för följande indata: =manipulera datapilot tables :). Felet var: org.freeplane.plugin.script.ExecuteScriptException: startup failed: Script1.groovy: 1: expecting EOF, found ':' @ line 1, column 29.    manipulera datapilot tables :)                                ^  1 error  at line 1
                            Method Description
                            createDataPilotDescriptor() Create a new data pilot descriptor.
                            insertNewByName(name, CellAddress, DataPilotDescriptor)  Add a new data pilot table to the collection that uses the provided CellAddress (see Table 3) as the top-left corner of the table.
                            removeByName(name) Delete a data pilot table from the collection.
                        Table 39. Values defined by the com.sun.star.sheet.DataPilotFieldOrientation enumeration.
                            Value Description
                            com.sun.star.sheet.DataPilotFieldOrientation.HIDDEN Do not use the field.
                            com.sun.star.sheet.DataPilotFieldOrientation.COLUMN Use the field as a column field.
                            com.sun.star.sheet.DataPilotFieldOrientation.ROW Use the field as a row field.
                            com.sun.star.sheet.DataPilotFieldOrientation.PAGE Use the field as a page field.
                            com.sun.star.sheet.DataPilotFieldOrientation.DATA Use the field as a data field.
                        filtrera datapilotfält :]
                        Table 40. Values defined by the com.sun.star.sheet.FilterOperator enumeration.
                            Value Description
                            com.sun.star.sheet.FilterOperator.EMPTY Select empty entries.
                            com.sun.star.sheet.FilterOperator.NOT_EMPTY Select nonempty entries.
                            com.sun.star.sheet.FilterOperator.EQUAL The entry’s value must equal the specified value.
                            com.sun.star.sheet.FilterOperator.NOT_EQUAL The entry’s value must not be equal to the specified value.
                            com.sun.star.sheet.FilterOperator.GREATER The entry’s value must be greater than the specified value.
                            com.sun.star.sheet.FilterOperator.GREATER_EQUAL The entry’s value must be greater than or equal to the specified value.
                            com.sun.star.sheet.FilterOperator.LESS The entry’s value must be less than the specified value.
                            com.sun.star.sheet.FilterOperator.LESS_EQUAL The entry’s value must be less than or equal to the specified value.
                            com.sun.star.sheet.FilterOperator.TOP_VALUES Select a specified number with the greatest values.
                            com.sun.star.sheet.FilterOperator.TOP_PERCENT Select a specified percentage with the greatest values.
                            com.sun.star.sheet.FilterOperator.BOTTOM_VALUES Select a specified number with the lowest values.
                            com.sun.star.sheet.FilterOperator.BOTTOM_PERCENT Select a specified percentage with the lowest values.
                        Table 41. Values defined by the com.sun.star.sheet.FilterConnection enumeration.
                            Value Description
                            com.sun.star.sheet.FilterConnection.AND Both conditions must be satisfied.
                            com.sun.star.sheet.FilterConnection.OR At least one of the conditions must be satisfied.
                        Table 42. Properties in the com.sun.star.sheet.TableFilterField structure.
                            Property Description
                            Connection Specify how the condition is connected to the previous condition as a FilterConnection (see Table 41).
                            Field Specify which field (column) is used for the condition as a Long Integer.
                            Operator Specify the condition type as a FilterOperator (see Table 40).
                            IsNumeric If True, the NumericValue property is used; otherwise the StringValue is used.
                            NumericValue Specify a numeric value for the condition as a Double.
                            StringValue Specify a String value for the condition.
                        Table 43. Properties defined by the com.sun.star.sheet.SheetFilterDescriptor service.
                            Property Description
                            IsCaseSensitive If True, string comparisons are case sensitive.
                            SkipDuplicates If True, duplicate entries are not included in the result.
                            UseRegularExpressions If True, string values in the TableFilterField structure are interpreted as regular expressions.
                            SaveOutputPosition If True (and CopyOutpuData is True), the OutputPosition is saved for future calls.
                            Orientation Specify if columns or rows are filtered using the TableOrientation enumeration (see Table 35).
                            ContainsHeader If True, the first row (or column) is assumed to be a header and is not filtered.
                            CopyOutputData If True, the filtered data is copied to the OutputPosition.
                            OutputPosition Specify where filtered data is copied as a CellAddress (see Table 3).
                            MaxFieldCount The maximum number of filter fields in the descriptor as a Long Integer.
                        Table 44. Methods defined by the com.sun.star.sheet.XDataPilotDescriptor interface.
                            Method Description
                            getTag() Get the data pilot table tag as a String.
                            setTag(String) Set the data pilot table tag.
                            getSourceRange() Return the CellRangeAddress (see Table 9) containing the data for the data pilot table.
                            setSourceRange(CellRangeAddress) Set the cell range containing the data for the data pilot table.
                            getFilterDescriptor() Get the SheetFilterDescriptor (see Table 43) that specifies which data from the source cell range is used for the data pilot table.
                            getDataPilotFields() Get the data pilot fields as an object that supports indexed access.
                            getColumnFields() Get the data pilot fields used as column fields as an object that supports indexed access.
                            getRowFields() Get the data pilot fields used as row fields as an object that supports indexed access.
                            getPageFields() Get the data pilot fields used as page fields as an object that supports indexed access.
                            getDataFields() Get the data pilot fields used as data fields as an object that supports indexed access.
                            getHiddenFields() Get the data pilot fields that are not used as column, row, page, or data fields.
                        sheet cursors
                        Table 45. Primary components supported by the com.sun.star.sheet.SheetCellCursor service.
                            Component Description
                            com.sun.star.table.CellCursor Methods to control the position of a cell cursor.
                            com.sun.star.table.CellRange Methods to access cells or subranges of a cell range (see Table 16).
                            com.sun.star.sheet.XSheetCellCursor Advanced methods to control the position of the cursor.
                            com.sun.star.sheet.SheetCellRange A rectangular range of cells in a spreadsheet document; this is an extension of the CellRange service for use in spreadsheet documents.
                            com.sun.star.sheet.XUsedAreaCursor Methods to find the used area in a sheet.
                        Table 46. Primary methods supported by the com.sun.star.sheet.SheetCellCursor service.
                            Interface Method Description
                            XCellCursor gotoStart() Move the cursor to the first filled cell at the beginning of a contiguous series of filled cells. This cell may be outside the cursor’s range.
                            XCellCursor gotoEnd() Move the cursor to the last filled cell at the end of a contiguous series of filled cells. This cell may be outside the cursor’s range.
                            XCellCursor gotoNext() Move the cursor to the next (right) unprotected cell.
                            XCellCursor gotoPrevious() Move the cursor to the previous (left) unprotected cell.
                            XCellCursor gotoOffset(nCol, nRow) Shift the cursor’s range relative to the current position. Negative numbers shift left and up; positive numbers shift right and down.
                            XCellRange getCellByPosition(left, top) Get a cell within the range.
                            XCellRange getCellRangeByPosition(left, Get a cell range within the range. top, right, bottom)
                            XCellRange getCellRangeByName(name) Get a cell range within the range based on its name. The string directly references cells using the standard formats—such as “B2:D5” or “$B$2”—or defined cell range names.
                            XSheetCellCursor collapseToCurrentRegion() Expand the range to contain all contiguous nonempty cells.
                            XSheetCellCursor collapseToCurrentArray() Expand the range to contain the current array formula.
                            XSheetCellCursor collapseToMergedArea() Expand the range to contain merged cells that intersect the range.
                            XSheetCellCursor expandToEntireColumns() Expand the range to contain all columns that intersect the range.
                            XSheetCellCursor expandToEntireRows() Expand the range to contain all rows that intersect the range.
                            XSheetCellCursor collapseToSize(nCols, nRows) Without changing the upper-left corner, set the cursor range size.
                            XSheetCellRange getSpreadsheet() Get the sheet object that contains the cell range.
                            XUsedAreaCursor gotoStartOfUsedArea() Set the cursor to the start of the used area.
                            XUsedAreaCursor gotoEndOfUsedArea() Set the cursor to the end of the used area.
                        calc documents::named ranges
                        Table 47. Constants defined by the com.sun.star.sheet.NamedRangeFlag constant group.
                            Numeric Value Description
                            1 com.sun.star.sheet.NamedRangeFlag.FILTER_CRITERIA The range contains filter criteria.
                            2 com.sun.star.sheet.NamedRangeFlag.PRINT_AREA The range can be used as a print range.
                            4 com.sun.star.sheet.NamedRangeFlag.COLUMN_HEADER The range can be used as column headers for printing.
                            8 com.sun.star.sheet.NamedRangeFlag.ROW_HEADER The range can be used as row headers for printing.
                        Table 48. Methods implemented by the com.sun.star.sheet.NamedRange service.
                            Method Description
                            getReferredCells() Get the CellRange referenced by named range.
                            getContent() The named range content is a string and can be a reference to a cell, cell range, or formula expression.
                            setContent(String) Set the content of the named range.
                            getReferencePosition() Get the CellAddress used as a base for relative references in the content.
                            setReferencePosition(CellAddress) Set the reference position.
                            getType() Get the type as a NamedRangeFlag constant (see Table 47).
                            setType(NamedRangeFlag) Set the type of the named range.
                        Table 49. Enumerated values defined by the com.sun.star.sheet.Border enumeration.
                            Value Description
                            com.sun.star.sheet.Border.TOP Select the top border.
                            com.sun.star.sheet.Border.BOTTOM Select the bottom border.
                            com.sun.star.sheet.Border.RIGHT Select the right border.
                            com.sun.star.sheet.Border.LEFT Select the left border.
                        controlling recalculation
                        Table 50. Methods defined by the com.sun.star.sheet.XCalculatable interface.
                            Method Description
                            calculate() Recalculate all cells with changed content.
                            calculateAll() Recalculate all cells.
                            isAutomaticCalculationEnabled() True if automatic calculation is enabled.
                            enableAutomaticCalculation(Boolean) Enable or disable automatic calculation.
                        målsökaren
                            seekGoal(CellAddress, CellAddress, String) :)
                        Table 51. Return values for different arguments to WahooFunc (assume cell E9 contains 2).
                            Function Return
                            “=WahooFunc()” I am in WahooFunc. No argument was passed.
                            “=WahooFunc(E9)” I am in WahooFunc. Scalar argument (2) is type Double.
                            “=WahooFunc(2)” I am in WahooFunc. Scalar argument (2) is type Double.
                            “=WahooFunc(A11:C15)” I am in WahooFunc. Argument is an array (1 To 5, 1 To 3).
                        Table 52. Methods supported by the current controller not already discussed.
                            Methods Description
                            getActiveSheet() Get the active spreadsheet.
                            setActiveSheet(XSpreadsheet) Cause the specified sheet to become active.
                            getIsWindowSplit() Return True if the view is split.
                            getSplitHorizontal() Long Integer horizontal split position (in pixels).
                            getSplitVertical() Long Integer vertical split position (in pixels).
                            getSplitColumn() Long Integer column before which the view is split.
                            getSplitRow() Long Integer row before which the view is split.
                            splitAtPosition(x, y) Split the view at the specified position. If x=0, the split is only horizontal. If y=0, the split is only vertical.
                            hasFrozenPanes() True if the view contains frozen panes.
                            freezeAtPosition(nCol, nRow) Freeze panes with the specified number of columns and rows.
                            getFirstVisibleColumn() Get the first visible column in the pane as a Long Integer.
                            setFirstVisibleColumn(Long) Set the first visible column in the pane.
                            getFirstVisibleRow() Get the first visible row in the pane as a Long Integer.
                            setFirstVisibleRow(Long) Set the first visible row in the pane.
                            getVisibleRange() Get the visible range in the pane as a CellRangeAddress.
                        Table 53. Properties supported by the current controller not already discussed.
                            Property Description
                            ShowFormulas If True, formulas are displayed instead of their results.
                            ShowZeroValues If True, zero values are visible.
                            IsValueHighlightingEnabled If True, strings, values, and formulas are displayed in different colors.
                            ShowNotes If True, a marker is shown for notes in cells.
                            HasVerticalScrollBar If True, a vertical scroll bar is used in the view.
                            HasHorizontalScrollBar If True, a horizontal scroll bar is used in the view.
                            HasSheetTabs If True, sheet tabs are used in the view.
                            IsOutlineSymbolsSet If True, outline symbols are displayed.
                            HasColumnRowHeaders If True, column and row headers are visible.
                            ShowGrid If True, cell grid lines are displayed.
                            GridColor Grid color as a Long Integer.
                            ShowHelpLines If True, help lines are displayed while moving drawing objects.
                            ShowAnchor If True, anchor symbols are displayed when drawing objects are selected.
                            ShowPageBreaks If True, page breaks are displayed.
                            SolidHandles If True, solid (colored) handles are displayed when drawing objects are selected.
                            ShowObjects If True, embedded objects are displayed.
                            ShowCharts If True, charts are displayed.
                            ShowDrawing If True, drawing objects are displayed.
                            HideSpellMarks If True, spelling marks are not displayed.
                            ZoomType Document zoom type as a com.sun.star.view.DocumentZoomType with the following values:
                                • OPTIMAL = 0 – Fit the current page content width (no margins).
                                • PAGE_WIDTH = 1 – Fit the page width at the current selection.
                                • ENTIRE_PAGE = 2 – Fit an entire page.
                                • BY_VALUE = 3 – The zoom is relative and set by ZoomValue.
                                • PAGE_WIDTH_EXACT = 4 – Fit the current width and fit exactly to page end.
                            ZoomValue Zoom value if the ZoomType is set to BY_VALUE .
                    Chapter 15 - Draw and Impress Documents, s375
                        Table 1. Methods supported by the com.sun.star.drawing.XDrawPages interface.
                            Method Description
                            insertNewByIndex(Long) Create and insert a new draw page at the specified index.
                            hasByName(String) Return True if the named page exists.
                            hasElements() Return True if any draw pages exist.
                            remove(DrawPage) Remove a specific draw page.
                            getCount() Return the number of contained objects as a Long Integer.
                            getByIndex(Long) Get the specified draw page.
                            getByName(String) Get the specified draw page.
                            duplicate(DrawPage) Duplicate the DrawPage and return the new DrawPage.
                            hasElements() Return True if there are draw pages to return.
                        Table 2. Properties defined by the com.sun.star.drawing.GenericDrawPage service.
                            Property Description
                            BorderBottom Bottom border in 1/100 mm, represented as a Long Integer.
                            BorderLeft Left border in 1/100 mm, represented as a Long Integer.
                            BorderRight Right border in 1/100 mm, represented as a Long Integer.
                            BorderTop Top border in 1/100 mm, represented as a Long Integer.
                            Height Height in 1/100 mm, represented as a Long Integer.
                            Width Width in 1/100 mm, represented as a Long Integer.
                            Number Draw page number as a Short Integer. This read-only value labels the first page 1.
                            Orientation Page orientation as a com.sun.star.view.PaperOrientation enumeration. Two values are supported—PORTRAIT and LANDSCAPE.
                            UserDefinedAttributes User-defined XML attributes.
                            IsBackgroundDark True if the averaged background fill color’s luminance is below a specified threshold value.
                        shapes
                        Table 3. Shape types supported by OOo.
                            ShapeType Description
                            ClosedBezierShape A series of Bezier shapes that are closed.
                            ConnectorShape Used to connect shapes or glue points.
                            ControlShape A shape that displays a control such as a button.
                            EllipseShape Draw a circle, an ellipse, or an arc.
                            GraphicObjectShape Display a graphic object such as a bitmap image. There are separate types for presentation documents and drawing documents.
                            GroupShape Represent multiple shapes as a single shape.
                            LineShape A single line.
                            MeasureShape A shape used for measuring in a diagram.
                            OLE2Shape Display an OLE object in a presentation document. There are separate types for presentation documents and drawing documents.
                            OpenBezierShape A series of Bezier lines.
                            PageShape Display a preview of another page. There are separate types for presentation documents and drawing documents.
                            PolyLineShape A series of connected straight lines.
                            PolyPolygonBezierShape A polygon using Bezier curves.
                            PolyPolygonShape A series of straight lines with the first and last points connected.
                            RectangleShape Draw rectangles.
                            TextShape Box designed to hold text.
                            PluginShape Represent a media type that is not directly supported.
                            TitleTextShape A TextShape for titles in a presentation document.
                            SubtitleShape A TextShape for subtitles in a presentation document.
                            OutlinerShape A TextShape for outlines in a presentation document.
                            ChartShape Chart shape in a presentation document.
                            NotesShape A TextShape for notes in a presentation document.
                            HandoutShape A drawing document PageShape for handouts in a presentation document.
                        Table 4. Methods supported by Shape objects.
                            Method Description
                            getPosition() Get the shape’s current position in 1/100 mm.
                            setPosition(Point) Set the shape’s current position in 1/100 mm.
                            getSize() Get the shape’s current size in 1/100 mm.
                            setSize(Size) Set the shape’s current size in 1/100 mm.
                            getGluePoints() Get an object that provides indexed access to a set of glue points used internally by the object. Each glue point is a com.sun.star.drawing.GluePoint2 structure (see Table 16).
                            getShapeType() String representing the shape’s type.
                        Table 5. Properties defined by the com.sun.star.drawing.Shape service.
                            Property Description
                            ZOrder Long Integer representing the ZOrder of this shape. This controls the drawing order of objects, effectively moving an object forward or backward.
                            LayerID Short Integer identifying the layer that contains the shape.
                            LayerName Name of the layer that contains the shape.
                            Printable If True, the shape is included in printed output.
                            MoveProtect If True, the shape cannot be moved interactively by the user.
                            Name Shape name as a String.
                            SizeProtect If True, the user may not change the shape’s size.
                            Style Shape’s style as a com.sun.star.style.XStyle object.
                            Transformation Transformation matrix of type com.sun.star.drawing.HomogenMatrix3 that can contain translation, rotation, shearing, and scaling.
                        Table 6. Which shapes support which service.
                            o
                        drawing text service
                        Table 7. Properties defined by the com.sun.star.drawing.TextProperties service.
                            Property Description
                            IsNumbering If True, numbering is ON for the text in this shape.
                            NumberingRules Describes the numbering levels as a sequence of com.sun.star.style.NumberingRule.
                            TextAutoGrowHeight If True, the shape height changes automatically when text is added or removed.
                            TextAutoGrowWidth If True, the shape width changes automatically when text is added or removed.
                            TextContourFrame If True, the text is aligned with the left edge of the shape.
                            TextFitToSize Enumerated value of type com.sun.star.drawing.TextFitToSizeType:
                                • NONE – The text size is defined by the font properties.
                                • PROPORTIONAL – Scale the text if the shape is scaled.
                                • ALLLINES – Like PROPORTIONAL, but the width of each row is also scaled.
                                • RESIZEATTR – If the shape is scaled, scale the font attributes.
                            TextHorizontalAdjust Enumerated value of type com.sun.star.drawing.TextHorizontalAdjust:
                                • LEFT – The left edge of the text is adjusted to the left edge of the shape.
                                • CENTER – The text is centered inside the shape.
                                • RIGHT – The right edge of the text is adjusted to the right edge of the shape.
                                • BLOCK – The text extends from the left to the right edge of the shape.
                            TextVerticalAdjust Enumerated value of type com.sun.star.drawing.TextVerticalAdjust:
                                • TOP – The top edge of the text is adjusted to the top edge of the shape.
                                • CENTER – The text is centered inside the shape.
                                • BOTTOM – The bottom edge of the text is adjusted to the bottom edge of the shape.
                                • BLOCK – The text extends from the top to the bottom edge of the shape.
                            TextLeftDistance Distance from the left edge of the shape to the text as a Long Integer.
                            TextRightDistance Distance from the right edge of the shape to the text as a Long Integer.
                            TextUpperDistance Distance from the upper edge of the shape to the text as a Long Integer.
                            TextLowerDistance Distance from the lower edge of the shape to the text as a Long Integer.
                            TextMaximumFrameHeight Limit a shape’s height as it grows automatically as you enter text.
                            TextMaximumFrameWidth Limit a shape’s width as it grows automatically as you enter text.
                            TextMinimumFrameHeight Limit a shape’s minimum height as it grows automatically as you enter text.
                            TextMinimumFrameWidth Limit a shape’s minimum width as it grows automatically as you enter text.
                            TextAnimationAmount Number of pixels the text is moved in each animation step.
                            TextAnimationCount Number of times the text animation is repeated.
                            TextAnimationDelay Delay, in thousandths of a second, between each animation step.
                            TextAnimationDirection Enumerated value of type com.sun.star.drawing.TextAnimationDirection:
                                LEFT, RIGHT, UP, and DOWN.
                            TextAnimationKind Enumerated value of type com.sun.star.drawing.TextAnimationKind:
                                • NONE – No animation.
                                • BLINK – Continuously switch the text between visible and invisible.
                                • SCROLL – Scroll the text.
                                • ALTERNATE – Scroll the text from one side to the other and back.
                                • SLIDE – Scroll the text from one side to the final position and stop.
                            TextAnimationStartInside If True, the text is visible at the start of the animation.
                            TextAnimationStopInside If True, the text is visible at the end of the animation.
                            TextWritingMode Enumerated value of type com.sun.star.text.TextWritingMode:
                                • LR_TB – Text is written left to right and top to bottom.
                                • RL_TB – Text is written right to left and top to bottom.
                                • TB_RL – Text is written top to bottom and lines are placed right to left.
                        drawing line properties
                        Table 8. Properties defined by the com.sun.star.drawing.LineProperties service.
                            Property Description
                            LineStyle Enumerated value of type com.sun.star.drawing.LineStyle: NONE (the line is hidden),
                                SOLID, and DASH.
                            LineDash Enumerated value of type com.sun.star.drawing.LineDash that defines how dashed lines are drawn.
                                • Style – Enumerated value of type com.sun.star.drawing.DashStyle: RECT, ROUND, RECTRELATIVE, and ROUNDRELATIVE.
                                • Dots – Number of dots in this LineDash as a Long Integer.
                                • DotLen – Length of a dot as a Long Integer.
                                • Dashes – Number of dashes as a Short Integer.
                                • DashLen – Length of a single dash as a Long Integer.
                                • Distance – Distance between the dots as a Long Integer.
                            LineColor Line color as a Long Integer.
                            LineTransparence Line transparency percentage as a Short Integer.
                            LineWidth Line width in 1/100 mm as a Long Integer.
                            LineJoint Enumerated value of type com.sun.star.drawing.LineJoint:
                                • NONE – The joint between lines is not connected.
                                • MIDDLE – The middle value between joints is used.
                                • BEVEL – The edges are joined by lines.
                                • MITER – Lines join at intersections.
                                • ROUND – Lines are joined with an arc.
                            LineStartName Name of the line start point’s PolyPolygonBezierCoords.
                            LineStart Line start in the form of a PolyPolygonBezierCoords .
                            LineEnd Line end in the form of a PolyPolygonBezierCoords.
                            LineStartCenter If True, the line starts from the center of the polygon.
                            LineStartWidth Width of the line start polygon.
                            LineEndCenter If True, the line ends in the center of the polygon.
                            LineEndWidth Width of the line end polygon.
                        Table 9. Properties defined by the com.sun.star.drawing.FillProperties service.
                            Property Description
                            FillStyle Enumerated value of type com.sun.star.drawing.FillStyle: NONE, SOLID, GRADIENT, HATCH, and BITMAP.
                            FillColor Color to use if the FillStyle is SOLID.
                            FillTransparence Transparency percentage if the FillStyle is SOLID.
                            FillTransparenceGradientName Name of the gradient style to use; empty is okay.
                            FillTransparenceGradient Defines the gradient with a com.sun.star.awt.Gradient structure:
                                • Style – Enumerated value of type com.sun.star.awt.GradientStyle: LINEAR, AXIAL, RADIAL, ELLIPTICAL, SQUARE, and RECT.
                                • StartColor – Color at the start of the gradient.
                                • EndColor – Color at the end of the gradient.
                                • Angle – Angle of the gradient in 1/10 degree.
                                • Border – Percent of the total width, where just the start color is used.
                                • XOffset – X-coordinate, where the gradient begins.
                                • YOffset – Y-coordinate, where the gradient begins.
                                • StartIntensity – Intensity at the start of the gradient.
                                • EndIntensity – Intensity at the end of the gradient.
                                • StepCount – Number of times the color changes.
                            FillGradientName If the FillStyle is GRADIENT, this is the name of the fill gradient style used.
                            FillGradient If the FillStyle is GRADIENT, this describes the gradient used.
                            FillHatchName If the FillStyle is GRADIENT, this is the name of the fill hatch style used.
                            FillHatch If the FillStyle is HATCH, this describes the hatch used.
                            FillBitmapName If the FillStyle is BITMAP, this is the name of the fill bitmap style used.
                            FillBitmap If the FillStyle is BITMAP, this is the bitmap used.
                            FillBitmapURL If the FillStyle is BITMAP, this is a URL to the bitmap used.
                            FillBitmapOffsetX The horizontal offset where the tile starts.
                            FillBitmapOffsetY The vertical offset where the tile starts. It is given as a percentage in relation to the width of the bitmap.
                            FillBitmapPositionOffsetX Every second line of tiles is moved the given percentage of the witdh of the bitmap.
                            FillBitmapPositionOffsetY Every second row of tiles is moved the given percentage of the width of the bitmap.
                            FillBitmapRectanglePoint The RectanglePoint specifies the position inside the bitmap to use as the top-left position for rendering.
                            FillBitmapLogicalSize Specifies if the size is given in percentage or as an absolute value.
                            FillBitmapSizeX The width of the tile for filling.
                            FillBitmapSizeY The height of the tile for filling.
                            FillBitmapMode This enum selects how an area is filled with a single bitmap.
                            FillBackground If True, the transparent background of a hatch-filled area is drawn in the current background color.
                        Table 10. Properties defined by the com.sun.star.drawing.ShadowProperties service.
                            Property Description
                            Shadow If True, the shape has a shadow.
                            ShadowColor Color of the shadow as a Long Integer.
                            ShadowTransparence Shadow transparency as a percentage.
                            ShadowXDistance Horizontal distance of the left edge of the shape to the shadow.
                            ShadowYDistance Vertical distance of the top edge of the shape to the shadow.
                        Table 11. Properties in the com.sun.star.drawing.PolyPolygonDescriptor service.
                            Property Description
                            PolygonKind This read-only property identifies the polygon type (see Table 12).
                            PolyPolygon Reference points for this polygon. This is an array of arrays. Each contained array is an array of com.sun.star.awt.Point structures. These points are used to draw the polygon and may have been transformed by a rotation or other transformation.
                            Geometry These are the PolyPolygon points with no transformations.
                        Table 12. Values defined by the com.sun.star.drawing.PolygonKind enumeration.
                            Value Description
                            LINE Identifies a LineShape.
                            POLY Identifies a PolyPolygonShape.
                            PLIN Identifies a PolyLineShape.
                            PATHLINE Identifies an OpenBezierShape.
                            PATHFILL Identifies a ClosedBezierShape.
                            FREELINE Identifies an OpenFreeHandShape.
                            FREEFILL Identifies a ClosedFreeHandShape.
                            PATHPOLY Identifies a PolyPolygonPathShape.
                            PATHPLIN Identifies a PolyLinePathShape.
                        Table 13. Values defined by the com.sun.star.drawing.CircleKind enumeration.
                            Value Description
                            com.sun.star.drawing.CircleKind.FULL A full ellipse.
                            com.sun.star.drawing.CircleKind.SECTION An ellipse with a cut connected by a line.
                            com.sun.star.drawing.CircleKind.CUT An ellipse with a cut connected by two lines.
                            com.sun.star.drawing.CircleKind.ARC An ellipse with an open cut.
                        Table 14. Properties in the com.sun.star.drawing.PolyPolygonBezierDescriptor service.
                            Property Description
                            PolygonKind This read-only property identifies the polygon type (see Table 12).
                            PolyPolygonBezier Reference points for this Bezier curve. This is a PolyPolygonBezierCoords structure. The structure contains an array of points and an array of flags to categorize each point as to its function in the curve.
                            Geometry This is the PolyPolygonBezierCoords with no transformations.
                        Table 15. Values in the com.sun.star.drawing.PolygonFlags enumeration.
                            Value Description
                            NORMAL The curve travels through normal points.
                            SMOOTH The point is smooth through the point.
                            CONTROL Influence the curve.
                            SYMMETRIC The point is symmetric through the point.
                        Table 16. Properties in the com.sun.star.drawing.GluePoint2 structure.
                            Property Description
                            Position Glue-point position as a point structure.
                            IsRelative If True, Position is given in 1/100 percent.
                            PositionAlignment com.sun.star.drawing.Alignment enumerated value that specifies how the point is moved if the shape is resized. Valid values include: TOP_LEFT, TOP, TOP_RIGHT, LEFT, CENTER, RIGHT, BOTTOM_LEFT, BOTTOM, and BOTTOM_RIGHT.
                            Escape com.sun.star.drawing.EscapeDirection enumerated value that specifies the escape direction for a glue point. Valid values include: SMART, LEFT, RIGHT, UP, DOWN, HORIZONTAL, and VERTICAL.
                            IsUserDefined If False, this is a default glue point.
                        Table 17. Properties in the com.sun.star.drawing.ConnectorShape service.
                            Property Description
                            StartShape Start shape, or empty if the start point is not connected to a shape.
                            StartGluePointIndex Index of the glue point in the start shape.
                            StartPosition Start point position in 1/100 mm. You can set the position only if the start point is not connected, but you can always read the point.
                            EndShape End shape, or empty if the start point is not connected to a shape.
                            EndPosition End point position in 1/100 mm. You can set the position only if the end point is not connected, but you can always read the point.
                            EndGluePointIndex Index of the glue point in the end shape.
                            EdgeLine1Delta Distance of line 1.
                            EdgeLine2Delta Distance of line 2.
                            EdgeLine3Delta Distance of line 3.
                            EdgeKind Type of connector (see Table 18).
                        Table 18. Properties in the com.sun.star.drawing.ConnectorType enumeraiton.
                            Value Description
                            STANDARD The ConnectorShape is drawn with three lines, with the middle line perpendicular to the other two.
                            CURVE The ConnectorShape is drawn as a curve.
                            LINE The ConnectorShape is drawn as one straight line.
                            LINES The ConnectorShape is drawn with three lines.
                        Table 19. Some methods supported by the com.sun.star.form.Forms service. :)
                            Method Description
                            createEnumeration() Create an enumeration of the forms.
                            getByIndex(Long) Get a form by index.
                            getByName(String) Get a form by name.
                            getCount() Get the number of forms.
                            hasByName(String) Return True if the form with the specified name exists.
                            hasElements() Return True if the page contains at least one form.
                            insertByIndex(Long, Form) Insert a form by index.
                            insertByName(String, Form) Insert a form by name.
                            removeByIndex(Long) Remove a form by index.
                            removeByName(String) Remove the named form.
                            replaceByIndex(Long, Form) Replace a form by index.
                            replaceByName(String, Form) Replace a form by name.
                        Table 20. Control components that can be added to forms.
                            Component Description
                            CheckBox Check box control.
                            ComboBox Provides text input or selection from a list of text values.
                            CommandButton A clickable button.
                            CurrencyField An edit field with a currency value.
                            DatabaseCheckBox A data-aware check box that can be bound to a database field.
                            DatabaseComboBox A data-aware combo box that can be bound to a database field.
                            DatabaseCurrencyField A data-aware edit field with a currency value that can be bound to a database field.
                            DatabaseDateField A data-aware date field that can be bound to a database field.
                            DatabaseFormattedField A data-aware formatted field that can be bound to a database field.
                            DatabaseImageControl A field for displaying images stored in a database.
                            DatabaseListBox A data-aware list box that can be bound to a database field.
                            DatabaseNumericField A data-aware numeric field that can be bound to a database field.
                            DatabasePatternField A data-aware pattern field that can be bound to a database field.
                            DatabaseRadioButton A data-aware radio button that can be bound to a database field.
                            DatabaseTextField A data-aware text field that can be bound to a database field.
                            DatabaseTimeField A data-aware time field that can be bound to a database field.
                            DateField An edit field with a date value.
                            FileControl An edit field for a file name.
                            FixedText Display text that cannot be edited by the user.
                            FormattedField An edit field that contains formatted text.
                            GridControl Display data in a table-like way.
                            GroupBox A control that can visually group controls.
                            HiddenControl A control that is hidden.
                            ImageButton A clickable button which is represented by an image.
                            ListBox A control with multiple values from which to choose.
                            NumericField An edit field with a numeric value.
                            PatternField An edit field with text that matches a pattern.
                            RadioButton A radio button.
                            TextField A text-edit field that supports single-line and multi-line data.
                            TimeField An edit field with a time value.
                        presentations
                        Table 21. Properties defined by the the com.sun.star.presentation.Presentation service.
                            Property Description
                            AllowAnimations If True, animations are enabled.
                            CustomShow Name of a customized show to use for this presentation; an empty value is allowed.
                            FirstPage Name of the first page in the presentation; an empty value is allowed.
                            IsAlwaysOnTop If True, the presentation window is always the top window.
                            IsAutomatic If True, page changes happen automatically.
                            IsEndless If True, the presentation repeats endlessly.
                            IsFullScreen If True, the presentation runs in full-screen mode.
                            IsLivePresentation If True, the presentation runs in live mode.
                            IsMouseVisible If True, the mouse is visible during the presentation.
                            Pause Long Integer duration that the black screen is displayed after the presentation is finished.
                            StartWithNavigator If True, the Navigator opens at the start of the presentation.
                            UsePen If True, a pen appears during the presentation so that you can draw on the screen.
                        Table 22. Some methods supported by the XCustomPresentationSupplier interface.
                            Method Description
                            createInstance() Create a custom presentation.
                            getByName(String) Get a custom presentation by name.
                            getElementNames() Array of custom presentation names.
                            hasByName(String) Return True if the custom presentation with the specified name exists.
                            hasElements() Return True if the page contains at least one custom presentation.
                            insertByName(String, CustomPresentation) Insert a custom presentation by name.
                            removeByName(String) Remove the named custom presentation.
                            replaceByName(String, CustomPresentation) Replace a custom presentation by name.
                        presentation draw pages
                        Table 23. Properties defined by the com.sun.star.presentation.DrawPage service.
                            Property Description
                            Change Long Integer that specifies what causes a page change.
                                • 0 – A mouse-click triggers the next animation or page change.
                                • 1 – The page change is automatic.
                                • 2 – Object effects run automatically, but the user must click on the page to change it.
                            Duration Long Integer time in seconds the page is shown if the Change property is set to 1.
                            Effect Effect used to fade in or out (see Table 24).
                            Layout Index of the presentation layout page if this is not zero.
                            Speed Speed of the fade-in effect using the com.sun.star.presentation.AnimationSpeed enumeration:
                                SLOW, MEDIUM, or FAST.
                        Table 24. Values defined by the com.sun.star.presentation.FadeEffect enumeration.
                            o
                        presentation shapes
                        Table 25. Properties defined by the com.sun.star.presentation.Shape service.
                            Property Description
                            Bookmark Generic URL string used if the OnClick property requires a URL.
                            DimColor Color for dimming this shape if DimPrevious is True and DimHide is False.
                            DimHide If True and DimPrevious is True, the shape is hidden.
                            DimPrevious If True, the shape is dimmed after executing its animation effect.
                            Effect Animation effect for this shape (see Table 26).
                            IsEmptyPresentationObject True if this is the default presentation shape and it is empty.
                            IsPresentationObject True if this is a presentation object.
                            OnClick Specify an action if the user clicks the shape (see Table 27).
                            PlayFull If True, the sound of this shape is played in full.
                            PresentationOrder Long Integer representing the order in which the shapes are animated.
                            Sound URL string for a sound file that is played while the shape’s animation is running.
                            SoundOn If True, sound is played during the animation.
                            Speed Speed of the fade-in effect using the com.sun.star.presentation.AnimationSpeed enumeration: SLOW, MEDIUM, or FAST.
                            TextEffect Animation effect for the text inside this shape (see Table 26).
                            Verb Long Integer “ole2” verb if the ClickAction is VERB.
                        Table 26. Values defined by the com.sun.star.presentation.AnimationEffect enumeration.
                            o
                            o
                        Table 27. Values defined by the com.sun.star.presentation.ClickAction enumeration.
                            Property Description
                            NONE No action is performed.
                            PREVPAGE Jump to the previous page.
                            NEXTPAGE Jump to the next page.
                            FIRSTPAGE Jump to the first page.
                            LASTPAGE Jump to the last page.
                            BOOKMARK Jump to a bookmark specified by the Bookmark property in Table 25.
                            DOCUMENT Jump to another document specified by the Bookmark property in Table 25.
                            INVISIBLE The object becomes invisible.
                            SOUND Play a sound specified by the Bookmark property in Table 25.
                            VERB An OLE verb is performed as specified by the Verb property in Table 25. An OLE object supports actions called verbs. An OLE object that displays a video clip might support the verb “play,” for example.
                            VANISH The object vanishes.
                            PROGRAM Execute another program specified by the Bookmark property in Table 25.
                            MACRO Execute a Star Basic macro specified by the Bookmark property in Table 25.
                            STOPPRESENTATION Stop the presentation.
                    Chapter 16 - Library management, s407 :)
                        o
                            This chapter discusses how and where macro libraries are stored, along with methods you can use to manipulate them. 
                            This chapter also covers the subtleties of the macro organizer as well as using the UNO API to manipulate libraries and modules. :]
                        om makrobibliotek
                            This chapter assumes a basic understanding of library containers, libraries, and modules. If the following summary is not familiar, review the material presented in Chapter 1, “Getting Started.”
                            o
                                 A library container contains zero or more libraries.
                                 Each library contains zero or more modules and dialogs.
                                 Each module contains zero or more macros.
                                 The application is a library container named “soffice.” Libraries stored in the application are globally available to all macros.
                                 Every document is a library container.
                             The library named Standard is special; it always exists and cannot be overwritten. I recommend against using the Standard library.
                             Always give meaningful names to the libraries and modules that you create. For example, Library1 and Module4 are not meaningful names, although AXONInvoiceForm1 might be more descriptive and helpful.
                        2 sätten att ladda ett bibliotek
                            ladda manuellt med peka och klicka i makroutforskaren :)
                            o
                                Listing 1. Use GlobalScope to load application-level libraries.
                                GlobalScope.BasicLibraries.loadLibrary("Pitonyak")
                        Table 1. Methods supported by library container objects.
                            Method Description
                            createLibrary(Name) Create a new library with the given name.
                            createLibraryLink(Name, Url, ReadOnly) Create a link to an “external” library. The Name and URL are both strings. If the ReadOnly flag is True, the library cannot be modified.
                            removeLibrary(Name) Remove the named library. If the library is a link, only the link is removed, not the actual library.
                            isLibraryLoaded(Name) True if the library is loaded, False otherwise.
                            loadLibrary(Name) Load a library if it is not already loaded.
                            isLibraryLink(Name) True if the library is a link to another library.
                            getLibraryLinkURL(Name) Return the URL of a linked library. An error occurs if the library is not a link.
                            isLibraryReadOnly(Name) Return True if the library is read-only.
                            setLibraryReadOnly(Name, ReadOnly) Set the named library to read-only if ReadOnly is True.
                            renameLibrary(Name, NewName) Rename a library. If the library is linked, only the link is renamed.
                            changeLibraryPassword(Name, Pass, NewPass)  Change a library’s password.
                            getByName(Name) Get the named library.
                            getElementNames() Get an array of library names.
                            hasByName(Name) True, if the named library exists.
                            hasElements() True, if at least one library exists.
                            isLibraryPasswordProtected(Name) True, if the library is password protected.
                            isLibraryPasswordVerified(Name) True, if the password has already been used to unlock a library.
                            verifyLibraryPassword(Name, Pass) Unlock a password-protected library.
                            not:
                                The GlobalScope variable is not available outside of OOo Basic. It is, however, possible to create access the global Basic libraries. and use the undocumented UNO service com.sun.star.script.ApplicationScriptLibraryContainer to
                        Table 2. Methods supported by library objects. :)
                            Method Description
                            getByName(Name) Get the named module as a String.
                            getElementNames() Get an array of module names.
                            hasByName(Name) True, if the library contains the named module.
                            hasElements() True, if the library contains at least one module.
                            insertByName(Name, Module) Insert the named module into the library.
                            removeByName(Name) Remove the named module.
                            replaceByName(Name, Module) Replace the named module.
                        o
                            Most of the icons in the Controls toolbar are used to add controls to your dialog. If you click any of the control icons in the Controls toolbar, the cursor changes from an arrow-shaped selection cursor to a cross-shaped cursor. You can click the Select icon to change the cursor back to the selection shape rather than insert a new control.
                            o
                            o
                                button (=knapp helt enkelt) :D
                                image control
                                check box (=förbocknings/kryssruta)
                                option button (=radioknapp) :)
                                label field
                                text box
                                list box
                                combo box
                                    Fel vid uppdatering av texten för följande indata: =välja ett alternativ från en fördefinierad lista :). Felet var: org.freeplane.plugin.script.ExecuteScriptException: startup failed: Script1.groovy: 1: expecting EOF, found ':' @ line 1, column 50.    v från en fördefinierad lista :)                                  ^  1 error  at line 1
                                scroll bar
                                vertical scrollbar
                                group box
                                progress bar
                                horizontal line
                                vertical line
                                date field
                                time field :)
                                numeric field
                                currency field
                                formatted field
                                pattern field
                                file selection
                                select (=pilen)
                                properties
                                    Fel vid uppdatering av texten för följande indata: =redigera en dialogrutas egenskaper :D (s415). Felet var: org.freeplane.plugin.script.ExecuteScriptException: No such property: en for class: Script1 at line -1
                                    s415 om controls (=??????) :\
                                    händelser (events) som man kan ställa in att dialogrutan ska reagera på finns i eventsfliken i Properties-rutan :D
                                test mode
                            komma åt ett dialogrutebibliotek :)
                                access the dialog libraries stored in the current document by using DialogLibraries, and the libraries stored in the application by using GlobalScope.DialogLibraries. Use the following sequence of steps to load, create, and execute a dialog:
                                1. Use the loadLibrary() method to load the library containing the dialog. Although you can skip this step if the library is already loaded, it is probably not prudent to assume this.
                                2. Use the getByName() method to retrieve the library from DialogLibraries.
                                3. Use the method getByName() to retrieve the dialog from the retrieved library.
                                4. Create the dialog using CreateUnoDialog().
                                5. Execute the dialog.
                            o
                                You can use an event handler to close the Hello World dialog. Use the Properties dialog to change the Button type from OK to default; the dialog will no longer close on its own. You might want to do this, for example, if you want to validate input before closing a dialog. Now, write the event handler that will close the dialog (see Listing 3).
                                Listing 3. ExitHelloDlg is in the Hello module in this chapter’s source code files as SC17.sxw.
                                Sub ExitHelloDlg
                                oHelloDlg.endExecute()
                                End Sub
                            !!! ( :)
                                To assign an event handler, you must click the Assign button and not the OK button. The only purpose for the OK button is to close the Assign Macro dialog. It is a common and frustrating mistake to select an event handler for an event, and then click OK rather than Assign.
                            om 'the Model-View-Control-paradigm' = s418 :]
                            o
                                Dialog and control similarities
                                In some respects, a dialog is also a control. Dialogs support the MVC paradigm and share many similarities with controls. For example, dialogs support the UnoControl service, which is common to all controls. UNO controls support the XComponent interface, which is also supported by numerous other objects in OpenOffice.org (see Table 1).
                                Table 1. Methods defined by the com.sun.star.lang.XComponent interface.
                                    Method Description
                                    dispose() The object’s owner calls this method to free all the object’s resources. You won’t usually call this method.
                                    addEventListener(XEventListener) Add an event listener to the object.
                                    removeEventListener(XEventListener) Remove an event listener from the object’s listener list.
                                The XControl interface identifies an object as a control. All objects that support the UnoControl service also support the XControl interface. For Basic programmers, the most interesting method is probably getModel() because it returns the control’s data model (see Table 2).
                                Table 2. Methods defined by the com.sun.star.awt.XControl interface.
                                    Method Description
                                    setContext(XInterface) Set the control’s context.
                                    getContext() Get the control’s context.
                                    createPeer(XToolkit, XWindowPeer) Create a child window. If the peer is null, the desktop is the parent. This method is used to create a window to display a dialog that was created in a macro rather than in the IDE (see Listing 23).
                                    getPeer() Return the previously created or set peer XWindowPeer.
                                    setModel(XControlModel) Set the model’s control; return True if successful.
                                    getModel() Return the control’s XModel.
                                    getView() Return the control’s XView.
                                    setDesignMode(Boolean) Turn the design mode on and off.
                                    isDesignMode() Return True if the control is in design mode; otherwise return False.
                                    isTransparent() Return True if the control is transparent; otherwise return False.
                                Table 3. Constants defined by the com.sun.star.awt.PosSize constant group.
                                    Constant Name Description
                                    1 X Flag the X coordinate.
                                    2 Y Flag the Y coordinate.
                                    4 WIDTH Flag the width.
                                    8 HEIGHT Flag the height.
                                    3 POS Flag the X and Y coordinates.
                                    12 SIZE Flag the width and height.
                                    15 POSSIZE Flag everything.
                                Table 4. Methods defined by the com.sun.star.awt.XWindow interface.
                                    Method Description
                                    setPosSize (x, y, width, height, PosSize) Set the window’s outer bounds (see Table 3).
                                    getPosSize() Return the window’s outer bounds as a rectangle.
                                    setVisible(Boolean) Show or hide the window.
                                    setEnable(Boolean) Enable or disable the window.
                                    setFocus() Focus this window.
                                    addWindowListener(listener) Add the XWindowListener.
                                    removeWindowListener(listener) Remove the XWindowListener from the listener list.
                                    addFocusListener(listener) Add the XFocusListener.
                                    removeFocusListener(listener) Remove the XFocusListener from the listener list.
                                    addKeyListener(listener) Add the XKeyListener.
                                    removeKeyListener(listener) Remove the XKeyListener from the listener list.
                                    addMouseListener(listener) Add the XMouseListener.
                                    removeMouseListener(listener) Remove the XMouseListener from the listener list.
                                    addMouseMotionListener(listener) Add the XMouseMotionListener.
                                    removeMouseMotionListener(listener) Remove the XMouseMotionListener from the listener list.
                                    addPaintListener(listener) Add the XPaintListener.
                                    removePaintListener(listener) Remove the XPaintListener from the listener list.
                                Table 5. Methods defined by the com.sun.star.awt.XView interface.
                                    Method Description
                                    setGraphics(XGraphics) Set the output device.
                                    getGraphics() Return the XGraphics output device.
                                    getSize() Returns the size of the object in device units.
                                    draw(x, y) Draws the object at the specified position.
                                    setZoom(x, y) Set the zoom factor of the control’s contents.
                                Table 6. Methods defined by the com.sun.star.awt.XDialog interface.
                                    Method Description
                                    setTitle() Set the dialog’s title.
                                    getTitle() Get the dialog’s title.
                                    execute() Display the dialog.
                                    endExecute() Hide the dialog and cause the execute() method to return.
                                Table 7. Methods defined by the com.sun.star.awt.XTopWindow interface.
                                    Method Description
                                    addTopWindowListener(XTopWindowListener) Add a listener for this window.
                                    removeTopWindowListener(XTopWindowListener) Remove a listener so that it no longer receives events from this window.
                                    toFront() Move this window in front of all other windows.
                                    toBack() Move this window behind all other windows.
                                    setMenuBar(XMenuBar) Set a menu bar for this window.
                                Table 8. Methods defined by the com.sun.star.awt.XControlContainer interface.
                                    Method Description
                                    setStatusText(String) Set the text in the container’s status bar.
                                    getControls() Return all controls as an array of type XControl.
                                    getControl(name) Return the XControl with the specified name.
                                    addControl(name, XControl) Add the XControl to the container.
                                    removeControl(XControl) Remove the XControl from the container.
                                Table 9. Properties defined by the com.sun.star.awt.UnoControlDialogModel service.
                                    Property Description
                                    BackgroundColor Dialog’s background color as a Long Integer.
                                    Closeable If True, the dialog is closeable.
                                    Enabled If True, the dialog is enabled.
                                    FontDescriptor Structure that defines and describes the font for the text in the dialog’s caption bar.
                                    FontEmphasisMark Constant that defines the type/position of the emphasis mark for text in dialog’s caption bar.
                                    FontRelief Constant that specifies if the dialog’s caption bar contains embossed or engraved text.
                                    HelpText Dialog’s help text as a String.
                                    HelpURL Dialog’s help URL as a String.
                                    Moveable If True, the dialog is moveable.
                                    Sizeable If True, the dialog is sizeable.
                                    TextColor Dialog’s text color as a Long Integer.
                                    TextLineColor Dialog’s text line color as a Long Integer.
                                    Title Text string displayed in the dialog’s caption bar.
                                Table 10. Properties in the com.sun.star.awt.UnoControlDialogElement service.
                                    Property Description
                                    Height Control’s height.
                                    Name Control’s name.
                                    PositionX Control’s horizontal position.
                                    PositionY Control’s vertical position.
                                    Step Control’s step.
                                    TabIndex Control’s tab index.
                                    Tag Control’s tag.
                                    Width Control’s width.
                                :)
                                    It is possible to create controls and dialogs by using a macro rather than designing them in the Basic IDE. The dialog’s model supports the createInstance() method defined by the com.sun.star.lang.XMultiServiceFactory interface. When a macro creates a control to be inserted into a dialog, that control should be created by the dialog’s model. A control that is created from the global service manager will not have the properties shown in Table 10. Creating controls by using a macro is an advanced topic that is discussed later in this chapter. The macro in Listing 4 shows the objects that a dialog model can create (see Figure 6).
                                    Listing 4. What services can the dialog model create?
                                    Dim x
                                    x = oHelloDlg.getModel().getAvailableServiceNames()
                                    MsgBox Join(x, CHR$(10))
                                Table 11. Controls and their models defined in the com.sun.star.awt module.
                                    Control Model Description
                                    UnoControlButton UnoControlButtonModel Button
                                    UnoControlCheckBox UnoControlCheckBoxModel Check box
                                    UnoControlComboBox UnoControlComboBoxModel Combo box
                                    UnoControlCurrencyField UnoControlCurrencyFieldModel Currency field
                                    UnoControlDateField UnoControlDateFieldModel Date field
                                    UnoControlDialog UnoControlDialogModel Dialog
                                    UnoControlEdit UnoControlEditModel Text edit field
                                    UnoControlFileControl UnoControlFileControlModel Select a file
                                    UnoControlFixedLine UnoControlFixedLineModel Fixed line
                                    UnoControlFixedText UnoControlFixedTextModel Display fixed
                                    UnoControlFormattedField UnoControlFormattedFieldModel Formatted field
                                    UnoControlGroupBox UnoControlGroupBoxModel Group box
                                    UnoControlImageControl UnoControlImageControlModel Display an image
                                    UnoControlListBox UnoControlListBoxModel List box
                                    UnoControlNumericField UnoControlNumericFieldModel Numeric field
                                    UnoControlPatternField UnoControlPatternFieldModel Pattern field
                                    UnoControlProgressBar UnoControlProgressBarModel Progress bar
                                    UnoControlRadioButton UnoControlRadioButtonModel Radio button
                                    UnoControlScrollBar UnoControlScrollBarModel Scroll bar
                                    UnoControlTimeField UnoControlTimeFieldModel Time field
                                control-button
                                Table 12. Values defined by the com.sun.star.awt.PushButtonType enumeration.
                                    Enumeration Description
                                    STANDARD The default value. You must write your own event handler.
                                    OK Act like an OK button by closing the dialog and returning 1 from the execute() function.
                                    CANCEL Act like a Cancel button by closing the dialog and returning 0 from the execute() function.
                                    HELP Act like a Help button and open the help URL.
                                Table 13. Constants defined by the com.sun.star.awt.ImageAlign constant group.
                                    Constant Name Description
                                    0 LEFT Align the image to the left.
                                    1 TOP Align the image to the top.
                                    2 RIGHT Align the image to the right.
                                    3 BOTTOM Align the image to the bottom.
                                Table 14. Properties defined by the com.sun.star.awt.UnoControlButtonModel service.
                                    Property Description
                                    DefaultButton If True, this button is the default button.
                                    ImageAlign Specify how an image is aligned in the button (see Table 13).
                                    ImageURL URL of the image to display on the button. If the image is too large, it is cropped.
                                    Label String label displayed on the control.
                                    Printable If True, the button is printed when the document is printed.
                                    PushButtonType The default button action (see Table 12).
                                    State If 1, the button is activated; otherwise, the state is 0.
                                    Tabstop If True, the control can be reached by using the Tab key.
                                    BackgroundColor Dialog’s background color as a Long Integer.
                                    Enabled If True, the dialog is enabled.
                                    FontDescriptor FontDescriptor structure for the text in the dialog’s caption bar.
                                    FontEmphasisMark FontEmphasis for the text in the dialog’s caption bar.
                                    FontRelief FontRelief for the text in the dialog’s caption bar.
                                    HelpText Dialog’s help text as a String.
                                    HelpURL Dialog’s help URL as a String.
                                    TextColor Dialog’s text color as a Long Integer.
                                    TextLineColor Dialog’s text line color as a Long Integer.
                                check-box
                                Table 15. Properties defined by com.sun.star.awt.UnoControlCheckBoxModel.
                                    Property Description
                                    Label String label displayed on the control.
                                    Printable If True, the button is printed when the document is printed.
                                    State If 0, the button is not checked; if 1, the button is checked; 2 is the “don’t know” state.
                                    Tabstop If True, the control can be reached by using the Tab key.
                                    TriState If True, the button supports the “don’t know” state of 2.
                                    Enabled If True, the dialog is enabled.
                                    FontDescriptor FontDescriptor structure for the text in the dialog’s caption bar.
                                    FontEmphasisMark FontEmphasis for the text in the dialog’s caption bar.
                                    FontRelief FontRelief for the text in the dialog’s caption bar.
                                    HelpText Dialog’s help text as a String.
                                    HelpURL Dialog’s help URL as a String.
                                    TextColor Dialog’s text color as a Long Integer.
                                    TextLineColor Dialog’s text line color as a Long Integer.
                                radio-button
                                Table 16. Properties in the com.sun.star.awt.UnoControlRadioButtonModel.
                                    Property Description
                                    Label String label displayed on the control.
                                    Printable If True, the button is printed when the document is printed.
                                    State If 0, the button is not checked; if 1, the button is checked.
                                    Tabstop If True, the control can be reached by using the Tab key.
                                    Enabled If True, the dialog is enabled.
                                    FontDescriptor FontDescriptor structure for the text in the dialog’s caption bar.
                                    FontEmphasisMark FontEmphasis for the text in the dialog’s caption bar.
                                    FontRelief FontRelief for the text in the dialog’s caption bar.
                                    HelpText Dialog’s help text as a String.
                                    HelpURL Dialog’s help URL as a String.
                                    TextColor Dialog’s text color as a Long Integer.
                                    TextLineColor Dialog’s text line color as a Long Integer.
                                group-box
                                    gruppera saker visuellt i en dialogruta :DDD
                                fixed line control
                                    linjer med samma syfte som group-box :)
                                    The only interesting property in the fixed-line-control model is the Orientation property, which specifies if the line is drawn horizontally (0) or vertically (1).
                                combo-box
                                    A combo box, sometimes called a “drop-down” control, is an input field with an attached list box. The combo box control is used to select a single value. The attached list box facilitates selecting a value from a predefined list. The selected text is available from the Text property in the control’s model. See Table 17.
                                Table 17. Properties defined by com.sun.star.awt.UnoControlComboBoxModel.
                                    Property Description
                                    Autocomplete If True, automatic completion of text is enabled.
                                    Border Specify no border (0), a 3-D border (1), or a simple border (2) as an Integer.
                                    Dropdown If True, the control contains a drop-down button.
                                    LineCount Maximum line count displayed in the drop-down box.
                                    MaxTextLen Maximum character count. If 0, the text length is unlimited.
                                    Printable If True, the button is printed when the document is printed.
                                    ReadOnly If True, the Text entry cannot be modified by the user.
                                    StringItemList Array of strings that identify the items in the list.
                                    Tabstop If True, the control can be reached by using the Tab key.
                                    Text Text that is displayed in the input field section of the box.
                                    BackgroundColor Dialog’s background color as a Long Integer.
                                    Enabled If True, the dialog is enabled.
                                    FontDescriptor FontDescriptor structure for the text in the dialog’s caption bar.
                                    FontEmphasisMark FontEmphasis for the text in the dialog’s caption bar.
                                    FontRelief FontRelief for the text in the dialog’s caption bar.
                                    HelpText Dialog’s help text as a String.
                                    HelpURL Dialog’s help URL as a String.
                                    TextColor Dialog’s text color as a Long Integer.
                                    TextLineColor Dialog’s text line color as a Long Integer.
                                Table 18. Extra utility methods supported by the combo box control.
                                    Method Description
                                    addItem(String, position) Add an item at the specified position.
                                    addItems(StringArray, position) Add multiple items at the specified position.
                                    removeItems(position, count) Remove a number of items at the specified position.
                                text-edit-controls (?) :]
                                Table 19. Properties defined by the com.sun.star.awt.UnoControlEditModel service.
                                    Property Description
                                    Align Specify that the text is aligned left (0), center (1), or right (2).
                                    Border Specify no border (0), a 3-D border (1), or a simple border (2).
                                    EchoChar A password field displays the character specified by this integer rather than the entered text.
                                    HScroll If True, the text in the control can be scrolled in the horizontal direction.
                                    HardLineBreaks If True, hard line breaks are returned by the control’s getText() method.
                                    MaxTextLen Maximum number of characters the control may contain. If zero, the text length is not purposely limited.
                                    MultiLine If True, the text may use more than one line.
                                    Printable If True, the control is printed with the document.
                                    ReadOnly If True, the control’s content cannot be modified by the user.
                                    Tabstop If True, the control can be reached by using the Tab key.
                                    Text The text that is displayed in the control.
                                    VScroll If True, the text in the control can be scrolled in the vertical direction.
                                    BackgroundColor Dialog’s background color as a Long Integer.
                                    Enabled If True, the dialog is enabled.
                                    FontDescriptor FontDescriptor structure for the text in the dialog’s caption bar.
                                    FontEmphasisMark FontEmphasis for the text in the dialog’s caption bar.
                                    FontRelief FontRelief for the text in the dialog’s caption bar.
                                    HelpText Dialog’s help text as a String.
                                    HelpURL Dialog’s help URL as a String.
                                    TextColor Dialog’s text color as a Long Integer.
                                    TextLineColor Dialog’s text line color as a Long Integer.
                                Table 20. Properties in the com.sun.star.awt.Selection structure.
                                    Property Description
                                    Min Lower limit of the range as a Long Integer.
                                    Max Upper limit of the range as a Long Integer.
                                Table 21. Methods defined by the com.sun.star.awt.XTextComponent interface.
                                    Method Description
                                    addTextListener(XTextListener) Add a text listener.
                                    removeTextListener(XTextListener) Remove a text listener.
                                    setText(string) Set the model’s Text property (see Table 19).
                                    insertText(Selection, string) Insert the string at the specified Selection location.
                                    getText() Get the model’s Text property (see Table 19).
                                    getSelectedText() Return the currently selected text string.
                                    setSelection(Selection) Set the text that is selected (see Table 18).
                                    getSelection() Return a Selection object that identifies the selected text (see Table 18).
                                    isEditable() Return the model’s ReadOnly flag (see Table 19).
                                    setEditable(boolean) Set the model’s ReadOnly flag (see Table 19).
                                    setMaxTextLen(len) Set the model’s MaxTextLen property (see Table 19).
                                    getMaxTextLen() Get the model’s MaxTextLen property (see Table 19).
                                currency-control
                                Table 22. Properties in the com.sun.star.awt.UnoControlCurrencyFieldModel service.
                                    Property Description Default
                                    CurrencySymbol Currency symbol as a String. $
                                    DecimalAccuracy Decimal accuracy as an Integer. 2
                                    PrependCurrencySymbol If True, the currency symbol is prepended to the currency amount. No
                                    ShowThousandsSeparator If True, the thousands separator is displayed. No
                                    Spin If True, the control has a spin button. No
                                    StrictFormat If True, the entered text is checked during the user input. No
                                    Value The value displayed in the control as a floating-point Double. 0
                                    ValueMax The maximum value as a floating-point Double. 1000000
                                    ValueMin The minimum value as a floating-point Double. -1000000.00
                                    ValueStep The amount that the spin button changes the entered values as a Double. 1
                                    The default values shown in Table 22 are for the United States. Local specific default values are used.
                                Table 23. Methods defined by the the com.sun.star.awt.XSpinField interface.
                                    Method Description
                                    addSpinListener(XSpinListener) Add a spin listener.
                                    removeSpinListener(XSpinListener) Remove a spin listener.
                                    up() Increases the value by ValueStep (see Table 22).
                                    down() Decreases the value by ValueStep (see Table 22).
                                    first() Set the value to ValueMin (see Table 22).
                                    last() Set the value to ValueMax (see Table 22).
                                    enableRepeat(boolean) Enable/disable automatic repeat mode.
                                numeric control
                                    samma som för currency-control, men används för vanliga numeriska värden :))
                                date-control
                                Table 24. Date input formats supported by a Date control.
                                    Value Description
                                    0 Default system short format.
                                    1 Default system short format with a two-digit year (YY).
                                    2 Default system short format with a four-digit year (YYYY).
                                    3 Default system long format.
                                    4 Short format (DD/MM/YY).
                                    5 Short format (MM/DD/YY).
                                    6 Short format (YY/MM/DD).
                                    7 Short format (DD/MM/YYYY).
                                    8 Short format (MM/DD/YYYY).
                                    9 Short format (YYYY/MM/DD).
                                    10 Short format for DIN 5008 (YY-MM-DD).
                                    11 Short format for DIN 5008 (YYYY-MM-DD).
                                Table 25. Properties in the com.sun.star.awt.UnoControlDateFieldModel service.
                                    Property Definition
                                    Date The date as a Long Integer.
                                    DateFormat Date format as an Integer (see Table 24).
                                    DateMax Maximum allowed date as a Long Integer.
                                    DateMin Minimum allowed date as a Long Integer.
                                    DropDown If True, a drop-down exists that shows a calendar for choosing a date.
                                    Spin If True, spin buttons are drawn.
                                    StrictFormat If True, the date is checked during the user input.
                                    BackgroundColor Dialog’s background color as a Long Integer.
                                    Border Specify no border (0), a 3-D border (1), or a simple border (2).
                                    Enabled If True, the dialog is enabled.
                                    FontDescriptor FontDescriptor structure for the text in the dialog’s caption bar.
                                    FontEmphasisMark FontEmphasis for the text in the dialog’s caption bar.
                                    FontRelief FontRelief for the text in the dialog’s caption bar.
                                    HelpText Dialog’s help text as a String.
                                    HelpURL Dialog’s help URL as a String.
                                    TextColor Dialog’s text color as a Long Integer.
                                    TextLineColor Dialog’s text line color as a Long Integer.
                                Table 26. Methods in the com.sun.star.awt.UnoControlDateField interface.
                                    Method Description
                                    setDate(long) Set the model’s Date property.
                                    getDate() Get the model’s Date property.
                                    setMin(long) Set the model’s DateMin property.
                                    getMin(long) Get the model’s DateMin property.
                                    setMax(long) Set the model’s DateMax property.
                                    getMax(long) Get the model’s DateMax property.
                                    setFirst(long) Set the date used for the Page Down key.
                                    getFirst() Get the date used for the Page Down key.
                                    setLast(long) Set the date used for the Page Up key.
                                    getLast() Get the date used for the Page Up key.
                                    setLongFormat(boolean) Set to use the long date format.
                                    isLongFormat() Return True if the long date format is used.
                                    setEmpty() Set the empty value.
                                    isEmpty() Return True if the current value is empty.
                                    setStrictFormat(boolean) Set the model’s StrictFormat property.
                                    isStrictFormat() Get the model’s StrictFormat property.
                                time-control
                                    Fel vid uppdatering av texten för följande indata: =liknande date-control :). Felet var: org.freeplane.plugin.script.ExecuteScriptException: startup failed: Script1.groovy: 1: expecting EOF, found ':' @ line 1, column 23.    liknande date-control :)                          ^  1 error  at line 1
                                Table 27. Time input formats supported by a time control.
                                    Value Description
                                    0 Short 24-hour format.
                                    1 Long 24-hour format.
                                    2 Short 12-hour format.
                                    3 Long 12-hour format.
                                    4 Short time duration.
                                    5 Long time duration.
                                Table 28. Properties in the com.sun.star.awt.UnoControlTimeFieldModel service.
                                    Property Definition
                                    Time The time as a Long Integer.
                                    TimeFormat Time format as an Integer (see Table 27).
                                    TimeMax Maximum allowed date as a Long Integer.
                                    TimeMin Minimum allowed date as a Long Integer.
                                    Spin If True, spin buttons are drawn.
                                    StrictFormat If True, the date is checked during the user input.
                                Listing 11. Extracting values from a time control. :)))
                                    n = oOOMEDlg.getModel().getByName("MyTimeField").Time
                                    h = n / 1000000
                                        REM Get the hours
                                    m = n / 10000 MOD 100
                                        REM Get the minutes
                                    s = n / 100 MOD 100
                                        REM Get the seconds
                                    ss = n MOD 100
                                        REM portions of a second
                                formatted control
                                    Fel vid uppdatering av texten för följande indata: = SE MER senare :]. Felet var: org.freeplane.plugin.script.ExecuteScriptException: startup failed: Script1.groovy: 1: unexpected token: MER @ line 1, column 5.     SE MER senare :]        ^  1 error  at line 1
                                Table 29. Properties in the com.sun.star.awt.UnoControlFormattedFieldModel service.
                                    Property Description
                                    TreatAsNumber If True, the text is treated as a number. This property controls how the other values are treated.
                                    EffectiveDefault The default value of the formatted field. This is a number or a string based on TreatAsNumber.
                                    EffectiveMax The maximum value as a Double if TreatAsNumber is True.
                                    EffectiveMin The minimum value as a Double if TreatAsNumber is True.
                                    EffectiveValue The current value as a Double or a String based on the value of TreatAsNumber.
                                    FormatKey Long Integer that specifies the format for formatting.
                                    FormatsSupplier XNumberFormatsSupplier that supplies the formats used by this control.
                                    Property Description
                                    Spin If True, a spin control is used.
                                    StrictFormat If True, the text is checked during the user input.
                                    Align Specify that the text is aligned left (0), center (1), or right (2).
                                    Border Specify no border (0), a 3-D border (1), or a simple border (2).
                                    MaxTextLen Maximum number of characters the control may contain. If zero, the text length is not purposely limited.
                                    Printable If True, the control is printed with the document.
                                    ReadOnly If True, the control’s content cannot be modified by the user.
                                    Tabstop If True, the control can be reached by using the Tab key.
                                    Text The text that is displayed in the control.
                                    BackgroundColor Dialog's background color as a Long Integer.
                                    Enabled If True, the dialog is enabled.
                                    FontDescriptor FontDescriptor structure for the text in the dialog’s caption bar.
                                    FontEmphasisMark FontEmphasis for the text in the dialog’s caption bar.
                                    FontRelief FontRelief for the text in the dialog’s caption bar.
                                    HelpText Dialog’s help text as a String.
                                    HelpURL Dialog’s help URL as a String.
                                    TextColor Dialog’s text color as a Long Integer.
                                    TextLineColor Dialog’s text line color as a Long Integer.
                                Table 30. Constants in the com.sun.star.util.NumberFormat constant group.
                                    Constant Value Description
                                    0 ALL All number formats.
                                    1 DEFINED User-defined number formats.
                                    2 DATE Date formats.
                                    4 TIME Time formats.
                                    8 CURRENCY Currency formats.
                                    16 NUMBER Decimal number formats.
                                    32 SCIENTIFIC Scientific number formats.
                                    64 FRACTION Number formats for fractions.
                                    128 PERCENT Percentage number formats.
                                    256 TEXT Text number formats.
                                    6 DATETIME Number formats that contain date and time.
                                    1024 LOGICAL Boolean number formats.
                                    2048 UNDEFINED Used if no number format exists.
                                Table 31. Properties in the com.sun.star.awt.UnoControlFormattedFieldModel service.
                                    Method Description
                                    getByKey(key) Return the com.sun.star.util.NumberFormatProperties based on the numeric key.
                                    queryKeys(NumberFormat, Locale, boolean)  Return an array of Long Integer keys that identify numeric formats of the specified type (see Table 30) for the specified locale. If the final Boolean parameter is True and if no formats exist, one will be created.
                                    queryKey(format, Locale, boolean) Return the Long Integer key for the specified format string.
                                    addNew(format, Locale) Add a number format and return the Long Integer key.
                                    addNewConverted(format, Locale, Locale)  Add a number format, using a format string in a locale that is different than the desired locale.
                                    removeByKey(key) Remove a number format based on the Long Integer key.
                                    generateFormat(key, Locale, bThousands, bRed, nDecimals, number format. nLeading) Return a format string based on the input values, but do not actually create the
                                Listing 13. Edit mask and literal mask for a social security number.
                                    EditMask
                                    NNNLNNLNNN
                                    LiteralMask = "___-__-___"
                                Table 32. Edit mask characters supported by the pattern control.
                                    Character Description
                                    L A text constant that is displayed but cannot be edited.
                                    a The characters a–z and A–Z can be entered.
                                    A The characters a–z and A–Z are valid, but the letters a–z are converted to uppercase.
                                    c The characters a–z, A–Z, and 0–9 can be entered.
                                    C The characters a–z, A–Z, and 0–9 are valid, but the letters a–z are converted to uppercase.
                                    N The characters 0–9 can be entered.
                                    x Any printable character can be entered.
                                    X Any printable character can be entered, but the letters a–z are converted to uppercase.
                                Table 33. Properties in the com.sun.star.awt.UnoControlPatternFieldModel service.
                                    Property Description
                                    EditMask The edit mask.
                                    LiteralMask The literal mask.
                                    StrictFormat If True, the text is checked during the user input.
                                    Border Specify no border (0), a 3-D border (1), or a simple border (2).
                                    MaxTextLen Maximum number of characters the control may contain. If zero, the text length is not purposely limited.
                                    Printable If True, the control is printed with the document.
                                    ReadOnly If True, the control’s content cannot be modified by the user.
                                    Tabstop If True, the control can be reached by using the Tab key.
                                    Text The text that is displayed in the control.
                                    BackgroundColor Dialog’s background color as a Long Integer.
                                    Enabled If True, the dialog is enabled.
                                    FontDescriptor FontDescriptor structure for the text in the dialog’s caption bar.
                                    FontEmphasisMark FontEmphasis for the text in the dialog’s caption bar.
                                    FontRelief FontRelief for the text in the dialog’s caption bar.
                                    HelpText Dialog’s help text as a String.
                                    HelpURL Dialog’s help URL as a String.
                                    TextColor Dialog’s text color as a Long Integer.
                                    TextLineColor Dialog’s text line color as a Long Integer.
                                    Obs! If the StrictFormat property is False, the pattern control ignores the edit mask and the literal mask.
                                fixed text-control
                                    Use the fixed text control to label other controls and areas in a dialog. In the IDE, the fixed text control is called a “label field.” The fixed text control is a very simple text edit field. The model supports the properties in Table 34.
                                Table 34. Properties in the com.sun.star.awt.UnoControlFixedTextFieldModel service.
                                    Property Description
                                    Align Specify that the text is aligned left (0), center (1), or right (2).
                                    BackgroundColor Control’s background color as a Long Integer.
                                    Border Specify no border (0), a 3-D border (1), or a simple border (2).
                                    Enabled If True, the control is enabled.
                                    FontDescriptor FontDescriptor structure for the text in the control.
                                    FontEmphasisMark FontEmphasis for the text in the control.
                                    FontRelief FontRelief for the text in the control.
                                    HelpText Control’s help text as a String.
                                    HelpURL Control’s help URL as a String.
                                    Label Text label displayed in the control.
                                    MultiLine If True, the text may use more than one line.
                                    Printable If True, the control is printed with the document.
                                    TextColor Control’s text color as a Long Integer.
                                    TextLineColor Control’s text line color as a Long Integer.
                                file-control
                                    The file control is a text edit control that contains a command button, which opens the File dialog. The initial directory that is used is set by the Text property. Table 35 contains the properties defined by the file control model.
                                Table 35. Properties in the com.sun.star.awt.UnoControlFileControlModel service.
                                    Property Description
                                    BackgroundColor Control’s background color as a Long Integer.
                                    Border Specify no border (0), a 3-D border (1), or a simple border (2).
                                    Enabled If True, the control is enabled.
                                    FontDescriptor FontDescriptor structure for the text in the control.
                                    FontEmphasisMark FontEmphasis for the text in the control.
                                    FontRelief FontRelief for the text in the control.
                                    HelpText Control’s help text as a String.
                                    HelpURL Control’s help URL as a String.
                                    Printable If True, the control is printed with the document.
                                    Text The text displayed in the control.
                                    TextColor Control’s text color as a Long Integer.
                                    TextLineColor Control’s text line color as a Long Integer.
                                image control
                                    An image control is used to display a graphic image. The image control is able to automatically scale an image to fit inside the image control. Use the ImageURL property to specify the image to load and the ScaleImage property to tell the control to scale the image automatically (see Table 36).
                                Table 36. Properties in the com.sun.star.awt.UnoControlImageControlModel service.
                                    Property Description
                                    BackgroundColor Control’s background color as a Long Integer.
                                    Border Specify no border (0), a 3-D border (1), or a simple border (2).
                                    Enabled If True, the dialog is enabled.
                                    HelpText Control’s help text as a String.
                                    HelpURL Control’s help URL as a String.
                                    ImageURL URL of the image to load.
                                    Printable If True, the control is printed with the document.
                                    ScaleImage If True, the image is automatically scaled to the size of the control.
                                    TabStop If True, the Tab key can reach this control.
                                progress-control :)
                                Table 37. Properties in the com.sun.star.awt.UnoControlProgressBarModel service.
                                    Property Description
                                    BackgroundColor Control’s background color as a Long Integer.
                                    Border Specify no border (0), a 3-D border (1), or a simple border (2).
                                    Enabled If True, the dialog is enabled.
                                    FillColor Color used to fill the progress bar.
                                    HelpText Control’s help text as a String.
                                    HelpURL Control’s help URL as a String.
                                    Printable If True, the control is printed with the document.
                                    ProgressValue Current progress value as a Long Integer.
                                    ProgressValueMax Maximum progress value as a Long Integer.
                                    ProgressValueMin Minimum progress value as a Long Integer.
                                list-box-control
                                    A list box contains a list of items—one per line—from which the user may select zero or more items. In other words, a list box provides a mechanism to select multiple items from a list. The list box control automatically adds scroll bars if they are required. Table 38 contains a list of properties supported by the list box model
                                Table 38. Properties in the com.sun.star.awt.UnoControlListBoxModel service.
                                    Property Description
                                    BackgroundColor Control’s background color as a Long Integer.
                                    Border Specify no border (0), a 3-D border (1), or a simple border (2).
                                    Dropdown If True, the control has a drop-down button.
                                    Enabled If True, the control is enabled.
                                    FontDescriptor FontDescriptor structure for the text in the control.
                                    FontEmphasisMark FontEmphasis for the text in the control.
                                    FontRelief FontRelief for the text in the control.
                                    HelpText Control’s help text as a String.
                                    HelpURL Control’s help URL as a String.
                                    LineCount The maximum line count displayed in the drop-down box.
                                    MultiSelection If True, more than one entry can be selected.
                                    Printable If True, the control is printed with the document.
                                    ReadOnly If True, the user cannot modify the data in the control.
                                    SelectedItems Array of Short Integers that represent the index of the selected items.
                                    StringItemList Array of strings that represent the items in the list box.
                                    Tabstop If True, the control can be reached by using the Tab key.
                                    TextColor Control’s text color as a Long Integer.
                                    TextLineColor Control’s text line color as a Long Integer.
                                Table 39. Methods defined by the com.sun.star.awt.XListBox interface.
                                    Method Description
                                    addItemListener(XItemListener) Add a listener for item events.
                                    removeItemListener(XItemListener) Remove a listener for item events.
                                    addActionListener(XActionListener) Add a listener for action events.
                                    removeActionListener(XActionListener) Remove a listener for action events.
                                    addItem(String, position) Add an item at the specified position.
                                    addItems(StringArray, position) Add multiple items at the specified position.
                                    removeItems(position, count) Remove a number of items at the specified position.
                                    getItemCount() Get the number of items in the list box.
                                    getItem(position) Get the specified item.
                                    getItems() Return the StringItemList property (see Table 38).
                                    getSelectedItemPos() Return the position of one of the selected items. This is useful if only one item can be selected.
                                    getSelectedItemsPos() Return the SelectedItems property (see Table 38).
                                    getSelectedItem() Return one of the selected items. This is useful if only one item can be selected.
                                    getSelectedItems() Return all selected items as an array of strings.
                                    selectItemPos(position, boolean) Select or deselect the item at the specified position.
                                    selectItemsPos(positions, boolean) Select or deselect multiple items at the positions specified by the array of positions.
                                    selectItem(item, boolean) Select or deselect the specified item string.
                                    isMutipleMode() Get the MultiSelection property (see Table 38).
                                    setMultipleMode(boolean) Set the MultiSelection property (see Table 38).
                                    getDropDownLineCount() Get the LineCount property (see Table 38).
                                    setDropDownLineCount(integer) Set the LineCount property (see Table 38).
                                    makeVisible(position) Scroll the items in the list box so that the specified item is visible.
                                scroll-bar-control
                                Table 40. Properties in the com.sun.star.awt.UnoControlScrollBarModel service.
                                    Property Description
                                    BlockIncrement Increment for a block move as a Long Integer.
                                    Border Specify no border (0), a 3-D border (1), or a simple border (2).
                                    Enabled If True, the control is enabled.
                                    HelpText Control’s help text as a String.
                                    HelpURL Control’s help URL as a String.
                                    LineIncrement Increment for a single-line move as a Long Integer.
                                    Orientation Scroll bar orientation with values com.sun.star.awt.ScrollBarOrientation.HORIZONTAL (0) and com.sun.star.awt.ScrollBarOrientation.VERTICAL (1).
                                    Printable If a scroll bar is embedded into a document, setting this to True causes the scroll bar to be printed when the document is printed.
                                    ScrollValue Current scroll value.
                                    ScrollValueMax Maximum scroll value of the control.
                                    VisibleSize Visible size of the scroll bar.
                                Listing 15. Global variables for the Close button’s initial position and size.
                                    Dim oBPosSize
                                    Fel vid uppdatering av texten för följande indata: ='Button original position and size. Felet var: org.freeplane.plugin.script.ExecuteScriptException: startup failed: Script1.groovy: 1: expecting ''', found '<EOF>' @ line 1, column 35.    'Button original position and size                                      ^  1 error  at line 1
                                o
                        --------------------------
                        ---------------------------
                    Chapter 17 - Dialogs and Controls, s413 :D
                    Chapter 18 - Sources of information, s455
                    Metoder - Alla metoder som tillhandahålls genom UNO:s services (allmäna och för Calc, Writer osv) *** :)
                    Dialogrutor och kontroller :)
                KÄLLOR MM :)
                    o
                        oome_index.pdf <file:/home/bluelegend/Ubuntu%20One/Dokument640/GENOMGÅNG_dataprogram_programmeringsspråk/starbasic/Ny%20mapp/oome_index.pdf>
                    Macros explained.pdf :) <OOME_Ebook.pdf>
                        om informationskällor: :D
                        OOo Help :)
                        Makron som följer med OpenOffice.org :)
                        Nätlänkar mm :)
                            Reference material
                             http://api.openoffice.org/ is the site where I spend most of my time. This site lists most interfaces and services and contains the primary Developer’s Guide. The guide has a reputation for being difficult to understand, but the authors are working to make the content more accessible to less technical readers. <http://api.openoffice.org/>
                             http://docs.sun.com/db/coll/999.2?q=star+office contains Sun Microsystems’ StarOffice documentation. <http://docs.sun.com/db/coll/999.2?q=star+office>
                             http://docs.sun.com/db/doc/817-1826-10: Sun wrote a book on macro programming. This book contains some of the same errors as the included help files, but it is an excellent document. It’s very well written and laid out, and Sun is working hard to eliminate the errors.
                            Macro examples
                             http://www.pitonyak.org/oo.php is my personal Web site, created before I decided to write a book. This site contains my macro document, which contains numerous working examples but is short on explanations. This document is frequently updated as I add new examples. The direct link to my macro document is pitonyak.org > AndrewMacro.sxw <http://www.pitonyak.org/AndrewMacro.sxw.>
                             http://disemia.com/software/openoffice/ contains some nice examples. <http://disemia.com/software/openoffice/>
                             http://kienlein.com/pages/oo.html contains some excellent macros, with short descriptions of the macros in German. <http://kienlein.com/pages/oo.html>
                             http://www.darwinwars.com/lunatic/bugs/oo_macros.html is a good first stop when looking for Writer macros. The author of this site is a professional writer who uses the macros—so they work! <http://www.darwinwars.com/lunatic/bugs/oo_macros.html>
                             http://www.ooomacros.org/ contains some nice code snippets and other links. <http://www.ooomacros.org/>
                            Miscellaneous
                             http://www.openoffice.org/ is the main OOo link. This site contains a lot of information, such as links to mailing lists that you can search, and the OOo bug-tracking system IssueZilla. You can join the site (it’s free) to gain more capabilities, such as entering bug reports and subscribing to mailing lists. <http://www.openoffice.org/>
                             http://development.openoffice.org/index.html is the developer project link from the main OOo Web page. Numerous links and resources are available from this page. <http://development.openoffice.org/index.html>
                             http://www.oooforum.org/ contains numerous help forums. This site includes help for the different components of OOo—including macro programming. I frequently visit the oooforum site. <http://www.oooforum.org/>
                             http://ooodocs.sourceforge.net/ contains many help files separated into categories, including a section on macro programming. <http://ooodocs.sourceforge.net/>
                             http://dba.openoffice.org/downloads/index.html contains database-related scripts and information. <http://dba.openoffice.org/downloads/index.html>
                             http://scripting.openoffice.org/ is the OpenOffice.org scripting Web site. <http://scripting.openoffice.org/>
                             http://udk.openoffice.org/ is a rather advanced site containing answers to many questions that you probably didn’t think to ask. Serious developers of all types will find useful information here. There are links to specific information about handling UNO objects from Basic, and even a good tutorial on how to perform office automation from other programming languages (http://udk.openoffice.org/common/man/tutorial/office_automation.html). <http://udk.openoffice.org/common/man/tutorial/office_automation.html>
                             http://documentation.openoffice.org/ is the home page for the documentation project. This site contains documentation on numerous topics. The How-To link references a document that discusses how to embed controls that call macros into documents. This is an excellent interactive document. documentation.openoffice.org > HOW TO > Various topics > How to use basic macros <http://documentation.openoffice.org/>
                             http://sourceforge.net/project/showfiles.php?group_id=43716 contains numerous templates and examples. <http://sourceforge.net/project/showfiles.php?group_id=43716>
                        http://api.openoffice.org/ 
                        Mailing lists and newsgroups 
                        Hitta svar med MsgBox och liknande :)
                    drs calcsammanställning_2011.odt :)
                    OpenOffice.org Spreadsheet Macro Programming :D
                    ALLA MODULER FÖR API:T :DDDDD (Libre- och OpenOffice.org:s hemsidor :))) !!!!
                        o
                            GRUNDMETOD HITTA FUNKTION DU VILL HA: Sök på google 'libreoffice basic SORT_OF_FUNCTIONNAME(t.ex. open file read write)'
                                Exempel:  https://help.libreoffice.org/Basic/Write_Statement_Runtime <https://help.libreoffice.org/Basic/Write_Statement_Runtime>
                            http://api.libreoffice.org/docs/idl/ref/annotated.html (=libreoffice träd med funktioner) <http://api.libreoffice.org/docs/idl/ref/annotated.html>
                            <https://help.libreoffice.org/Basic/>
                            LibreOffice <#ID_246236672>
                                <http://api.libreoffice.org/>
                        OpenOffice <http://www.openoffice.org/api/docs/common/ref/com/module-ix.html>
                        Starbasic.total_tree.mm :DDDDDDDDD <../../../starbasic.total_tree.mm>
                    Handbok för Starbasic 8.pdf :) <#ID_1278474836>
                        so8-programmeringshandbok-basic-oct-8-05.pdf <file:/home/bluelegend/Ubuntu%20One/Dokument640/GENOMGÅNG_dataprogram_programmeringsspråk/starbasic/Ny%20mapp/so8-programmeringshandbok-basic-oct-8-05.pdf>
                        Handbok for StarOffice Basic 8.pdf <file:/home/bluelegend/Ubuntu%20One/Dokument640/GENOMGÅNG_dataprogram_programmeringsspråk/starbasic/Ny%20mapp/Handbok%20for%20StarOffice%20Basic%208.pdf>
                        Handbok for StarBasic 8.pdf <file:/home/bluelegend/Ubuntu%20One/Dokument640/GENOMGÅNG_dataprogram_programmeringsspråk/starbasic/Ny%20mapp/Handbok%20for%20StarBasic%208.pdf>
                    Getting started with Libreoffice :) (kap 13 = om Makron) <../GS3400-GettingStartedLibO.pdf>
                    AndrewMacro.odt <file:/home/bluelegend/Ubuntu%20One/Dokument640/GENOMGÅNG_dataprogram_programmeringsspråk/starbasic/Ny%20mapp/AndrewMacro.odt>
                    BasicGuide_OOo3.2.0.odt <file:/home/bluelegend/Ubuntu%20One/Dokument640/GENOMGÅNG_dataprogram_programmeringsspråk/starbasic/Ny%20mapp/BasicGuide_OOo3.2.0.odt>
                        Nya Starbasic-dokumentet.pdf :DDD <file:/home/bluelegend/Ubuntu%20One/Dokument640/GENOMGÅNG_dataprogram_programmeringsspråk/starbasic/Ny%20mapp/BasicGuide_OOo3.2.0.odt>
                    o
                        TODO:
                            *lista ALLA filtyper som finns i xba-mm-mapparna :}
                                o
                                o
                                o
                                o
                        position xlb- och liknande filer
                            /usr/lib/libreoffice/share/basic/Template/script.xlb
                            /usr/lib/libreoffice/share/basic/Euro/script.xlb
                            /usr/lib/libreoffice/share/basic/Tools/script.xlb
                            /usr/lib/libreoffice/share/basic/FormWizard/script.xlb
                            /usr/lib/libreoffice/share/basic/Tutorials/script.xlb
                            /usr/lib/libreoffice/share/basic/Schedule/script.xlb
                            /usr/lib/libreoffice/share/basic/Depot/script.xlb
                            /usr/lib/libreoffice/share/basic/ImportWizard/script.xlb
                            /usr/lib/libreoffice/share/basic/ScriptBindingLibrary/script.xlb
                            /usr/lib/libreoffice/share/basic/Gimmicks/script.xlb
                            /usr/lib/libreoffice/presets/basic/Standard/script.xlb
                            /home/bluelegend/Ubuntu One/Dokument640/STUDERA PROGRAMMERINGSKOD/STARBASIC/OOoLilyPond/OOoLilyPond/script.xlb
                            /home/bluelegend/.config/libreoffice/3/user/basic/Standard/script.xlb
+some picks 2  [ ~/legacy/dropboxlegacy_pre2021/starbasic_1.txt ]
## ~/legacy/dropboxlegacy_pre2021/starbasic.bas
            menyer och funktioner i ide:n {{{
            go to line - c-l

            Object catalog select macro select module LibreOffice help

            Compile run basic F5 stop macro shift F5 step over shift f8 step into f8 step out control shift f8 breakpoint on or off F9 manage breakpoints enable watch at 7 find parentheses insert basic source save basic import dialog 
            }}}
                apt-cache search python-uno
                    python3-uno - Python-UNO bridge


            INDEX LITT {{{
                OOME_Ebook
                openoffice-calc-spreadsheetmacroprogr

                libreoffice_macros
                ooobasic_guide
                starbasic7
                starbasic8
                libreoffice_basic

                openoffice_calcmacros
                    http://api.libreoffice.org/

                    https://wiki.openoffice.org/w/images/c/c1/BasicGuide_OOo3.2.0.pdf
                    http://www.openoffice.org/api/basic/man/tutorial/tutorial.pdf
                    http://www.baseprogramming.com/OOBasicDatabaseDev.pdf
                    https://wiki.openoffice.org/w/images/e/e1/BasicGuide_OOo3.0.0.pdf
                . {{{
                ~/Dropbox/starbasic/OOME_Ebook.pdf
                ~/Dropbox/openoffice-calc-spreadsheetmacroprogr.pdf

                ~/Dropbox/starbasic/libreoffice_macros.pdf &
                ~/Dropbox/starbasic/ooobasic_guide.pdf &
                ~/Dropbox/starbasic/starbasic7.pdf &
                ~/Dropbox/starbasic/starbasic8.pdf &
                ~/Dropbox/libreoffice_basic.pdf
                ~/Dropbox/libreoffice_basic.odt

                ~/Dropbox/openoffice_calcmacros.pdf &
                ~/Dropbox/ooobasic_guide.pdf
                ~/Dropbox/starbasic7.pdf
                ~/Dropbox/starbasic8.pdf
                    https://wiki.openoffice.org/w/images/c/c1/BasicGuide_OOo3.2.0.pdf
                    http://www.openoffice.org/api/basic/man/tutorial/tutorial.pdf
                    http://www.baseprogramming.com/OOBasicDatabaseDev.pdf
                    https://wiki.openoffice.org/w/images/e/e1/BasicGuide_OOo3.0.0.pdf
                }}}
            }}}

            . {{{
            mer information:
            de komponenter i staroffice-api som beskrivs i denna handbok har valts ut med
            tanke på deras praktiska egenskaper för en staroffice basic-programmerare.
            I allmänhet beskrivs dock bara delar av gränssnitten. Om du vill ha mer detaljerad
            information läser du API-referenshandboken som finns på följande internet-adress:

            http://api.openoffice.org/docs/common/ref/com/sun/star/module-ix.html

            I Developers's Guide beskrivs StarOffice-API mer detaljerat än i den här handboken,
            men den boken är i första hand avsedd för Java och C++-programmerare. Om du
            redan har kunskaper om StarOffice Basic-programmering kan du få mer information
            om StarOffice Basic- och StarOffice-programmering i Developer's Guide. Du kan
            hämta Developers' Guide på följande Internet-adress:

            http://api.openoffice.org/DevelopersGuide/DevelopersGuide.html

            Programmerare som föredrar att arbeta direkt med Java eller C++ istället för
            StarOffice Basic bör läsa StarOffice Developer's Guide istället för den här handboken.
            StarOffice-programmering med Java eller C++ är en betydligt mer komplex process än
            programmering med StarOffice Basic.
            }}}

                 calcguide (=kort på s310)
                 OoBasicGuide (white, 243p)
                    loffice macros (intro, 22p)
                 starbasic7/8 (*)		7=274p 2003,  8=132p 2000
                -----
                CalcMacros
                OO Macros Explained (**)


            SÖK: LIBREOFFICE BASIC API (****)
                https://api.libreoffice.org/
                                    /home/bluelegend/Dropbox/starbasic.total_tree.mm

                    0_calcmacros-orange.txt
                    ~/Documents/doks/calcguide.pdf		#s310ca
                                0_calcmacros-orange.txt		@vo
                                        0_galaxytab-voicealoud2ogg/off_calc/0_calcmacros-orange.ogg
                                0_oomacros-green.txt		@vo
                                . {{{
                                    0_galaxytab-voicealoud2ogg/off_calc/0_oomacros-green-001.ogg
                                    0_galaxytab-voicealoud2ogg/off_calc/0_oomacros-green-002.ogg
                                    0_galaxytab-voicealoud2ogg/off_calc/0_oomacros-green-003.ogg
                                    0_galaxytab-voicealoud2ogg/off_calc/0_oomacros-green-004.ogg
                                    0_galaxytab-voicealoud2ogg/off_calc/0_oomacros-green-005.ogg
                                }}}
                                        ~/Dropbox/ooobasic_guide.pdf
                                0_starbasic8.txt		@vo  **
                                        0_galaxytab-voicealoud2ogg/off_calc/0_starbasic8.ogg
                            ~/Documents/doks_mernytt/DataTekn/libreoffice_starbasic.odt
                                 base.txt		@vo
                                 . {{{
                                    0_galaxytab-voicealoud2ogg--holdextras/office_draw-impress/base-001.ogg
                                    0_galaxytab-voicealoud2ogg--holdextras/office_draw-impress/base-002.ogg
                                 }}}
                                0_calcmacros-orange.txt		@vo
                                        0_galaxytab-voicealoud2ogg/off_calc/0_calcmacros-orange.ogg
                                0_oomacros-green.txt		@vo
                                . {{{
                                    0_galaxytab-voicealoud2ogg/off_calc/0_oomacros-green-001.ogg
                                    0_galaxytab-voicealoud2ogg/off_calc/0_oomacros-green-002.ogg
                                    0_galaxytab-voicealoud2ogg/off_calc/0_oomacros-green-003.ogg
                                    0_galaxytab-voicealoud2ogg/off_calc/0_oomacros-green-004.ogg
                                    0_galaxytab-voicealoud2ogg/off_calc/0_oomacros-green-005.ogg
                                }}}
                                        ~/Dropbox/ooobasic_guide.pdf
                            ~/Dropbox/libreoffice_macros.pdf
                    Dropbox/starbasic/0979_02_code.bas
                    Dropbox/starbasic/0979_03_code.bas
                    Dropbox/starbasic/0979_04_code.bas
                    Dropbox/starbasic/0979_05_code.bas
                    Dropbox/starbasic/0979_06_code.bas
                    Dropbox/starbasic/0979_07_code.bas
                    Dropbox/starbasic/0979_08_code.bas
                    Dropbox/starbasic/0979_09_code.bas
                    Dropbox/starbasic/0979_10_code.bas
                            ~/Dropbox/oome.pdf
                    Dropbox/starbasic/openoffice-calc-spreadshprogr--scriptfiles.zip
                    ~/Dropbox/starbasic7.pdf
                    ~/Dropbox/starbasic8.pdf
first(=legacy) starbasic index-script
            ~/dropbox-legacy/scripts/ALLTODOIST/aa_STARBASIC.bash
            gvim ~/Dropbox/starbasic.bash

            gvim \
                ~/Dropbox/starbasic_1.txt \
                ~/Dropbox/exempelkod_starbasic.bas \
                ~/Dropbox/starbasic.bas \
                ~/Dropbox/starbasic/0979_02_code.bas \
                ~/Dropbox/starbasic/0979_03_code.bas \
                ~/Dropbox/starbasic/0979_04_code.bas \
                ~/Dropbox/starbasic/0979_05_code.bas \
                ~/Dropbox/starbasic/0979_06_code.bas \
                ~/Dropbox/starbasic/0979_07_code.bas \
                ~/Dropbox/starbasic/0979_08_code.bas \
                ~/Dropbox/starbasic/0979_09_code.bas \
                ~/Dropbox/starbasic/0979_10_code.bas \
                -c 'set foldmethod=marker'

                  evince ~/Dropbox/starbasic/OOME_Ebook.pdf &



              gvim -c 'set foldmethod=marker' ~/Dropbox/databasen_programmeringsspråk.txt

               libreoffice ~/Dropbox/starbasic-macro--drstest1-ppimm.odt &
               libreoffice ~/Dropbox/starbasic-macro--drstest1-ppi.ods &
               thunar /home/bluelegend/Dropbox/Dokument640/GENOMGÅNG_dataprogram_programmeringsspråk/starbasic/Ny\ mapp &
               thunar /home/bluelegend/Dropbox/Dokument640/STUDERA\ PROGRAMMERINGSKOD/STARBASIC/ &

            echo "FLER KODEXEMPEL STAR/OO/LIBREOFFICE BASIC, FRÅN NÄTET *******" | gvim -
            -----------
            libreoffice /home/bluelegend/Documents/lo_basic.odt &
            -----------
            /home/bluelegend/Dropbox/Dokument640/STUDERA PROGRAMMERINGSKOD/countparagraphs_starbasic.basic


               freeplane \
                ~/Dropbox/starbasic.total_tree.mm \
                ~/Dropbox/Dokument640/GENOMGÅNG_dataprogram_programmeringsspråk/starbasic/starbasic.mm \
                ~/Dropbox/färga\ bort\ färdiga\ ord-skriptet_libreoffice--genomgång_och_utkast.mm &


            getting started with libreoffice basic*
               evince ~/Dropbox/starbasic/libreoffice_macros.pdf &
            basic lang. programming guide, 243s
               evince ~/Dropbox/starbasic/ooobasic_guide.pdf &

               evince ~/Dropbox/starbasic/starbasic7.pdf &
               evince ~/Dropbox/starbasic/starbasic8.pdf &
             ********
            evince ~/Dropbox/openoffice_calcmacros.pdf &

            ~/Dropbox/ooobasic_guide.pdf
            ~/Dropbox/starbasic7.pdf
            ~/Dropbox/starbasic8.pdf

            bra söka på: {{{
            libreoffice com sun star module reference
            libreoffice basic modules index
            com.sun.star
            libreoffice module star

            firefox -new-window https://wiki.openoffice.org/wiki/Documentation/BASIC_Guide/Cells_and_Ranges
            firefox -new-window https://wiki.openoffice.org/wiki/Documentation/DevGuide/Basic/Accessing_the_UNO_API
            firefox -new-window https://www.google.se/search?client=ubuntu&channel=fs&q=api.libreoffice.org&ie=utf-8&oe=utf-8&gfe_rd=cr&ei=id7gVcXbC4uA8Qfi5r6QAQ
            firefox -new-window https://forum.openoffice.org/en/forum/viewtopic.php?f=21&t=58135
            firefox -new-window https://wiki.openoffice.org/w/images/c/c1/BasicGuide_OOo3.2.0.pdf
            firefox -new-window http://www.openoffice.org/api/basic/man/tutorial/tutorial.pdf
            firefox -new-window http://www.baseprogramming.com/OOBasicDatabaseDev.pdf
             <https://wiki.openoffice.org/w/images/e/e1/BasicGuide_OOo3.0.0.pdf>
            -----
            firefox -new-window https://wiki.openoffice.org/wiki/MediaWiki:Collections/BASIC_Guide
            firefox -new-window https://wiki.openoffice.org/wiki/Documentation/BASIC_Guide
            firefox -new-window http://www.pitonyak.org/oo.php
            firefox -new-window http://en.wikipedia.org/wiki/OpenOffice_Basic
            firefox -new-window https://wiki.openoffice.org/wiki/VBA
            ---
             THE OPENOFFICE API:
            firefox -new-window http://www.openoffice.org/api/
            firefox -new-window http://www.openoffice.org/api/docs/common/ref/com/sun/star/module-ix.html
            firefox -new-window http://www.openoffice.org/api/SDK/index.html
            firefox -new-window https://wiki.openoffice.org/wiki/Documentation/DevGuide/OpenOffice.org_Developers_Guide
            firefox -new-window http://api.libreoffice.org/docs/idl/ref/interfacecom_1_1sun_1_1star_1_1container_1_1XEnumeration.html
            ---
            libreoffice Dokument640/GENOMGÅNG_dataprogram_programmeringsspråk/starbasic/genomgång_starbasic_2011_SUPER.odt &

            firefox -new-window http://api.libreoffice.org/docs/idl/ref/namespacecom_1_1sun_1_1star.html }}}

~/Dropbox/rsc/Doks/phone/Comp/loffice/starbasic/calcmacros-orange.txt
~/Dropbox/rsc/Doks/phone/Comp/loffice/starbasic/OOME.txt  #=HAS FUNC/METHODS-LIST
  ~/Empire/Doks/Comp/loffice/starbasic/AndrewBase.pdf
  ~/Empire/Doks/Comp/loffice/starbasic/libreoffice_macros.pdf
  ~/Empire/Doks/Comp/loffice/starbasic/ooobasic_guide.pdf
  ~/Empire/Doks/Comp/loffice/starbasic/starbasic7.pdf
  ~/Empire/Doks/Comp/loffice/starbasic/starbasic8.pdf


~/Dropbox/rsc/Doks/phone/Comp/loffice/gnumeric.txt
Gnumeric UMan
            Chapter 4 - Gnumeric Elements: Gnumeric Elements
            Chapter 5 - Working with Data: Working with Data
            Chapter 6 - Advanced Analysis: Advanced Analysis
            Chapter 7 - The Solver: The Solver
            Chapter 8 - Statistical Analysis: Statistical Analysis
            Chapter 9 - Graphics: Images, Widgets, and Drawings: Graphics: Images, Widgets, and Drawings
            Chapter 10 - Graphs: Graphs
            Chapter 11 - Using Worksheets: Using Worksheets
            Chapter 12 - Workbook Settings: Workbook Settings
            Chapter 13 - Configuring Gnumeric: Configuring Gnumeric
            Chapter 14 - Working with Files: Working with Files
            Chapter 15 - Printing: Printing
            Chapter 16 - Getting More Help: Getting More Help
            Chapter 17 - Reporting a Problem: Reporting a Problem
            Chapter 18 - Extending Gnumeric: Extending Gnumeric
            Appendix A - Function Reference: Function Reference
            Appendix B - Keybinding Reference: Keybinding Reference
            ----
            3.1 Working with Gnumeric
            3.2 Starting Gnumeric the First Time
            3.2.1. Starting Gnumeric from the GNOME desktop
            3.2.2. Starting Gnumeric from another *NIX desktop
            3.2.3. Starting Gnumeric from a *NIX terminal
            3.2.4. Starting Gnumeric from a Microsoft desktop
            3.2.4.1. Starting Gnumeric from a Microsoft command prompt
            3.2.5. Starting from a Spreadsheet file
            3.2.6. Other sources of help
            Using Commands ----
            3.4.1. Using Menu Commands
            3.4.2. Using Toolbar Button Commands
            3.4.3. Using Context Menu Commands
            3.4.4. Using Keyboard Shortcut Commands
            Data in Gnumeric ----
            3.5.1. The Types of Data in a Spreadsheet
            3.5.2. Putting Data into the Spreadsheet
            3.5.2.1. Moving the selection box
            3.5.2.2. Data input
            3.5.2.3. Automatic data recognition
            3.5.2.4. Entering text
            3.5.2.5. Entering numbers
            3.5.2.6. Entering a Boolean
            3.5.2.7. Entering a formula
            3.5.2.8. Entering an error value
            Cell Formats
            3.6.1. Simple Cell Formatting
            5.10.3.2 - Validation Tab.
            3.6.2. Formatting the Display and Entry Data Types
            Complex Cell Selections
            Moving Cell Contents, Inserting New Cells or Deleting Cells
            3.8.1. Moving Cell Contents
            3.8.2. Inserting and Deleting Cells
            Sheets
            Graphing
            3.10.1. A Simple Graphing Example
            3.10.1.1. Data for the examples.
            3.10.1.2. Making the Column Plot
            3.10.1.3. Modifying the Simple Graph
            Adding a title and legend to the simple graph
            Printing
            File Opening and Saving
            Closing Gnumeric
            4 - Gnumeric Elements ----
            4.1. The menubar
            4.2. The standard toolbar
            4.3. The format toolbar
            4.4. The object toolbar
            4.5. The data entry area
            4.6. The cell grid area
            4.7. The information area
            Menus
            4.2.1. Using Menus
            4.2.2. Menubar
            4.2.3. File Menu
            1 - Workbook creation operations
            2 File creation operations.
            3 Printing operations.
            4 Miscellaneous Operations
            5 Recently used files
            4.2.4. Edit Menu
            1 Change History
            2 Operations on selected areas
            3 Data entry and removal operations
            4 Search and replace operations
            5 Other operations on worksheets
            6 General Configuration of Gnumeric
            4.2.5. View Menu
            1 Alternative views of the current document
            2 Changes to the current view
            4.2.6. Insert Menu
            1 Insert into workbook.
            | 2 Insert an object into the worksheet or content into the current cell.
            | 4.2.7. Format Menu
            | Sheet management
            11.6.3 - Manage Sheets dialog.
            2 Sheet Display Toggles
            3 Zoom...
            4.2.8. Tools Menu
            1 Automatic tools
            2 Linear programming, scenario generation, simulation and statistical analysis tools
            Goal Seek
            3 The Plug-ins dialog.
            4.2.9. Statistics Menu
            4.2.10. Data Menu
            1 Data Field tools.
            2 Data Modifications or Import.
            4.2.11. Help Menu
            1 Entries to find help and report a problem with Gnumeric
            2 The About Gnumeric dialog.
            4.3.1. The Context Menu for the Cell Grid Area
            4.3.2. The Context Menu for Column and Row Headers
            4.3.3. Context Menu for Worksheet Tabs
            4.3.4. The Context Menu for Embedded Objects and Components
            4.3.5. The Context Menu for Toolbars
            Toolbars
            4.4.1. General Toolbar Behavior
            4.4.2. The Standard Toolbar
            4.4.3. The Format Toolbar
            4.4.4. The Long Format Toolbar
            4.4.5. The Object Toolbar
            Data Entry Area
            4.5.1. Current Cell Indicator
            4.5.2. The Cancel Button
            4.5.3. The Confirm Button
            4.5.4. The Equals Button
            The Cell Grid
            4.6.1. The Column and Row Headers
            4.6.2. The Scrollbars
            4.6.3. The Tabbed Sheet Indicator
            The Information Area
            4.7.1. The Menu Hint Area
            4.7.2. The File Status Indicator
            4.7.3. The Running Calculation Area
            The Mouse Pointers used by Gnumeric
            5 - Working with Data ----
            Data in Gnumeric Cells
            The Types of Cell Elements
            5.2.1. Text Data Elements
            5.2.2. Number Data Elements
            5.2.3. Boolean Data Elements
            5.2.4. Formula Elements
            5.2.4.1. Syntax
            5.2.4.2. Using Functions
            5.2.4.3. Cell Referencing
            5.2.4.3.1. Absolute cell referencing
            5.2.4.3.2. References using R1C1 Notation
            5.2.4.3.3. Referencing multiple cells
            5.2.4.3.3.1. Multiple individual cells
            5.2.4.3.3.2. Referencing a continuous region of cells
            5.2.4.3.3.3. Referencing non-continuous regions
            5.2.4.3.4. Referencing cells on other sheets
            5.2.4.3.5. Referencing cells in other files
            5.2.4.4. Names
            5.2.4.5. Array Formulas
            5.2.4.6. Database Formulas
            5.2.5. Error Elements
            Data Entry
            5.3.1. Data Entry by Editing Cells.
            5.3.1.1. Advanced Editing Mode
            5.3.2. Entering Text Data
            5.3.3. Entering Number Data
            5.3.4. Entering Boolean Data
            5.3.5. Entering Formulas
            5.3.5.1. Shortcuts for including cell references and ranges in formulas
            5.3.5.2. Entering formulas using the function list
            5.3.5.3. Entering formulas using the formula guru
            5.3.6. Entering Errors
            Advanced Data Entry
            5.4.1. Entering Large Quantities of Data
            5.4.2. Entering a Regular Sequence
            autofill
            5.4.3. Automatically Correcting Simple Mistakes
            5.4.3.1. Capitalize the Names of Days
            5.4.3.2. Correct TWo INitial CApitals
            5.4.3.3. Capitalize the First Letter of Sentences
            5.4.4. Using a Format Template
            5.4.5. Generating Random Number Sequences
            Obtaining Data from External Sources
            5.5.1. Obtaining Data from External Files
            5.5.2. Obtaining Data by Cut and Paste
            5.5.3. Getting Data from a Database
            5.5.4. Getting Data from an Internet Data Stream
            Selecting Cells and Cell Ranges
            5.6.1. Simple Selections
            5.6.2. Selecting Multiple Cells
            5.6.2.1. Continuous selections
            5.6.2.2. Discontinuous selections
            5.6.3. Advanced methods of Selection
            Moving and Copying Data
            5.7.1. Simple Copy and Move
            5.7.2. Cut, Copy and Paste
            5.7.2.1. Cutting a Selection to the Clipboard
            5.7.2.2. Copying a Selection to the Clipboard
            5.7.2.3. Pasting the Clipboard
            5.7.3. Paste Special
            5.7.4. Cut and Paste Between Gnumeric and Other Applications
            Deleting Data
            Inserting New Data Cells
            Formatting Cells
            5.10.1. Number Formatting Tab
            5.10.2. Alignment, Font, Border, and Background Tabs
            5.10.2.1. Alignment Tab
            5.10.2.2. Font Tab
            5.10.2.3. Border Tab
            5.10.2.4. Background Tab
            5.10.3. Protection and Validation Tabs
            5.10.3.1. Protection Tab
            5.10.3.2. Validation Tab
            Conditional Formatting of Cells
            5.12.1. Auto Filters
            5.12.2. Advanced Filter
            Modifying Data
             5.13.1. Searching for Data
             5.13.2. Searching and Replacing Data
             5.13.3. Sorting Data
             5.13.4. Shuffling Data
             5.13.1. Searching for Data
             5.13.2. Searching and Replacing Data
             5.13.3. Sorting Data
             5.13.4. Shuffling Data
            Generating Data
             5.14.1. Creating a Tabulation of Dependencies
             5.14.2. Creating Multiple Repeats of Standard Data
             5.14.3. Consolidating a Result from Several Source Regions
             5.14.1. Creating a Tabulation of Dependencies
             5.14.2. Creating Multiple Repeats of Standard Data
             5.14.3. Consolidating a Result from Several Source Regions
            Comments in Cells
            Hyperlinks
            Defining Names
            Advanced Analysis
            Analysis using Complex Numbers
            Goal Seek Tool ----
            6.3.1. Using the Tool
            6.3.2. Results
            6.3.3. Desired Value in a Given Range
            Simulation Analysis
            6.4.1. Introduction to simulation analysis
            6.4.2. Setting up the simulation model
            6.4.3. Running the simulation
            6.4.4. Simulation output
            6.4.5. Using SIMTABLE
            6.4.6. Determining the number of iterations
            Analysis using scenarios
             6.5.1. Adding new scenarios
             6.5.2. Viewing and managing scenarios
            The Solver ----
            7.1.1. Introduction to Linear Programming
            7.1.2. Spreadsheet Modeling
            7.1.3. Using Solver
            7.1.3.1. Solver Parameters
            7.1.3.2. Solver Constraints
            7.1.3.3. Solver Reporting
            7.1.3.4. Optimization
            7.1.4. Integer Programming
            Statistical Analysis
            8.2.1. Correlation Tool
            8.2.2. Covariance Tool
            8.2.3. Descriptive Statistics Tool
            8.2.4. Frequency Tables
            8.2.4.1. Frequency Tables Tool
            8.2.4.2. Histogram Tool
            8.2.4.1. Frequency Tables Tool
            8.2.4.1.1. Introduction
            8.2.4.1.2. The "Input" Tab
            8.2.4.1.3. The "Categories" Tab
            8.2.4.1.4. The "Graphs & Options" Tab
            8.2.4.1.5. Frequency Tool Results
            8.2.4.2. Histogram Tool
            8.2.4.2.1. Introduction
            8.2.4.1 - Frequency Tables Tool.
            8.2.4.2.2. The "Input" Tab
            8.2.4.2.3. The "Cutoffs" Tab
            8.2.4.2.4. The "Bins" Tab
            8.2.4.2.5. The "Graphs & Options" Tab
            8.2.4.2.6. The "Output" Tab
            8.2.4.2.7. A Histogram Example
            8.2.5. Rank and Percentile Tool
            8.4.1. Forecast Tools
            8.4.1.1. Exponential Smoothing Tool
            8.4.1.1.1. Common Options of the Exponential Smoothing Tool
            8.4.1.1.2. Exponential Smoothing According to Hunter
            8.4.1.1.3. Exponential Smoothing According to Roberts
            8.4.1.1.4. Holt's Trend Corrected Exponential Smoothing
            8.4.1.1.5. Additive Holt-Winters Method
            8.4.1.1.6. Multiplicative Holt-Winters Method
            8.4.1.2. Moving Average Tool
            8.4.1.2.1. Simple Moving Average
            8.4.1.2.2. Cumulative Moving Average
            8.4.1.2.3. Weighted Moving Average
            8.4.1.2.4. Spencer's 15 Point Moving Average
            8.4.1.2.5. A Moving Average Example
            8.4.2. Fourier Analysis Tool
            8.4.3. Kaplan Meier Estimates Tool
            8.4.3.1. The "Input" Tab
            8.4.3.2. The "Groups" Tab
            8.4.3.3. The "Options" Tab
            8.4.3.4. The "Output" Tab
            8.4.3.5. A Kaplan-Meier Example
            8.4.4. Principal Component Analysis
            8.4.5. Regression Tool
            8.5.1. Normality Tests
            8.5.2. One Median
            8.5.2.1. Sign Test
            8.5.2.2. Wilcoxon Signed Rank Test
            8.6.1. Comparing Means of Two Populations
            8.6.1.1. t-Test: Paired Two Sample for Means Tool
            8.6.1.2. t-Test: Two-Sample Assuming Equal Variances Tool
            8.6.1.3. t-Test: Two-Sample Assuming Unequal Variances Tool
            8.6.1.4. z-Test: Two Samples for Means Tool
            8.6.2. Comparing Medians of Two Populations
            8.6.2.1. Sign Test
            8.6.2.2. Wilcoxon Signed Rank Test
            8.6.2.3. Wilcoxon-Mann-Whitney Test
            8.6.3. F-Test: Two-Sample for Variances Tool
            Multiple Sample Tests
            8.7.1. Analysis of Variance
            8.7.1.1. ANOVA: Single Factor Tool
            8.7.1.2. ANOVA: Two-Factor Tool
            8.7.1.2.1. ANOVA: Two-Factor Without Replication Tool
            8.7.1.2.2. ANOVA: Two-Factor With Replication Tool
            8.7.2. Tests for a Contingency Table
            8.7.2.1. Test of Homogeneity
            8.7.2.2. Test of Independence
            Graphics: Images, Widgets, and Drawings
            9.1.1. Adding Graphical Elements
            9.1.2. Selecting Graphical Elements
            9.1.3. Moving and Resizing Graphical Elements
            9.1.3.1. Moving elements with the mouse
            9.1.3.2. Moving elements with the arrow keys
            9.1.3.3. Resizing and reshaping elements
            9.1.4. Invoking the Context Menu for Graphical Elements
            9.1.5. Modifying Graphical Elements
            9.1.6. Saving Graphical Elements as Images
            9.1.7. Restacking Graphical Elements
            9.1.8. Deleting Graphical Elements
            9.2.1. Inserting Images
            9.2.2. Saving Images to New Files
            9.2.3. Deleting Images
            GUI Widgets
            9.3.1. Labels.
            9.3.1.1. Configuring the properties of the label
            9.3.2. Frames.
            9.3.2.1. Configuring the properties of the checkbox
            9.3.3. Checkboxes.
            9.3.3.1. Configuring the properties of the checkbox
            9.3.4. Scrollbars.
            9.3.4.1. Configuring the properties of the scrollbar
            9.3.5. Spinbuttons.
            9.3.5.1. Configuring the properties of the spinbutton
            9.3.6. Sliders.
            9.3.6.1. Configuring the properties of the slider
            9.3.7. Lists.
            9.3.8. Combination Boxes.
            9.4.1. Drawing Lines.
            9.4.1.1. Configuring the properties of the line
            9.4.2. Drawing Arrows.
            9.4.2.1. Configuring the properties of the arrow
            9.4.3. Drawing Rectangles.
            9.4.3.1. Configuring the properties of the rectangle
            9.4.4. Drawing Ovals.
            9.4.4.1. Configuring the properties of the oval
            Graphs ----
            10.1.1. The Graph Creation Process
            10.2.2 - Navigating the graph
            10.1.2. On Terminology
            10.1.3. The Components of Graphs
            10.1.4. The Graph Component Hierarchy
            The Graph Guru
            10.2.1. The components of the Graph Guru
            10.2.2. Navigating the graph guru
            Plot Types
            10.3.1. Area Plots
            10.3.3. Bubble Plots
            10.3.4. Colored XY Plots
            10.3.5. Column Plots
            10.3.6. Contour Plots
            10.3.7. DropBar Plots
            10.3.8. Line Plots
            10.3.9. Min-Max Plots
            10.3.10. Pie Plots
            10.3.11. Polar Plots
            10.3.12. Radar Plots
            10.3.13. Ring Plots
            10.3.14. Statistics Plots
            10.3.15. Surface Plots
            10.3.16. XY Scatterplots
            Configuring Graph Element Properties
            10.4.1. Background Panels: Graphs & Charts
            10.4.2. Titles and Axis Labels
            10.4.1 - Background Panels: Graphs
            10.4.3. Chart Legends
            10.4.4. Axes
            10.4.4.1. Category Axes
            10.4.4.2. Continuous Axes: Linear, Radial & Circular
            10.4.4.1 - Category Axes apply
            10.4.4.3. Grids
            10.4.5. Plots
            10.4.5.1. Bubble plots
            10.4.5.2. Pie plots
            10.4.5.3. Bar and Column plots
            10.4.5.4. Radar plots
            10.4.5.5. Ring plots
            10.4.6. Data Series
            10.4.6.1. Series line style
            10.4.6.2. Series filled style
            10.4.6.3. Series data: single values
            10.4.6.4. Series data: X and Y values
            10.4.6.5. Series data: bubble values
            10.4.6.6. Series error values
            Using Worksheets
            Worksheet Navigation
            11.2.1. Moving Around a Worksheet
            11.2.2. Moving the Selection
            11.3.1. Worksheet Appearance
            11.3.2. Workbook Appearance
            11.3.2.1. Zoom: Changing the Scale of a Sheet
            11.3.2.2. Full Screen Mode
            11.3.2.3. Displaying Workbook Tabs
            11.3.2.4. Displaying Grid Area Scrollbars
            11.3.3. Grouping Rows and Columns
            11.3.4. Display Panes
            General Settings
            11.4.1. Content Protection
            Print Settings
            Managing Worksheets
            11.6.1. Worksheets and the Menubar
            11.6.2. Worksheet Tab Context Menu
            11.6.3. Manage Sheets dialog
            11.6.4. Adding a Blank Worksheet
            11.6.5. Copying or Pasting a Worksheet
            Workbook Settings
            Document Summary
            Document Settings
            12.3.1. Document Printing Settings
            12.3.2. Document Autosave Settings
            12.3.3. Document Autocorrection Settings
            12.3.4. Document View Settings
            12.3.5. Document Protection Settings
            12.3.6. Document Validation Settings
            12.3.7. Document Recalculation Lag Settings
            12.3.1. Document Printing Settings
            12.3.4. Document View Settings
            12.3.5. Document Protection Settings
            12.3.6. Document Validation Settings
            12.3.7. Document Recalculation Lag Settings
            Document Named Elements
            Working with Files
            The Gnumeric Manual, version 1.12 Extending Gnumeric ----
            18.3.1. Installing and Building Gnumeric for Python
            18.3.1.1. Preliminaries
            18.3.1.2. In the Beginning (Installing and Building)
            18.3.1.2.1. Getting the binaries (Debian)
            18.3.1.2.2.  Getting and building the current Debianized source
            18.3.1.2.3. Getting and building the source from Git
            18.3.2. The Python Console
            18.3.2.1. Enabling the Python Console
            18.3.2.2. Playing with the Python console
            18.3.2.3. More fun with the Python console
            18.3.3. Using the built-in Python functions
            18.3.4. Writing your own Python functions
            18.3.4.1. Prepare the spellbook
            18.3.4.2. Writing new spells
            18.3.4.3. Do it yourself (mostly)
            18.3.4.4. More help
            18.3.4.5. Program Listings
            18.3.5. Upgrading
            18.3.6. Fancy tricks
            18.3.7. Features wanted, and Questions [**]

