set foldmethod=indent foldlevel=2
vim: fdm=indent:fdl=2:
___zzzz

TODO: NEW FILE = WM:s [*****]
XFCE4
            https://defkey.com/xfce-shortcuts#
                Window Manipulation ----
                Alt + Space
                Window operations menu
                    Esc
                Dismiss/cancel dialog
                    Alt + Tab
                Switch to next window
                    ↑  Shift + Alt + Tab
                Switch to previous window
                    Super + Tab
                Next window of current application
                    Alt + F4
                Close window
                    Alt + F7
                Move window
                    Alt + F8
                Resize window
                    Alt + F9
                Hide window
                    Alt + F10
                Maximize window
                    Alt + Shift + Page Down
                Raise/lower window
                    Alt + F11
                Toggle fullscreen
                    Alt + F12
                Toggle above
                    Ctrl + Alt + D
                Show desktop

                Move window to workplace ----
                    Alt + F6
                Stick window (show in all workspace)
                    Alt + F5
                Maximize window horizontally
                    Ctrl + Alt + End
                Move window to next workspace
                    Ctrl + Alt + Home
                Move window to previous workspace
                    Ctrl + Alt + Num 1
                Move window to workspace 1
                    Ctrl + Alt + Num 2
                Move window to workspace 2
                    Ctrl + F1

                Switching Workspace ----
                … to F9: Switch to workspace 1-9
                    Ctrl + Alt + ←  →
                Next/Previous workspace
                    Ctrl + Alt + ↑
                Upper workspace
                    Ctrl + Alt + ↓
                Bottom workspace
                    Ctrl + Alt + ←
                Left workspace
                    Ctrl + Alt + →
                Right workspace
                    Ctrl + F1
                Go to workspace 1
                    Ctrl + F2
                Go to workspace 2
                    Alt + Insert
                Add a workspace
                    Alt + Del
                Delete last workspace
                    Ctrl + Alt + Del
                Lock the screen
                    Super + F
                Application shortcuts ----
                File manager
                    Super + M
                Mail reader
                    Ctrl + Alt + T
                Terminal emulator
                    or Super + T
                    Super + W
                Web browser
                    Super + 4
                LibreOffice Calc
                    Super + 3
                LibreOffice Writer
                    Super + E
                Mousepad
                    Super + 1
                Parole
                    Super + R
                App Finder
                    Alt + F1
                Popup applications menu
                    Ctrl + Esc
                Whisker menu
                    Print Screen
                xfce4-screenshooter -f
                    Alt + Print Screen
                xfce4-screenshooter -w
                    Ctrl + Alt + L
                Start xflock4
                    or Ctrl + Alt + Del
                    Alt + F2
                Start xfrun4
                    Ctrl + Alt + Esc
                Start xkill
                    Super + P
                XF86Display xfce4-display-settings --minimal
                    Super + P
                Show context mMenu. xfdesktop --menu
                    Super + P
                Lock screen. xflock4
                    Super + P
                Start prompt to run command. xfrun4
                Mouse wheel ----
                Hover your mouse over the taskbar, then scroll mouse wheel to cycle windows.
                Advertisement
                Hover your mouse over empty space on desktop, then scroll mouse wheel to cycle workspaces
            ----
              https://stackoverflow.com/questions/42526711/is-there-a-list-of-commands-for-keyboard-shortcuts-in-xfce-4
            ----
            https://tutorialtactic.com/blog/xfce-shortcuts/
                -- Action  Xfce Shortcut keys --
            Window Manipulation Shortcuts ----
                Window operations menu
                    Alt + Spacebar
                Dismiss/cancel dialog
                    Esc
                Switch to the next window
                    Alt + Tab
                Switch to the previous window
                    Shift + Alt + Tab
                Next window of the current application
                    Super + Tab
                Close window
                    Alt + F4
                Move window
                    Alt + F7
                Resize window
                    Alt + F8
                Hide window
                    Alt + F9
                Maximize window
                    Alt + F10
              Raise/lower window  sa-PgUp/sa-PgDn
                Toggle fullscreen
                    Alt + F11
                Toggle above
                    Alt + F12
              Show desktop  Ctrl + Alt + D
            Move the window to workplace Shortcuts ----
              Stick window (show in all workspaces)  Alt + F6
                Maximize window horizontally
                    Alt + F5
                Move window to next workspace
                    Ctrl + Alt + End
                Move the window to the previous workspace
                    Ctrl + Alt + Home
                Move window to workspace 1
                    Ctrl + Alt + 1
                Move window to workspace 2
                    Ctrl + Alt + 2
            Switching workspace Shortcuts ----
                Switch to workspace 1-9
                    Alt + F1… to F9
                Next workspace
                    Ctrl + Alt + Left Arrow key
                Previous workspace
                    Ctrl + Alt + Right Arrow Key
                Upper workspace
                    Ctrl + Alt + Up Arrow Key
                Bottom workspace
                    Ctrl + Alt + Down Arrow Key
                Left workspace
                    Ctrl + Alt + Left Arrow key
                Right workspace
                    Ctrl + Alt + Right Arrow Key
                Go to workspace 1
                    Ctrl + F1
                Go to workspace 2
                    Ctrl + F2
            Add a workspace  Alt + Insert
                Delete last workspace
                    Alt + Delete
                Lock the screen
                    Ctrl + Alt + Delete
            Application Shortcuts ----
                File manager
                    Super + F
                Mail reader
                    Super + M
            Terminal emulator  Ctrl + Alt + T
                Web browser
                    Super + W
                LibreOffice Calc
                    Super + 4
                LibreOffice Writer
                    Super + 5
                Mousepad
                    Super + E
                Parole
                    Super + 1
              App Finder
                    Super + R
                Popup applications menu
                    Alt + F1
              Whisker menu  Ctrl + Esc
                xfce4-screenshooter -f
                    Print Screen key
                xfce4-screenshooter -w
                    Alt + Print Screen key
                Start xflock4
                    Ctrl + Alt + L
                Start xfrun4
                    Alt + F2
              Start xkill
                    Ctrl + Alt + Esc
            Other Shortcuts ----
                XF86Display xfce4-display-settings –minimal
                    Super + P
                Show context mMenu. xfdesktop –menu
                    Super + P
                Lock screen. xflock4
                    Super + P
                Start prompt to run command. xfrun4
                    Super + P
Fluxbox

WinKeys  @@   ~/Dropbox/rsc/data/lists/learnqna/vanki/Win10keysdef.tags.txt
                    Cycle through windows/elements in order opened
                        .
                        a-Esc
                    ---- Taskbar
                    Cycle through Apps in Taskbar
                        .
                        w-Tab
                    Show Jumplist for App {N} in Taskbar
                        .
                        wa-{N}
                    Run App in Taskbar as Administrator
                        .
                        cs-Click app-icon
                    ----
                    Narrator
                        .
                        w-Enter
                    ----
        Show windows (persistent) + Select with Arrows
            w-Tab // ca-Tab
                cycle through elements (=in order opened) (*) @
                    a-esc
            task view(?)/cycle through apps in taskbar  #small 'several win.s' icon @@
                w-tab  #note: curr. running programs appear as icons on the bottom taskbar + respects virtual desktops as separate workspaces
                ----
                move tile in focus (=on start-menu)  **
                    csa-arrows

                record video screencast *
                    wa-r
                record video =last 30 sec.s (*)
                    wa-g
                screencast: show time
                    wa-t
                screenshot (*)
                    wa-prscr
                media/game bar  # note plugin for win10
                    w-g

                copy(alt.)
                    c-ins
                paste(alt.)
                    a-ins

                maxim./minim. win. **
                    w-upp/ner
                minim./maxim. all win.s
                    w-m / ws-m
                minim./restore windows (=except active win.) ** @
                    w-home
                ----
                show/hide desktop
                    w-d
                peek desktop ((*)) @
                    w-,

                refresh (=win. etc)
                    c-r / f5
                zoom in/out
                    w-+/-

                add virtual deskt. (*) @
                    cw-d (or D(??))  + go to task view (eg. w. 'task view'["small windows"] button)
                switch virtual deskt.
                    cw-left/right
                close curr. virt. deskt.
                    cw-f4
                Create: Send window to other Desktop/V-Desktop

            Open Universal Search @(@)
                w-s  #=searchbox/cortana, or file explorer?
                show/activate startmenu (*)
                    w / c-esc
            Cortana Listen-Mode @
                ws-c
                # 'Hey Cortana'
                open cortana
                    a-c  #+in edge (=??)
                    (may need to be enabled in settings)

                open file explorer (@)
                    w-e
                file expl: activate address-field (@)
                    a-d
            file expl: select searchbox @
                c-e/f
            Search file in File Explorer @
                f3
                explorer: show adress bar list (??) @
                    f4
                show/display dir.s above curr/active @
                    cs-e
                (manipulate search-tree)
                    (*, +, - etc)
            show preview panel (???/*) (@)
                a-p
                [directory navigation(*)]
                    =a-arrows  #=like web browsers etc
                show/go to last dir  #or dir above(?)
                    bs / a-upp(?)

                +home, end etc??

                set focus to the taskbar
                    w-t
                run/change to app N on taskbar (*)
                    w-num.
                new instance app N on taskbar (*) @
                    s-clicka apps taskbar-button
            Run app (on taskb.(??)) as administrator (*) @
                cs-click taskb-app
            SHOW WIN-MENU FOR TASKBAR-APP/GROUP (*) @@
                s-rmbclick taskb-app
                go through(??) win. taskb.app's group (??/*) !!!!
                    c-click grouped app's button
                change to latest instance app N on taskbar / new instance app N on taskb. / run app N on taskb.
            show jumplist for app N on taskbar ****** !!!!! @@!
                wa-num.

                run-dialogue @
                    w-r
                        1. Launching Applications:

                        Directly launch programs: Type the program's name (e.g., "notepad," "wordpad," "chrome") and press Enter.
                        Open files and folders: Type the full or partial path to the file or folder (e.g., "C:\Users\YourName\Documents\MyProject").

                        2. Accessing System Tools:

                        Open Control Panel: Type "control" and press Enter.
                        Launch Device Manager: Type "devmgmt.msc" and press Enter.
                        Open Task Manager: Type "taskmgr" and press Enter.
                        Access System Information: Type "msinfo32" and press Enter.
                        Open Command Prompt: Type "cmd" and press Enter.
                        Open PowerShell: Type "powershell" and press Enter.

                        3. Network Commands:

                        Open Network Connections: Type "ncpa.cpl" and press Enter.
                        Run Command Prompt as Administrator: Type "cmd" and press Ctrl+Shift+Enter.

                        4. Special Commands:

                        Open Run dialog as Administrator: Type "runas /user:Administrator" and press Enter. (Requires administrator credentials)
                        Access hidden system files: Type "explorer shell:::{4234d49b-0246-11d1-9a01-00c048da51dd}" and press Enter.

                        5. Customizing the Run Dialog:

                        Recent Commands: The Run dialog maintains a history of recently used commands. You can use the Up and Down arrow keys to cycle through these commands.

                        Key Advantages:

                        Speed and Efficiency: Significantly faster than navigating through the Start Menu or desktop icons.
                        Keyboard-centric Workflow: Reduces reliance on the mouse, improving workflow for power users.
                        Access to Advanced Tools: Provides quick access to system tools and utilities that might be difficult to find otherwise.
                        Customization: The ability to create and use custom commands further enhances its versatility.

            quick connect
                w-k
                [=easily connect to external screens, bluetooth etc]
                ('ease of access'-center =??)
                    w-u

                taskman(ager)

            action center(*)  #(right on taskbar) "pratbubblan" (+vol, bluetooth etc(??)) @
                w-a  #emails, appointments, computer's performance etc
        quickshutdown computer
            w-x uu
        ----
        quicklink menu(?)
            w-x

            Narrator(*)  *******  !!!!! @@
                cw-ent  #browser + text documents
                [+setting: Ease of Access > Narrator
                 & toggle switch to On]

                (+a-shift_left)

            Change Keyboard layout (=x2 *) @
                w-space (+a-lshift)
            change to last sel. keyb. layout (*)
                cw-space
                Chin. ime on/off (@)  ___Hm
                    c-space(??)
                    [=with chinese language pack installed]

            lock computer/switch account @
                w-l

                cycle through screen elements @
                    f6
                activate menu bar (in window) (@)
                    f10
            show shortcut-menu for sel. obj. @@
                s-f10

                Select text-Block (*)  ***** (=Test) @
                    a-'selection key'(?)

            focus to notif. area @  #=Might be bluetooth-etc popup-menu (or to the right of)
                w-b
                cycle through notif.s @
                    w-v/ws-v
                ----
                system properties dialog @ @@
                    w-pause/break

            choose presentation display
                w-p
            move win. monitor left/right @
                sw-left/right

                focus to windows tip  (????) @
                    w-j

                move in output history (=term. ?)
                    c-up/down
                move/delete chars/output terminal((*))
                    c-home/end
            mark mode(??)  (=seems to be concerning cut/paste in terminal) (??/*)
                c-m

                show commands available in  ______?
                line up/down in outp. history(?)
                maximize win. left/right
                stretch/squeeze win. top/bot
.    winkeys extras (=picklist)
                windows 10 vankilist (=for dummies etc) ****

                evince -p 22 Documents/doks_mernytt/DataTekn/w1-01_fd.pdf &

                p13

                start / login

                unlock lockscreen
                        keypress / mousepress(+swipe) / touchswipe  p22_wfd
                 show password at login (??)
                        a-f8
                (add login/account picture)
                        'change account settings'
                (change/add password)
                        w-i, accounts > change/add  #tip: some numbers, ucase char.s (etc.)
                [reset lost password for win 10]
                        Ch. 14 - Password Reset Disk  (+on http://live.com)
                        search 'password reset disk' in cortana **  wfd-p279
                (get w10 to stop asking passw. every time screen goes dark)
                        the 'Never'-option wh. setting keyword  p27_wfd
                (onedrive, microsoft account etc)
                        =email + password for registration  #can store files, download ms-store apps, monitor children's activities etc
                (startmenu content)
                        some app-tiles (right), Recently used apps (left top), some freq.ly accessed places (left bot)  p30-wfd

                ((if tiles fill your entire screen))
                        click 'action center' icon  p32-wfd
                quick/sneek peek destop (**)
                        mouse pointer to bot-right corner of desktop (??/*)
                (minitips navigating start menu)
                        winkey + write  ++  arrowkeys(!)
                ((teterm: smartphone))
                        cellphones powerful enough to run small programs (as well as make phone calls)
                (change user account settings from the startmenu)
                        click user name part (=top left)
                ((teterm: live tile))
                        =tiles that update to show live information on their tile  (=like weather apps etc)
                [some free apps in startmenu]
                        alarms and clocks, maps, contact support, solitaire, money, onenote, Phone Companion, store

                customize start menu

                remove item from start menu **
                        rmbclick + 'unpin from start'
                add item to start menu **! @@ @
                        sel. item (in apps, desktop), rmbclick + 'pin to start'  #folders, files, libraries etc (**)
                (tip: theory for organizing apps in startmenu into groups) @
                        eg. 'may want to organize into four groups: People, Work, Play, Web'
                Organizing Tiles in Start Menu =into Groups/Categories **!! @
                        resize tiles (rmbclick-sel. 'resize'), move tiles (clickdrag//csa-arrows), clickdrag tile from existing group (onto hor. bar forming), rename group (click in blank box above group)
                ((turn app tile in start menu into a live tile)) @
                        =enlarging the app tile (in the start menu) turns it into a live tile
                tip: add website to start-menu (incl. into existing groups) @(@)
                        in edge: settings > pin to start
                more settings to customize start menu @
                        w-i > personalization  eg:

                        - show most used apps
                        - show recently added apps
                        - choose folders appearing on start (eg. Documents)
                        - use start Full screen (?/*)
                        - show recently opened items in jumplist on start bar (?/*)

                ((quick shutdown))
                        rmbclick start button, shut down/sign out, shut down
                (log out temp. from 'user account pic' (in start menu))
                        'another account'
                Start up a PowerShell (in win10) **! @
                        in cortana search: cmd  **!

                ___ZZZZ  += p49

                'what does an app/object do?'
                        hover over (tooltip turns up)  + rmbclick (=check pop-up menus) *
            set wallpaper
                settings > personalization
            change theme (=entire look of win desktop) @
                    settings > personalization > themes
            recycle bin: sort by date
                    rmbclick empty area inside rec. bin
                move taskbar to edge x @(@)
                    drag to side (+rmb-click and desel. 'lock' if can't move)
                Task Bar Jump List **** @@
                        eg. open keyb.layout-manager w.(!) recent dok / win Edge w. recent website   rmbclick // wa-num.  #eg. wa-2 if Edge is second icon on taskbar **
                (taskbar: minimize all win.s)
                        thin hidden strip  =right edge of taskbar
                bring up sound mixer
                        dclick bot right volume icon
                task manager
                        action center(??) / ca-del

                Summoning Cortana **
                        wfd-p13, 

                        start menu search box, "hey cortana!", w(s)-c (cortana listen mode)  a-c (open cortana)

                    (example uses:
                     - search for files  #from yesterday
                     - set appointment in calendar
                            'remind me to _ at 8 oclock'
                     - open file/program / web site  #go to
                     - get up-to-date traffic information
                     - search/get info from internet
                            'how tall is _'
                     (+follow ups: 'who is his wife?' etc) **
                      - find restaur.s near me
                     
                     + time, weather, questions ('when does the sun set?'), 
                        show headlines, create notes
                     - translate _ into spanish
                     - math/conversions
                     - define x
                     - 'where is my package?'

                     - open settings/action center
                     - turn on bluetooth (etc)

                     - 'Remind me to X'
                     - 'show me my reminders'
                find file (etc.) w. cortana @
                    type/input some words from file(=content or name?)  #searches 'ci'
                open setting/program w. cortana
                    input name of setting / program
                reorder + choose apps on taskbar (*)
                        p67  (including 'peak at desktop' feature

                placing (eg. two) win.s side by side **!! @(@)
                    clickdrag title of win to edge of the desktop (+release) //
                    rmbclick blank part of taskbar +
                     'show windows ...'(eg. 'side by side', 'stacked' etc) //
                    flow win. to left / right edge of screen  = w-left/right **
                tip: window size
                        resizing win.s makes win10 remember its size for next time opening
                change how w10 reacts to inserted disk etc (*)
                    rmbclick device in the 'this comp.' section  +  open 'autoplay'
                quicksearch file in fexplorer folder (*)
                    click any item + start typing name of file etc **
                libraries (!) @
                    special sort of superfolders introduced in w7  rmbclick navigation pane + 'show libraries'
            show hidden files
                    (or using w-r)
                    click view-options (in explorer win??)
                more about onedrive
                        wfd-p115

                choose program to open file
                        rmbclick + choose app option
                quickburn via desktop shortcut  p140
                        x
                limiting/narrowing search by cortana etc @
                        narrow primary search by two drop-down menus: sort by (eg. most relevant)  show (eg. doks, folders)
                finding files locally (=in folders etc)
                    search from/in explorer  w-s

                    +narrow by categories (date mod, type, size etc) *
                tip searching/finding files (**) @@
                    Can assign category-tags to files **!  wfd-p155(*)
                finding files by author, date modif. etc *  (like unix find) @
                    explorer 'details view'  + tick categories to filter  wfd-p156
                categorizing photos  (+see more!)
                    assign tags to photos  wfd-p156
                (printing envelopes and 'avery labels')
                        ??  = wfd-p165  +'buy a little rubber stamp w. your return address'
                [scanning from the start menu + Windows Scan (app)]
                        wfd-p171

                ISP

                Open one/several pages as 'home' pages in Edge **! @
                        settings > open with  + enter url, click '+' for adding more pages **
                stashing favorite web pages () @
                        favorites  and  reading list **
                call cortana for searching phrase on web site (etc)
                        highlight text, rmbclick + choose cortana
                the 'people' app
                        contacts, messaging etc(??)  wfd-p207
                managing appointments in calendar
                        wfd-p210
                security and anti-virus
                        windows defender  wfd-p214
                (children controls)
                        wfd-p218

                Find a Setting ***(*) @
                        Enter name of Setting in Cortana/Search box  (eg. display, mouse, user, privacy)
                the Desktop's Control Panel (**)  =change settings for an obj. @@
                        rmbclick start button + choose control panel  ++One can almost always jump to relevant settings for an obj. by rmbclicking obj. in question + choosing properties **!!
                Changing appearance of w10, add apps to taskbar (etc)
                        Appearance and Personalization
                file explorer options, font installing and settings(?) (**)
                        =see more  wfd-p231
                choosing a screen saver  (*)
                        search 'screen saver' in start-search
                (adding a second monitor / projector)
                        wfd-p236
                Installing + setting up speakers etc @
                        rmbclick taskbar's speaker icon + choose playback devices
                adding + installing bluetooth devices
                        w-i  + set    (0000 if wants code)
                Finetune speech recogn. settings @
                        time and language settings
                uninstalling programs
                        eg. from Settings (*!)
                ease of access settings: closed captions
                        ?? (=see more)
                enlarge mouse pointer
                        ease of access settings (!)

                methods for backup and restore (=for w10)
                        creating restore point (semi-legacy), the refresh-system (=newer)  wfd-p251
                setting backup option(s) for files
                        w10 file history feature  wfd-p252,254, p345*!
                finding technical information ab. your computer
                    w-i  system / security > system
                (create system image backup)
                        wfd-p257
                free up disk space  ** (=old system files etc)  +'Make computer run better/faster' @
                    w-i  system and security + 'free up disk space'
                set what physical power button / shutting laptop cover does
                    wfd-p261
                setting up devices + managing device drivers (*)
                        wfd-p263-264

                Set up new user account (*)
                        wfd-(266),268  w-i  'accounts'
                (networks etc)
                        wfd-p282
                teterm: network name
                        short user-set name for network  = SSID
                (good network sec. levels)
                        wep, wpa, wpa2
                'intranet'(?) for win10
                        'Homegroup'  =shared folders for 2 computers (etc)  wfd-p288
                (printer and network)
                        wfd-p295

                w10 Music app
                        start menu + Music (=tile)
                (+windows media player)
                        wfd-p301
                organizing music files etc
                        tags files  wfd-p306
                (Listening to Internet Radio Stations)
                        eg soma fm, tunein  etc  wfd-p315
                save playlist
                        can be done in wmedia player (??)  wfd-p317

                Restore default settings etc @
                        button (=Restore defaults)  wfd-p352


                        Alt + F4         Close active window. (If no active window present, then shutdown box appears.)
                ESC         Close current task.
                Windows key + I         Open Settings app.
                Windows key + E         Open File Explorer.
                Windows key + A         Open Action center.
                Windows key + D         Display and hide the desktop.
                Windows key + L         Lock device.
                Windows key + V         Open Clipboard bin. @
                Windows key + Period (.) or semicolon (;)         Open emoji panel.

                PrtScn         Take screenshot and stores it in clipboard.
                Windows key + PrtScn         Capture full screenshot in the "Screenshots" folder.
                Windows key + Shift + S         Capture part of the screen with Snip & Sketch. @@!


                Desktop shortcuts

                You can use these keyboard shortcuts to open, close, navigate, and complete specific tasks more quickly throughout the desktop experience, including on Start menu, taskbar, Settings, and more.
                Keyboard shortcut         Action
                Windows key (or Ctrl + Esc)         Open Start menu.
                Ctrl + Arrow keys         Change Start menu size.
                Ctrl + Shift + Esc         Open Task Manager.
                Ctrl + Shift         Switch keyboard layout.
                Ctrl + F5 (or Ctrl + R)         Refresh current window.
                Ctrl + Alt + Tab         View open apps.
                Ctrl + Arrow keys (to select) + Spacebar         Select multiple items on desktop or File Explorer.
                Alt + Underlined letter         Runs command for the underlined letter in apps.
                Alt + Page Up         Move up one screen.
                Alt + Page down         Move down one screen.
                Alt + Esc         Cycle through open windows.
                Alt + Spacebar         Open context menu for the active window.
                Alt + F8         Reveals typed password in Sign-in screen.
                Shift + Click app button         Open another instance of an app from the taskbar.
                Ctrl + Shift + Click app button         Run app as administrator from the taskbar.
                Shift + Right-click app button         Show window menu for the app from the taskbar.
                Ctrl + Click a grouped app button         Cycle through windows in the group from the taskbar.
                Shift + Right-click grouped app button         Show window menu for the group from the taskbar.
                Ctrl + Up arrow key         Move the cursor to the beginning of the previous paragraph
                Ctrl + Down arrow key         Move the cursor to the beginning of the next paragraph.
                Ctrl + Shift + Arrow key         Select block of text.
                  Ctrl + Spacebar         Enable or disable Chinese IME.

                Shift + F10         Open context menu for selected item.
                F10         Enable app menu bar.

                Windows key + X         Open Quick Link menu.
                Windows key + Number (0-9)         Open app in number position from the taskbar.
                Windows key + T         Cycle through apps in the taskbar.
                Windows key + Alt + Number (0-9)         Open Jump List of the app in number position from the taskbar.
                Windows key + D         Display and hide the desktop.

                Windows key + M         Minimize all windows.
                Windows key + Shift + M         Restore minimized windows on the desktop.
                Windows key + Home         Minimize or maximize all but the active desktop window.

                Windows key + Shift + Up arrow key         Stretch desktop window to the top and bottom of the screen.
                Windows key + Shift + Down arrow key         Maximize or minimize active desktop windows vertically while maintaining width.

                Windows key + Shift + Left arrow key         Move active window to monitor on the left.
                Windows key + Shift + Right arrow key         Move active window to monitor on the right.

                Windows key + S ( or Q)         Open Search.
                Windows key + Alt + D         Open date and time in the taskbar.
                        Windows key + Tab         Open Task View.

                Windows key + Ctrl + D         Create new virtual desktop.
                Windows key + Ctrl + F4         Close active virtual desktop.
                Windows key + Ctrl + Right arrow         Switch to the virtual desktop on the right.
                Windows key + Ctrl + Left arrow         Switch to the virtual desktop on the left.

                Windows key + P         Open Project settings.
                Windows key + A         Open Action center.
                Windows key + I         Open Settings app.
                Backspace         Return to Settings app home page.
                File Explorer shortcuts

                On Windows 10, File Explorer includes many keyboard shortcuts to help you complete tasks a little quicker.

                Here's a list with the most useful shortcuts for File Explorer.
                Keyboard shortcut         Action
                Windows key + E         Open File Explorer.

                Alt + D         Select address bar.
                Ctrl + E (or F)         Select search box.
                Ctrl + N         Open new window.
                Ctrl + W         Close active window.
                Ctrl + F (or F3)         Start search.
                Ctrl + Mouse scroll wheel         Change view file and folder.

                Ctrl + Shift + E         Expands all folders from the tree in the navigation pane.

                Ctrl + Shift + N         Create new folder on desktop or File Explorer.
                Ctrl + L         Focus on the address bar.

                Ctrl + Shift + Number (1-8)         Changes folder view.
                Alt + P         Display preview panel.

                Alt + Enter         Open Properties settings for the selected item.
                Alt + Right arrow key         View next folder.
                Alt + Left arrow key (or Backspace)         View previous folder.
                Alt + Up arrow         Move up a level in the folder path.
                F11         Switch active window full-screen mode.
                F5         Refresh the instance of File Explorer.
                F2         Rename selected item.
                F4         Switch focus to address bar.
                F5         Refresh File Explorer's current view.
                F6         Cycle through elements on the screen.
                Home         Scroll to top of the window.
                End         Scroll to bottom of window.
                Command Prompt shortcuts


                If you use Command Prompt, you can use these keyboard shortcuts to work a little more efficiently.
                Keyboard shortcut         Action
                Ctrl + A         Select all content of the current line.
                Ctrl + C (or Ctrl + Insert)         Copy selected items to clipboard.
                Ctrl + V (or Shift + Insert)         Paste content from clipboard.
                Ctrl + M         Starts mark mode.
                Ctrl + Up arrow key         Move screen up one line.
                Ctrl + Down arrow key         Move screen down one line.
                Ctrl + F         Open search for Command Prompt.
                Left or right arrow keys         Move cursor left or right in the current line.
                Up or down arrow keys         Cycle through command history of the current session.
                Page up         Move cursor one page up.
                Page down         Move cursor one page down.
                Ctrl + Home         Scroll to top of the console.
                Ctrl + End         Scroll to the bottom of the console.
                Windows key shortcuts

                Using the Windows key combined with other keys, you can perform many useful tasks, such as launch Settings, File Explorer, Run command, apps pinned in the taskbar, or you can open specific features like Narrator or Magnifier. You can also accomplish tasks like controlling windows, virtual desktops, taking screenshots, locking your device, and a lot more.

                Here's a list with all the most common keyboard shortcuts using the Windows key.
                Keyboard shortcut         Action
                Windows key         Open Start menu.
                Windows key + A         Open Action center.
                Windows key + S ( or Q)         Open Search.
                Windows key + D         Display and hide the desktop.
                Windows key + L         Locks computer.
                Windows key + M         Minimize all windows.
                Windows key + B         Set focus notification area in the taskbar.
                Windows key + C         Launch Cortana app.
                Windows key + F         Launch Feedback Hub app.
                Windows key + G         Launch Game bar app.

                Windows key + Y         Change input between desktop and Mixed Reality.
                Windows key + O         Lock device orientation.
                Windows key + T         Cycle through apps in the taskbar.
                Windows key + Z         Switch input between the desktop experience and Windows Mixed Reality.
                Windows key + J         Set focus on a tip for Windows 10 when applicable.k
                Windows key + H         Open dictation feature.
                Windows key + E         Open File Explorer.
                Windows key + I         Open Settings.
                Windows key + R         Open Run command.
                Windows key + K         Open Connect settings.
                Windows key + X         Open Quick Link menu.
                Windows key + V         Open Clipboard bin.
                Windows key + W         Open the Windows Ink Workspace.
                Windows key + U         Open Ease of Access settings.
                Windows key + P         Open Project settings.
                Windows key + Ctrl + Enter         Open Narrator.
                Windows key + Plus (+)         Zoom in using the magnifier.
                Windows key + Minus (-)         Zoom out using the magnifier.
                Windows key + Esc         Exit magnifier.
                Windows key + Forward-slash (/)         Start IME reconversion.
                Windows key + Comma (,)         Temporarily peek at the desktop.
                Windows key + Up arrow key         Maximize app windows.
                Windows key + Down arrow key         Minimize app windows.
                Windows key + Home         Minimize or maximize all but the active desktop window.
                Windows key + Shift + M         Restore minimized windows on the desktop.
                Windows key + Shift + Up arrow key         Stretch desktop window to the top and bottom of the screen.
                Windows key + Shift + Down arrow key         Maximize or minimize active windows vertically while maintaining width.
                Windows key + Shift + Left arrow key         Move active window to monitor on the left.
                Windows key + Shift + Right arrow key         Move active window to monitor on the right.
                Windows key + Left arrow key         Snap app or window left.
                Windows key + Right arrow key         Snap app or window right.
                Windows key + Number (0-9)         Open app in number position in the taskbar.
                Windows key + Shift + Number (0-9)         Open another instance of the app in number position in the taskbar.
                Windows key + Ctrl + Number (0-9)         Switch to last active window of the app in number position in the taskbar.
                Windows key + Alt + Number (0-9)         Open Jump List of the app in number position in the taskbar.
                Windows key + Ctrl + Shift + Number (0-9)         Open another instance as an administrator of the app in number position in the taskbar.
                Windows key + Ctrl + Spacebar         Change previous selected input option.
                Windows key + Spacebar         Change keyboard layout and input language.
                Windows key + Tab         Open Task View.
                Windows key + Ctrl + D         Create a virtual desktop.
                Windows key + Ctrl + F4         Close active virtual desktop.
                Windows key + Ctrl + Right arrow         Switch to the virtual desktop on the right.
                Windows key + Ctrl + Left arrow         Switch to the virtual desktop on the left.
                Windows key + Ctrl + Shift + B         Wake up the device when black or a blank screen.
                Windows key + PrtScn         Capture full screenshot in the "Screenshots" folder.
                Windows key + Shift + S         Create part of the screen screenshot.
                Windows key + Shift + V         Cycle through notifications..
                Windows key + Ctrl + F         Open search for device on domain network.
                Windows key + Ctrl + Q         Open Quick Assist.
                Windows key + Alt + D         Open date and time in the taskbar.
                Windows key + Period (.) or semicolon (;)         Open emoji panel.
                Windows key + Pause         Show System Properties dialog box.
win explorer
freecommander
            TODO: Add accelerator-keys too
            File: Attribute/Timestamp... (+properties)
                s-Enter
                File: Change case...
            File: Compare text files...
                ca-v
                File: Context menu
                    s-f10
            File: Copy
                f5, s-f5
                File: Create MD5-checksums
                    c-k
            File: Delete
                f8
                File: Delete without basket
                    s-f8
            File: Edit
                f4
                File: Edit new
                    s-f4
                File: Exit
                    a-f4
                File: Find computer
            File: Move
                f6, s-f6
            File: Multi rename...
                c-m
                File: New item
            File: New text file
                cs-n
                File: Pack
                    a-f5
                File: Rename
                    f2
            File: Search in folders...
                c-f7
                File: Search
                    a-f7
                File: Split...
                    cs-i  # el. cs-l
                File: Unpack
                    a-f6
                File: Verify MD5-checksums
                File: View
                    f3
            File: View external
                s-f3
                File: Wipe
                    cs-f8

                Edit: Copy
                    c-c
                Edit: Copy file name to clipboard (8.3)
                Edit: Copy file path to clipboard (8.3)
                Edit: Copy file path to clipboard (UNC)
                Edit: Copy file path to clipboard (Web)
            Edit: Copy full name as text
                a-Ins
            Edit: Copy full path as text
                ca-Ins
                Edit: Copy full path as text (8.3)
                Edit: Copy full path as text (UNC)
                Edit: Copy full path as text (Web)
                Edit: Cut
                    c-x
                Edit: Invert selection
                    k*
            Edit: Invert selection - only files
                c-k*
                Edit: Load selection from file
                Edit: Paste
                    c-v
                Edit: Save selection
                Edit: Select all
                    c-a
            Edit: Select all files
                c-k/  # or c-k+
            Edit: Select files with same ext.
                a-k+
            Edit: Select group...
                k+
                Edit: Select same in other pane
                Edit: Unselect all
                    c_k-
            Edit: Unselect files with same ext.
                a_k-
            Edit: Unselect group...
                k-

                Folder: Add current folder
                    cs-v
            Folder: Change left drive
                a-f1
            Folder: Change right drive
                a-f2
            Folder: Compare
                a-v
                Folder: Compare management
                Folder: Control panel
                Folder: Desktop
            Folder: Edit address bar
                a-g
                Folder: Edit
                    cs-f
            Folder: Favorite folder
                a-up
            Folder: Filter
                Folder: Filter off
            Folder: Go to folder...
                Folder: Go up
            Folder: History
                a-down
            Folder: History back
                a-left
            Folder: History next
                a-right
                Folder: Make folder/file list...
                Folder: My documents
            Folder: New
                f7
            Folder: Open folder in other pane
                Folder: Open folder in same pane
            Folder: Open left folder on the right
                c-right
            Folder: Open right folder on the left
                c-left
            Folder: Quick filter
                c-y
            Folder: Quick filter off
                a-y
            Folder: Root
                c-home
            Folder: Search
                s-f7
                Folder: Set filter
                    c-f
                Folder: Size of folders
                    a-f9
                Folder: Size of selected folders
                    c-f9
            Folder: Sort - switch
            Folder: Sort: Date/Time
                c-f5
            Folder: Sort: Extension
                cs-f4
            Folder: Sort: Name
                c-f3
            Folder: Sort: Size
                c-f6
            Folder: Sort: Type
                c-f4
                Folder: Sort: Unsorted
                Folder: Start-menu
            Folder: Synchronize
                a-s

                View: 100% <-> 50%
            View: Auto resize columns
                ca-num...
            View: Details
                c-f2
                View: Edit...
                    c-g
                View: Flat view - files
                    c-b
                View: Flat view - folders
                    cs-b
                View: Horizontal
                View: Large icons
                View: Layout restore
                View: Left to right
                    ca-right
                View: List
                    c-f1
                View: Minimize
                    s-Esc
            View: Only selected files
                c-s
            View: Quick view
                c-q
                View: Refresh
                    c-r
                View: Refresh all
                    cs-r
                View: Right to left
                    ca-left
                View: Same folder
                    c-e
                View: Set active pane
                    Tab
                View: Show/hide hidden and system files
                View: Small icons
                View: Split 0/100
                    cs-f1
                View: Split 100/0
                    cs-f3
                View: Split 25/75
                View: Split 50/50
                    cs-f2
                View: Split 75/25
            View: Split horizontal
                c-h
            View: Swap
                c-u
                View: Tab: Close all folder tabs
                    cs-w
                View: Tab: Close folder tab
                    c-w
                View: Tab: Copy folder tab
                View: Tab: Folder tab to left
                View: Tab: Folder tab to right
                View: Tab: Folder tabs left to right
                View: Tab: Folder tabs right to left
            View: Tab: Lock folder tab
                View: Tab: Lock folder tab - navigation to sub...
                View: Tab: Lock folder tab - no navigation
                View: Tab: New folder tab
                    c-t, cs-t
            View: Tab: Next folder tab
                c-tab
                View: Tab: Previous folder tab
                    cs-tab
                View: Tab: Open in new folder tab
                View: Tab: Open in new folder tab in other pane
                View: Tab: Rename and lock folder tab
            View: Tab: Swap folder tabs
                cs-u
                View: Thumbnails
                    c-i  # or c-l
            View: Toggle views  ___hm_eng
            View: Tree
                a-t
                View: Tree - collapsed selected
                View: Vertical
            View: Views
                s-f1

                Extras: Color - Background...
                Extras: Color - Font...
            Extras: Connect to network drive...
                f11
            Extras: Define shortcuts...
                Extras: DOS box...
                    c-d
                Extras: Favorite tools
            Extras: Favorite tools edit...
                cs-y
                Extras: Font...
                Extras: Open with...
                Extras: Run...
                Extras: Save settings
            Extras: Settings
                cs-s
                Extras: Switch language
                Extras: Take Desktop Snapshot...

                FTP: Disconnect
                FTP: Show FTP as drive

            Help: Contents
foxit reader (win)
                Keyboard Shortcuts and Single-key Accelerators
                Keyboard Shortcuts

                There are number of keyboard shortcuts that you can use to speed up your navigation within Foxit PDF Reader. You can both use the default keyboard shortcuts and customize your own shortcuts.
                Customize Keyboard Shortcuts

                To customize the keyboard shortcuts, please do as below:
                    Click  on the Quick Access Toolbar, and select More Commands. Or right-click the ribbon area and choose Customize Quick Access Toolbar.
                    In the pop-up Customize Tools dialog box, choose Keyboard tab.
                    Choose the command’s category in the Categories list and the action in the Command list.
                    Input the appropriate shortcut with your keyboard in the Press shortcut field, and click Assign to apply the shortcut. If you want to change the shortcut, just input the new one to replace it directly.
                    Note: The shortcut keys that have already being used cannot be reassigned. A message under the input tab will show you whether the shortcut key has been used by another command.
                    (Optional) To remove the shortcut for a command, select the command from the Command list, and click Remove. To revert all the keyboard shortcuts to the default settings, click Rest All.
                    Click OK to apply the settings and close the Customize Tools dialog box.
                Check the Default Keyboard Shortcuts

                To check the default keyboard shortcuts, click Help menu > Keyboard Mapping. Some particularly important ones are listed here:
                File Keys
                Action 	Shortcut
                Open File 	Command + O
                Close File 	Command + W
                Save As 	Command + Shift + S
                Print a Document 	Command + P
                Exit Foxit PDF Reader 	Command + Q
                Save 	Command + S
                Document Properties 	Command + D

                 
                View Keys
                Action 	Shortcut
                Zoom In 	Command + =
                Zoom Out 	Command + -
                Zoom To 	Command + M
                Actual Size 	Command + 1
                Fit Page 	Command + 2
                Fit Width 	Command + 3
                Fit Visible 	Command + 4
                Single Page 	Command + 7
                Continuous 	Command + 8
                Facing 	Command + 9
                Continuous Facing 	Command + 0
                Rotate Right 	Shift + Command + =
                Rotate Left 	Shift + Command + -
                Go to Page 	Command + G
                First Page 	Fn + Left Arrow
                Last Page 	Fn + Right Arrow
                Previous View 	Command + Left Arrow
                Next View 	Command + Right Arrow
                Full Screen 	Command + L
                AutoScroll 	Command + Shift + H
                Marquee Zoom 	Option + 5
                Show or Hide Rulers 	Command + Option + R
                Line Weights 	Control + Command + 5
                Show or Hide Navigation Panel 	F4 or Fn + F4 (if F4 is assigned to open the Launchpad on your device)

                 
                Edit Keys
                Action 	Shortcut
                Copy 	Command + C
                Cut 	Command + X
                Paste 	Command + V
                Undo 	Command + Z
                Redo 	Command + Shift + Z
                Select All 	Command + A
                Add Bookmark 	Command + B
                Preferences 	Command + K
                Delete the word before the cursor’s current position 	Command + Backspace
                Connect to Digital Rights Management Servers and Get Templates 	Command + Option + G
                Custom Templates 	Command + Option + T
                Unrestricted Access 	Command + U

                 
                Tool Keys
                Action 	Shortcut
                Hand Tool 	Command + 5
                Select Text and Image 	Command + 6
                Select Annotation 	Control + 6
                Find 	Command + F
                Find Previous 	Shift + F3
                Find Next 	F3

                 
                Comment Keys
                Action 	Shortcut
                Area Highlight 	Control + I
                Typewriter 	Control + T
                Textbox 	Control + X
                Callout   	Control + J
                Note 	Control + N
                Pin a File 	Control + B
                Rectangle 	Control + R
                Arrow 	Control + A 
                Line 	Control + L
                Oval 	Control + O
                Polyline 	Control + Y
                Polygon 	Control + G
                Cloud 	Control + C
                Pencil 	Control + P
                Eraser 	Control + E
                Measure Distance 	Control + Shift + D
                Measure Perimeter 	Control + Shift + P
                Measure Area 	Control + Shift + A
                Keep Tool Selected 	Control + Z
                Export All Comments 	Control + Shift + L
                Export Highlighted Text 	Control + Shift + I
                Show All Comments 	Control + U
                Hide All Comments 	Control + H
                Open All Popups 	Control + K
                Close All Popups 	Control + M

                 
                Help Keys
                Action 	Shortcut
                User Manual 	F1
                Single-key Accelerators

                You can select some commands and perform some actions with single-key accelerators. To enable single-key accelerators, please choose File in the Ribbon (or Foxit PDF Reader in the menu bar) > Preferences > General, and check Use single-key accelerators to access tools option in the Basic Tools group.
                Keys for Selecting Commands
                Command 	Single-key Accelerator
                Hand 	H
                Temporarily select Hand 	Spacebar
                Select Text and Image 	V
                Marquee 	Z
                Cycle through zoom commands: Marquee, Loupe, Magnifier 	Shift + Z
                Temporarily zoom out (when the Marquee command is selected) 	Command
                Temporarily select Zoom In 	Command + Spacebar
                Select Annotation 	R
                Link 	L
                Audio & Video 	M
                Cycle through Multimedia commands: Audio & Video, Image Annotation 	Shift + M

                 
                Keys for Working with Comments
                Action 	Single-key Accelerator
                Sticky Note 	S
                Replace Text 	E
                Stamp 	K
                Current highlighting command 	U
                Cycle through highlighting tools: Highlight, Underline, Strikeout 	Shift + U
                Current drawing markup command 	D
                Cycle through drawing markup commands: Cloud, Arrow, Line, Rectangle, Oval, Polygon Line, Polygon, Pencil, Eraser 	Shift + D
                Cloud 	Q
                Text Box 	X
                Current Stamp or Attach File command 	J
                Cycle through Stamp and Attach File 	Shift + J
                Move focus to next comment or form field 	Tab
                Move focus to previous comment or form field 	Shift + Tab
                Open pop-up note (or text field in Comments List) for comment that has focus 	Enter
                Close pop-up (or text field in Comments List) for comment that has focus 	Esc

                 
                Keys for Navigating a PDF Document
                Action 	Single-key Accelerator
                Previous screen 	Command + Left Arrow
                Next screen 	Command + Right Arrow
                First page 	Fn + Left Arrow
                Last page 	Fn + Right Arrow
                Previous page 	Left Arrow or Command + Up Arrow
                Next page 	Right Arrow or Command + Down Arrow
                Scroll up 	Up Arrow
                Scroll down 	Down Arrow
                Scroll (when Hand command is selected) 	Spacebar
                Zoom in 	Command + Equal Sign
                Zoom out 	Command + Hyphen

                 
                Keys for Working with Forms
                Action 	Single-key Accelerator
                Highlight fields 	Shift + L

                 
                Keys for Working with PDF Portfolios
                Action 	Single-key Accelerator
                Move focus to the next or previous row when in the body of the file list on the left 	Up Arrow or Down Arrow
                If pressed in the body of the file list, navigate one level up from within a folder 	Backspace
                If pressed when focus is on a row in the file list representing a subfolder, navigate to a subfolder, or open an attachment in Preview mode. 	Enter
                If in the body of the file list, move to the first or last row 	Fn + Left Arrow or Fn + Right Arrow
                If in the body of the file list, move to the next or last set of rows to fit the screen 	Command + Left Arrow or Command + Right Arrow
                Select or deselect all files 	Command + A or Shift + Command + A
                If in the body of the file list, extend the selection by adding the next row above or below the selected row 	Shift + Up Arrow or Shift + Down Arrow
                Change whether the row with focus is in the selection 	Command + Spacebar
                Move focus up or down one row without changing the selection 	Command + Up Arrow or Command + Down Arrow

                 
                Keys for Navigating Task Panes
                Action 	Single-key Accelerator
                Navigate to the next item in the panel 	Tab
                Open or close the Task pane 	Shift + F4

                 
                Keys for General Navigating
                Action 	Single-key Accelerator
                Close current document 	Command + Fn + F4
                Close all open documents 	Command + Shift + W
                Move focus to document pane 	Fn + F5
                Move focus to next comment, link, or form field in the document pane 	Tab
                Move focus to previous comment, link, or form field in the document pane 	Shift + Tab
                Activate selected tool, item (such as a movie clip or bookmark), or command 	Spacebar or Enter
                Open context menu 	Shift + Fn + F10
                Close context menu 	Fn + F10
                Return to Hand command or Select command 	Esc
                Move to previous search result and highlight it in the document 	Shift + Fn + F3
                Move to next search result and highlight it in the document 	Fn + F3
                Search previous document (with Search results displaying multiple files) 	Option + Shift + Left Arrow
                Search next document (with Search results displaying multiple files) 	Option + Shift + Right Arrow
                Select text (with Select command selected) 	Shift + Arrow Keys
                Select next word or deselect previous word (with Select command selected) 	Shift + Command + Right Arrow or Left Arrow

                 
                Keys for Working with Navigation Panels
                Action 	Single-key Accelerator
                Open and move focus to navigation pane 	Command + Shift + Fn + F5
                Move focus among the document, status bar and navigation panels 	Fn + F6
                Move focus to previous pane or panel 	Shift + Fn + F6
                Move among the elements of the active navigation panel 	Tab
                Move to previous or next navigation panel and make it active (when focus is on the panel button) 	Up Arrow or Down Arrow
                Move to next navigation panel and make it active (when focus is anywhere in the navigation pane) 	Command + Tab
                Expand the current bookmark (focus on Bookmarks panel) 	Right Arrow, or * (keypad), or Plus Sign (keypad)
                Collapse the current bookmark (focus on Bookmarks panel) 	Left Arrow, or Forward Slash (/), or Minus Sign (keypad)
                Expand all bookmarks 	Shift + *
                Collapse all bookmarks 	Shift + Forward Slash (/) (keypad)
                Move focus to next item in a navigation panel 	Down Arrow
                Move focus to previous item in a navigation panel 	Up Arrow

                 
                Keys for Navigating the Help Window
                Action 	Single-key Accelerator
                Open Help window 	F1

----
man
                .
                f
                g
                /
less
                .
                e
                v
Info
                http://www.computerhope.com/unix/info.htm
                tip - info-pages (to practice with) ----
                    info find  **
                    info guix  ___lang=spa
                    info ed
                    info man
                    info info
                    info coreutils
                    info a2ps
                    EMACS
                Te -----
                    show footnotes associated with this node (=in another window)  __
                        Esc c-f  (show-footnotes)
                    ----
                    'subtopics': looks like what
                        lines following '*' in a menu
                        * Topic: Node about subject (+text that follows)
                    'menu': looks like
                        * Menu (=first line "that makes it clear it's a menu")
                    'node': looks like  (1.2)
                    'header'
                    'cross-reference'
                        *-marked subject inside text that leads to other page/place
                    the benefit of advanced info-commands
                        = "one can quickly navigate to any node one knows the name of"
                    'footnote'
                Numbers (+universal argument) ----
                    add digit as/to numeric argument
                        a-0 .. a-9  (add-digit-to-numeric-arg)
                    ((run command tied to key's lowercase variant))
                        a-a .. a-z  (do-lowercase-version)
                    (add / multiply arg by 4)
                        c-u  (universal-argument)
                Help ----
                    show help/help-message
                        h  (get-help-window)
                        ?
                    visit specific info-node
                        H "String"  (get-info-help-node)
                    start info-handbook
                        H info
                Movement ----
                    roll page forward/backward  __
                        Space / Bs/Del  (scroll-forward) / 
                        PgUp/a-v  (scroll-backward-page-only)  #+stay within node
                    scroll other window forw./backw.
                        ca-v / Esc c-v/Esc PgDn  (scroll-other-window) / (scroll-other-window-backward)
                    (word forward/backw.)
                        a-f / a-b  (forward-word) / (backward-word)
                    (to end/start of line)
                        c-e / c-a  (end-of-line) / (beginning-of-line)
                    move cursor to specific line (in the window)
                        a-r  (move-to-window-line)
                    go to end/beg. of curr. node
                        sa-< / a-<  (end-of-node) / (beginning-of-node)
                    (go char forw./backw.)
                        Left    (backward-char)  Gå ett tecken bakåt
                        Right   (forward-char)  Gå ett tecken framåt
                        Down    (next-line)  Gå ned till nästa rad
                        Up  (prev-line)  Gå upp till föregående rad
                Window-commands ----  ___zzzz
                        C-x 2   (split-window)  Dela aktuellt fönster
                        C-x 1   (keep-one-window)  Ta bort alla andra fönster
                        C-x o ****  (next-window)  Välj nästa fönster ****
                        C-x ^   (grow-window)  Väx (eller krymp) detta fönster
                        C-x t   (tile-windows)  Dela det tillgängliga skärmutrymmet mellan de synliga fönstren
                        PgDn/PgUp   Rulla fram/bakåt INOM NODEN**
                        x   (delete-window)  close this info-window
                        q   (quit)  Avsluta användandet av Info
                            q, C-x C-c  (quit) Avsluta användandet av Info
                        C-x k   (kill-node)  Döda denna nod
                Nodes, Cross-References, Footnotes ----
                        **** ca-f / Esc c-f  **** (show-footnotes)  Visa fotnoterna som är associerade med denna nod i ett annat fönster
                        M-TAB   (move-to-prev-xref)  Gå till föregående korsreferens
                            ESC TAB (move-to-prev-xref) Gå till föregående korsreferens
                        f?***** *****Visa en lista på alla korsreferenser i noden*****
                        f*****  Gå till korsreferens (gärna sån i närheten av markören, då namnet kommer föreslås och inte behöver skrivas in manuellt)*****
                        l (litet L) ******  HUR KOMMER MAN TILLBAKS TILL UTGÅNGSSTÄLLET NÄR MAN FÖLJT EN KORSREFERENS??*******
                        *** O   *** (goto-invocation-node)  Hitta den nod som beskriver start av programmet
                        [   (global-prev-node)  Gå bakåt eller upp i nodstrukturen
                        p   (prev-node)  Välj föregående nod
                        n   (next-node)  Välj nästa nod
                        d   "(dir-node)  Välj noden ""(dir)"""
                        r   (xref-item)  Läs en fotnot eller korsreferens och välj dess nod
                        u   (up-node)  Välj uppnoden
                        t   "(top-node)  Välj noden ""Top"" i denna fil"
                        m   (menu-item)  Läs en menypost och välj dess nod
                        l (litetL) **** (history-node)  Välj den senast valda noden ****
                        g   (goto-node)  Läs ett nodnamn och välj det
                        >   (last-node)  Välj den sista noden i denna fil
                        info: < info: (first-node)  Välj den första noden i denna fil
                        info: C-x b info: (select-visited-node)  Välj en nod som har besökts nyligen i ett synligt fönster
                        d   Gå till huvudkatalognoden.
                        t   Gå till den översta noden i detta dokument.
                        u   Gå en nivå uppåt.
                        n   Gå till nästa nod på denna nivå.
                        p   Gå till föregående nod på denna nivå.
                        ]   Gå till nästa nod i dokumentet.
                        [   Gå till föregående nod i dokumentet.
                        n/p****(=se upp så inte missar för många undernoder Gå till nästa/föregående nod PÅ SAMMA NIVÅ****
                        b****   Gå till början av nuvarande noden*****
                        l (= pipe? )    Gå till den sista noden i detta fönster.
                        RET Följ hypertextlänken under markören.
                        TAB Hoppa till nästa hypertextlänk.
                        End Gå till slutet på denna nod.
                        Home    Gå till början på denna nod.
                        g   Gå till den namngivna noden.
                        .
                        ]/[ Gå till nästa/föregående nod OAVSETT NIVÅ :) ******
                        u** Gå till Upp-noden(=Gå tillbaks till menyn du kom ifrån)**
                        find: r find: Följ den namngivna korsreferensen.
                        info: 0 info: Välj sista objektet i denna nods meny.
                        1...9 ****  Välj första...nionde objektet i denna nods meny. ****

                        M-x visible-mode*** Sätt så information alltid visas för korsreferenser, även utan att behövs hålla pekaren över länken***

                        C-x C-b ****    (list-visited-nodes) Skapa ett fönster som innehåller en meny med alla nyligen besökta noder ****
                        d   Gå till dir-nivån/menyn :)
                        1 .. 9  (menu-digit)  Välj denna menypost
                        m   Välj den namngivna menyposten.
                        LFD (select-reference-this-line)  Välj referens eller menypost som finns på denna rad
                        0   (last-menu-item)  Välj det sista objektet i denna nods meny
                        g Top   Gå direkt till nod 'Top', eller 'Go to node' (tillåter inte förkortningar som m gör, men Tab-completion)
                        TAB (move-to-next-xref)  Gå till nästa korsreferens (=punkt/stjärnmarkerade nod) :)
                Searching ---- ----
                        M-x info-apropos ****** ******Om man inte är säker på vilken info-sida som dokumenterar ämnet man är ute (=gör en slags apropos-sökning)*****
                        info: R info: (toggle-regexp)  Växla användningen av reguljära uttryck i sökningar
                        }   (search-next)  Upprepa den senaste sökningen i samma riktning
                        {   (search-previous)  Upprepa den senaste sökningen i omvänd riktning
                        }   Sök efter nästa förekomst.
                        {   Sök efter föregående förekomst.
                        s, /    (search)  Läs en sträng och sök efter den
                        S   (search-case-sensitively)  Läs en sträng och sök efter den skiftlägeskänsligt
                        i   (index-search)  Slå upp en sträng i indexet för denna fil
                        ,   "(next-index-match)  Gå till nästa matchande indexpost från det senaste ""i""-kommandot"
                        m   Kommando för att skriva söksträng = menysträng att gå till*****
                        Tips för m-sökning***   Kan använda tab-completion***
                        Tab/Esc+Tab**   Gå till nästa/föregående Subtopic***
                        C-s (isearch-forward)  Sök interaktivt efter en sträng allteftersom du skriver den
                        C-r (isearch-backward)  Sök interaktivt efter en sträng allteftersom du skriver den
                        find: i *** find: Sök efter en angiven sträng i indexet, och välj noden som refereras av den första posten som hittas. ***
                        s eller /   Sök framåt efter en angiven sträng(regex).
                        i***    Sök och gå direkt till ett indexord***
                        iC-l (litet L)***   Syntax för att i-söka efter control+lilla L***
                        I(stort i)+'ord'    Index-sökning på ordet 'ord', som skapar en virtuell meny med resultaten ******** :D

                        Tab  Kör completion när man skriver in namnet på korsreferens
                        '* Ämne::   Om userfriendly och ugly (comp.readable) text + Förkortningen
                        G   (menu-sequence)  Läs en lista med menyer som börjar med katalog, och följ dem
                        kör fil, kör/avbryt kommando
                        info: C-x C-v   info: (view-file) Läs namnet på en fil och välj den
                Misc: Run Commands, Escape/Abort ----
                        M-x (execute-command)  Läs ett kommandonamn i echo-området och kör det
                        M-C-g   (abort-key)  Avbryt pågående åtgärd
                        Ctrl+g  Avbryt ett kommando
                        C-g Avbryt pågående åtgärd.
                        ESC C-g (abort-key) Avbryt pågående åtgärd

                        ctrl-L  Rita om skärmen
                        C-l (redraw-display)  Rita om displayen
ed  @@
xfce4 terminal  'Primary' = Ctrl
                    ; xfce4-terminal GtkAccelMap rc-file         -*- scheme -*-
                    ; C-    --> <Primary>
                    ; S-    --> <Shift>
                    ; A-    --> <Alt>
                    ; f1 .. --> F1
                    ;
                    (gtk_accel_path "<Actions>/terminal-window/goto-tab-1" "<Alt>1")
                    (gtk_accel_path "<Actions>/terminal-window/goto-tab-3" "<Alt>3")
                    (gtk_accel_path "<Actions>/terminal-window/goto-tab-2" "<Alt>2")
                    (gtk_accel_path "<Actions>/terminal-window/goto-tab-4" "<Alt>4")
                    (gtk_accel_path "<Actions>/terminal-window/goto-tab-5" "<Alt>5")
                    (gtk_accel_path "<Actions>/terminal-window/goto-tab-6" "<Alt>6")
                    (gtk_accel_path "<Actions>/terminal-window/goto-tab-7" "<Alt>7")
                    (gtk_accel_path "<Actions>/terminal-window/goto-tab-8" "<Alt>8")
                    (gtk_accel_path "<Actions>/terminal-window/goto-tab-9" "<Alt>9")
                    ; (gtk_accel_path "<Actions>/terminal-window/detach-tab" "<Primary><Shift>d")
                    ; (gtk_accel_path "<Actions>/terminal-window/close-other-tabs" "")
                    ; (gtk_accel_path "<Actions>/terminal-window/zoom-in" "<Primary>plus")
                    ; (gtk_accel_path "<Actions>/terminal-window/zoom-out" "<Primary>minus")
                    ; (gtk_accel_path "<Actions>/terminal-window/prev-tab" "<Primary>Page_Up")
                    ; (gtk_accel_path "<Actions>/terminal-window/next-tab" "<Primary>Page_Down")
                    ; (gtk_accel_path "<Actions>/terminal-window/move-tab-left" "<Primary><Shift>Page_Up")
                    ; (gtk_accel_path "<Actions>/terminal-window/move-tab-right" "<Primary><Shift>Page_Down")
                    ; (gtk_accel_path "<Actions>/terminal-window/set-title" "<Primary><Shift>s")
                    --
                    ; (gtk_accel_path "<Actions>/terminal-window/last-active-tab" "")
                    ; (gtk_accel_path "<Actions>/terminal-window/undo-close-tab" "")
                    ; (gtk_accel_path "<Actions>/terminal-window/zoom-reset" "<Primary>0")
                    ; (gtk_accel_path "<Actions>/terminal-window/copy-input" "")
                    ; (gtk_accel_path "<Actions>/terminal-window/set-title-color" "")
                    ; (gtk_accel_path "<Actions>/terminal-window/edit-menu" "")
                    ; (gtk_accel_path "<Actions>/terminal-window/zoom-menu" "")
                    ; (gtk_accel_path "<Actions>/terminal-window/fullscreen" "F11")
                    ; (gtk_accel_path "<Actions>/terminal-window/read-only" "")
                    ; (gtk_accel_path "<Actions>/terminal-window/preferences" "")
                    ; (gtk_accel_path "<Actions>/terminal-window/reset-and-clear" "")
                    ; (gtk_accel_path "<Actions>/terminal-window/about" "")
                    ; (gtk_accel_path "<Actions>/terminal-window/close-window" "<Primary><Shift>q")
                    ; (gtk_accel_path "<Actions>/terminal-window/reset" "")
                    ; (gtk_accel_path "<Actions>/terminal-window/save-contents" "")
                    (gtk_accel_path "<Actions>/terminal-window/toggle-menubar" "F10")
                    ; (gtk_accel_path "<Actions>/terminal-window/copy" "<Primary><Shift>c")
                    ; (gtk_accel_path "<Actions>/terminal-window/copy-html" "")
                    ; (gtk_accel_path "<Actions>/terminal-window/show-borders" "")
                    ; (gtk_accel_path "<Actions>/terminal-window/view-menu" "")
                    ; (gtk_accel_path "<Actions>/terminal-window/scroll-on-output" "")
                    ; (gtk_accel_path "<Actions>/terminal-window/show-toolbar" "")
                    ; (gtk_accel_path "<Actions>/terminal-window/tabs-menu" "")
                    ; (gtk_accel_path "<Actions>/terminal-window/search-next" "")
                    ; (gtk_accel_path "<Actions>/terminal-window/search-prev" "")
                    ; (gtk_accel_path "<Actions>/terminal-window/contents" "F1")
                    ; (gtk_accel_path "<Actions>/terminal-window/close-tab" "<Primary><Shift>w")
                    ; (gtk_accel_path "<Actions>/terminal-window/new-tab" "<Primary><Shift>t")
                    ; (gtk_accel_path "<Actions>/terminal-window/new-window" "<Primary><Shift>n")
                    ; (gtk_accel_path "<Actions>/terminal-window/terminal-menu" "")
                    ; (gtk_accel_path "<Actions>/terminal-window/show-menubar" "")
                    ; (gtk_accel_path "<Actions>/terminal-window/select-all" "<Primary><Shift>a")
                    ; (gtk_accel_path "<Actions>/terminal-window/paste" "<Primary><Shift>v")
                    ; (gtk_accel_path "<Actions>/terminal-window/search" "<Primary><Shift>f")
                    ; (gtk_accel_path "<Actions>/terminal-window/file-menu" "")
                    ; (gtk_accel_path "<Actions>/terminal-window/paste-selection" "")
                    ; (gtk_accel_path "<Actions>/terminal-window/help-menu" "")
xfce4 terminal  ~/Dropbox/config/xfce4-term/accels.scm
                goto-tab-n" "<Alt>n")
                ; copy-input" "")
                ; close-other-tabs" "")
                ; move-tab-right" "<Primary><Shift>Page_Down")
                ; set-title-color" "")
                ; edit-menu" "")
                ; zoom-menu" "")
                ; fullscreen" "F11")
                ; read-only" "")
                ; preferences" "")
                ; reset-and-clear" "")
                ; about" "")
                ; close-window" "<Primary><Shift>q")
                ; reset" "")
                ; save-contents" "")
                toggle-menubar" "F10")
                ; copy" "<Primary><Shift>c")
                ; copy-html" "")
                ; last-active-tab" "")
                ; show-borders" "")
                ; view-menu" "")
                ; detach-tab" "<Primary><Shift>d")
                ; scroll-on-output" "")
                ; show-toolbar" "")
                ; next-tab" "<Primary>Page_Down")
                ; tabs-menu" "")
                ; search-next" "")
                ; search-prev" "")
                ; undo-close-tab" "")
                ; set-title" "<Primary><Shift>s")
                ; contents" "F1")
                ; zoom-reset" "<Primary>0")
                ; close-tab" "<Primary><Shift>w")
                ; new-tab" "<Primary><Shift>t")
                ; new-window" "<Primary><Shift>n")
                ; terminal-menu" "")
                ; show-menubar" "")
                ; select-all" "<Primary><Shift>a")
                ; paste" "<Primary><Shift>v")
                ; move-tab-left" "<Primary><Shift>Page_Up")
                ; search" "<Primary><Shift>f")
                ; file-menu" "")
                ; prev-tab" "<Primary>Page_Up")
                ; paste-selection" "")
                ; zoom-in" "<Primary>plus")
                ; zoom-out" "<Primary>minus")
                ; help-menu" "")
----
midnight commander
            path/url to MC-man (empire-tagged)
            [filemanager] ----
                    .
                    .
                ChangePanel = tab; ctrl-i
                        Help = f1
                        UserMenu = f2
                        View = f3
                        // ViewFile =
                        Edit = f4
                        // EditForceInternal =
                    Copy = f5
                    Move = f6
                    MakeDir = f7
                    Delete = f8
                        .
                        Menu = f9
                    Quit = f10
                    MenuLastSelected = f19
                        .
                        QuitQuiet = f20
                    Find = alt-question
                    CdQuick = alt-c
                    HotList = ctrl-backslash  cg-å
                        .
                        Reread = ctrl-r
                    DirSize = ctrl-space
                        Suspend = ctrl-z
                        Swap = ctrl-u
                    History = alt-h
                        // PanelListing =
                        // SetupListingFormat =
                    ShowHidden = alt-dot
                    SplitVertHoriz = alt-comma
                    SplitEqual = alt-equal
                    SplitMore = alt-shift-right
                    SplitLess = alt-shift-left
                    Shell = ctrl-o
                        PutCurrentPath = alt-a
                        PutOtherPath = alt-shift-a
                        PutCurrentSelected = alt-enter; ctrl-enter
                        PutCurrentFullSelected = ctrl-shift-enter
                    ViewFiltered = alt-exclamation
                    Select = k+
                    Unselect = k-
                    SelectInvert = k*
                        ScreenList = alt-prime
                        // OptionsLayout =
                        // OptionsAppearance =
                        // OptionsPanel =
                        // OptionsConfirm =
                        // OptionsDisplayBits =
                        // OptionsVfs =
                        // LearnKeys =
                        // SaveSetup =
                        // EditExtensionsFile =
                        // EditFileHighlightFile =
                        // Filter =
                        // ConnectFish =
                        // ConnectFtp =
                        // ConnectSmb =
                        // Undelete =
                    EditorViewerHistory = alt-shift-e
                    ExtendedKeyMap = ctrl-x
            [filemanager:xmap] ----
                    .
                    ChangeMode = c
                    ChangeOwn = o
                    ChangeAttributes = e
                    CompareDirs = d
                    CompareFiles = ctrl-d
                    HotListAdd = h
                    LinkSymbolicEdit = ctrl-s
                    Link = l
                    LinkSymbolic = s
                    LinkSymbolicRelative = v
                    PanelInfo = i
                    PanelQuickView = q
                        ExternalPanelize = exclamation
                        VfsList = a
                    Jobs = j
                        PutCurrentPath = p
                        PutOtherPath = ctrl-p
                    PutCurrentTagged = t
                    PutOtherTagged = ctrl-t
                    PutCurrentLink = r
                    PutOtherLink = ctrl-r
            [panel] ----
                    .
                    CycleListingFormat = alt-t
                Search = ctrl-s; alt-s
                    .
                    Mark = insert; ctrl-t
                    MarkUp = shift-up
                    MarkDown = shift-down
                        // MarkLeft =
                        // MarkRight =
                    Down = down; ctrl-n
                    Up = up; ctrl-p
                        Left = left
                        Right = right
                        PageUp = pgup; alt-v
                        PageDown = pgdn; ctrl-v
                        Enter = enter
                    PanelOtherCd = alt-o
                    PanelOtherCdLink = alt-l
                        ViewRaw = f13
                        EditNew = f14
                        CopySingle = f15
                        MoveSingle = f16
                        DeleteSingle = f18
                        // SelectExt =
                    Select = alt-plus
                    Unselect = alt-minus
                    SelectInvert = alt-asterisk
                    CdChild = ctrl-pgdn
                    CdParent = ctrl-pgup
                        // CdParentSmart =
                        // Panelize =
                    History = alt-shift-h
                    HistoryNext = alt-u
                    HistoryPrev = alt-y
                        BottomOnScreen = alt-j
                        MiddleOnScreen = alt-r
                        TopOnScreen = alt-g
                    PanelOtherSync = alt-i
                    SelectCodepage = alt-e
                        Top = alt-lt; home; a1
                        Bottom = alt-gt; end; c1
                        // Sort =
                        // SortPrev =
                        // SortNext =
                        // SortReverse =
                        // SortByName =
                        // SortByExt =
                        // SortBySize =
                        // SortByMTime =
                        // ScrollLeft =
                        // ScrollRight =
            [dialog] ----
                        .
                        Ok = enter
                        Cancel = f10; esc; ctrl-g
                        Up = left; up
                        // Left = left; up
                        Down = right; down
                        // Right = right; down
                        Help = f1
                        Suspend = ctrl-z
                        Refresh = ctrl-l
                        ScreenList = alt-prime
                        ScreenNext = alt-rbrace
                        ScreenPrev = alt-lbrace
            [menu] ----
                        .
                        Help = f1
                        Left = left; ctrl-b
                        Right = right; ctrl-f
                        Up = up; ctrl-p
                        Down = down; ctrl-n
                        Home = home; alt-lt; ctr-a
                        End = end; alt-gt ctrl-e
                        Enter = enter
                        Quit = F10; esc; ctrl-g
            [input] ----
                    .
                        Home = ctrl-a; alt-lt; home; a1
                        End = ctrl-e; alt-gt; end; c1
                        Left = left; alt-left; ctrl-b
                        Right = right; alt-right; ctrl-f
                        WordLeft = ctrl-left; alt-b
                        WordRight = ctrl-right; alt-f
                        Backspace = backspace; ctrl-h
                        Delete = delete; ctrl-d
                        DeleteToWordBegin = alt-backspace
                        DeleteToWordEnd = alt-d
                        // Mark =
                        Remove = ctrl-w
                        // Cut =
                        Store = alt-w
                        // Paste =
                        Yank = ctrl-y
                        DeleteToEnd = ctrl-k
                    HistoryPrev = alt-p; ctrl-down
                    HistoryNext = alt-n; ctrl-up
                    History = alt-h
                    Complete = alt-tab
                        // Clear =
                        MarkLeft = shift-left
                        MarkRight = shift-right
                        MarkToWordBegin = ctrl-shift-left
                        MarkToWordEnd = ctrl-shift-right
                        MarkToHome = shift-home
                        MarkToEnd = shift-end
            [listbox] ----
                    .
                        Up = up; ctrl-p
                        Down = down; ctrl-n
                        Top = home; alt-lt; a1
                        Bottom = end; alt-gt; c1
                        PageUp = pgup; alt-v
                        PageDown = pgdn; ctrl-v
                        Delete = delete; d
                        Clear = shift-delete; shift-d
                    View = f3
                    Edit = f4
                        Enter = enter
            [radio] ----
                    .
                        Up = up; ctrl-p
                        Down = down; ctrl-n
                        Top = home; alt-lt; a1
                        Bottom = end; alt-gt; c1
                        Select = space
            [tree] ----
                    .
                        Help = f1
                        Reread = f2; ctrl-r
                        Forget = f3
                        ToggleNavigation = f4
                        Copy = f5
                        Move = f6
                        Up = up; ctrl-p
                        Down = down; ctrl-n
                        Left = left
                        Right = right
                        Top = home; alt-lt; a1
                        Bottom = end; alt-gt; c1
                        PageUp = pgup; alt-v
                        PageDown = pgdn; ctrl-v
                        Enter = enter
                        Search = ctrl-s; alt-s
                        Delete = f8; delete
            [help] ----
                    .
                        Help = f1
                        Index = f2; c
                        Back = f3; left; l
                        Quit = f10; esc
                        Up = up; ctrl-p
                        Down = down; ctrl-n
                        PageDown = f; space; pgdn; ctrl-v
                        PageUp = b; pgup; alt-v; backspace
                        HalfPageDown = d
                        HalfPageUp = u
                        Top = home; ctrl-home; ctrl-pgup; a1; alt-lt; g
                        Bottom = end; ctrl-end; ctrl-pgdn; c1; alt-gt; shift-g
                        Enter = right; enter
                        LinkNext = tab
                        LinkPrev = alt-tab
                        NodeNext = n
                        NodePrev = p
            [chattr] ----
                    .
                        Up = up; left; ctrl-p
                        Down = down; right; ctrl-n
                        Top = home; alt-lt; a1
                        Bottom = end; alt-gt; c1
                        PageUp = pgup; alt-v
                        PageDown = pgdn; ctrl-v
                        Mark = t; shift-t
                        MarkAndDown = insert
            [editor] ----
                    .
                        Store = ctrl-insert
                        Paste = shift-insert
                        Cut = shift-delete
                        Up = up
                        Down = down
                        Left = left
                        Right = right
                        WordLeft = ctrl-left; ctrl-z
                        WordRight = ctrl-right; ctrl-x
                        Enter = enter
                        Return = shift-enter; ctrl-enter; ctrl-shift-enter
                        BackSpace = backspace; ctrl-h
                        Delete = delete; ctrl-d
                        PageUp = pgup
                        PageDown = pgdn
                        Home = home
                        End = end
                        Tab = tab; shift-tab; ctrl-tab; ctrl-shift-tab
                        Undo = ctrl-u
                        Redo = alt-r
                        Top = ctrl-home; alt-lt
                        Bottom = ctrl-end; alt-gt
                        ScrollUp = ctrl-up
                        ScrollDown = ctrl-down
                        TopOnScreen = ctrl-pgup
                        BottomOnScreen = ctrl-pgdn
                        DeleteToWordBegin = alt-backspace
                        DeleteToWordEnd = alt-d
                        DeleteLine = ctrl-y
                        DeleteToEnd = ctrl-k
                        // DeleteToHome =
                        // ParagraphUp =
                        // ParagraphDown =
                        Save = f2
                        // EditFile =
                        EditNew = ctrl-n
                        SaveAs = f12; ctrl-f2
                        // Close =
                        History = alt-shift-e
                        Mark = f3
                        Copy = f5
                        Move = f6
                        Remove = f8
                        // MarkLine =
                        // MarkWord =
                        // MarkAll =
                        // Unmark =
                        Search = f7
                        SearchContinue = f17
                        // BlockShiftLeft =
                        // BlockShiftRight =
                        MarkPageUp = shift-pgup
                        MarkPageDown = shift-pgdn
                        MarkLeft = shift-left
                        MarkRight = shift-right
                        MarkToWordBegin = ctrl-shift-left
                        MarkToWordEnd = ctrl-shift-right
                        MarkUp = shift-up
                        MarkDown = shift-down
                        MarkToHome = shift-home
                        MarkToEnd = shift-end
                        MarkToFileBegin = ctrl-shift-home
                        MarkToFileEnd = ctrl-shift-end
                        MarkToPageBegin  = ctrl-shift-pgup
                        MarkToPageEnd = ctrl-shift-pgdn
                        MarkScrollUp = ctrl-shift-up
                        MarkScrollDown = ctrl-shift-down
                        // MarkParagraphUp =
                        // MarkParagraphDown =
                        MarkColumnPageUp = alt-pgup
                        MarkColumnPageDown = alt-pgdn
                        MarkColumnLeft = alt-left
                        MarkColumnRight = alt-right
                        MarkColumnUp = alt-up
                        MarkColumnDown = alt-down
                        // MarkColumnScrollUp =
                        // MarkColumnScrollDown =
                        // MarkColumnParagraphUp =
                        // MarkColumnParagraphDown =
                        BlockSave = ctrl-f
                        MarkColumn = f13
                        Replace = f4
                        ReplaceContinue = f14
                        Complete = alt-tab
                        InsertFile = f15
                        Quit = f10; esc
                        InsertOverwrite = insert
                        Help = f1
                        // Date =
                        Refresh = ctrl-l
                        Goto = alt-l
                        Sort = alt-t
                        Mail = alt-m
                        ParagraphFormat = alt-p
                        MatchBracket = alt-b
                        ExternalCommand = alt-u
                        UserMenu = f11
                        Menu = f9
                        Bookmark = alt-k
                        BookmarkFlush = alt-o
                        BookmarkNext = alt-j
                        BookmarkPrev = alt-i
                        // History =
                        Shell = ctrl-o
                        InsertLiteral = ctrl-q
                        // MacroStartRecord =
                        // MacroStopRecord =
                        MacroStartStopRecord = ctrl-r
                        // MacroDelete =
                        ShowNumbers = alt-n
                        ShowTabTws = alt-underline
                        SyntaxOnOff = ctrl-s
                        // SyntaxChoose =
                        // ShowMargin =
                        Find = alt-enter
                        FilePrev = alt-minus
                        FileNext = alt-plus
                        // RepeatStartStopRecord =
                        SelectCodepage = alt-e
                        // Options =
                        // OptionsSaveMode =
                        // SpellCheck =
                        SpellCheckCurrentWord = ctrl-p
                        // SpellCheckSelectLang =
                        // LearnKeys =
                        // WindowMove =
                        // WindowResize =
                        // WindowFullscreen =
                        // WindowList =
                        // WindowNext =
                        // WindowPrev =
                        // ExtendedKeyMap =
            [viewer] ----
                    .
                        Help = f1
                        WrapMode = f2
                    Quit = f3; f10; q; esc
                        HexMode = f4
                        Goto = f5
                        Search = f7
                        SearchForward = slash
                        SearchBackward = question
                        SearchContinue = f17; n
                        SearchForwardContinue = ctrl-s
                        SearchBackwardContinue = ctrl-r
                        SearchOppositeContinue = shift-n
                        MagicMode = f8
                        NroffMode = f9
                        Home = ctrl-a
                        End = ctrl-e
                        Left = h; left
                        Right = l; right
                        LeftQuick = ctrl-left
                        RightQuick = ctrl-right
                        Up = k; y; insert; up; ctrl-p
                        Down = j; e; delete; down; enter; ctrl-n
                        PageDown = f; space; pgdn; ctrl-v
                        PageUp = b; pgup; alt-v; backspace
                        HalfPageDown = d
                        HalfPageUp = u
                        Top = home; ctrl-home; ctrl-pgup; a1; alt-lt; g
                        Bottom = end; ctrl-end; ctrl-pgdn; c1; alt-gt; shift-g
                    BookmarkGoto = m
                    Bookmark = r
                        FileNext = ctrl-f
                        FilePrev = ctrl-b
                        SelectCodepage = alt-e
                        Shell = ctrl-o
                        Ruler = alt-r
                        History = alt-shift-e
            [viewer:hex] ----
                    .
                        Help = f1
                        HexEditMode = f2
                        Quit = f3; f10; q; esc
                        HexMode = f4
                        Goto = f5
                        Save = f6
                        Search = f7
                        SearchForward = slash
                        SearchBackward = question
                        SearchContinue = f17; n
                        SearchForwardContinue = ctrl-s
                        SearchBackwardContinue = ctrl-r
                        SearchOppositeContinue = shift-n
                        MagicMode = f8
                        NroffMode = f9
                        ToggleNavigation = tab
                        Home = ctrl-a; home
                        End = ctrl-e; end
                        Left = b; left
                        Right = f; right
                        Up = k; y; up
                        Down = j; delete; down
                        PageDown = pgdn; ctrl-v
                        PageUp = pgup; alt-v
                        Top = ctrl-home; ctrl-pgup; a1; alt-lt; g
                        Bottom = ctrl-end; ctrl-pgdn; c1; alt-gt; shift-g
                        History = alt-shift-e
            [diffviewer] ----
                    .
                        ShowSymbols = alt-s; s
                        ShowNumbers = alt-n; l
                        SplitFull = f
                        SplitEqual = equal
                        SplitMore = gt
                        SplitLess = lt
                        Tab2 = 2
                        Tab3 = 3
                        Tab4 = 4
                        Tab8 = 8
                        Swap = ctrl-u
                        Redo = ctrl-r
                        HunkNext = n; enter; space
                        HunkPrev = p; backspace
                        Goto = g; shift-g
                        Save = f2
                        Edit = f4
                        EditOther = f14
                        Merge = f5
                        MergeOther = f15
                        Search = f7
                        SearchContinue = f17
                        Options = f9
                        Top = ctrl-home
                        Bottom = ctrl-end
                        Down = down
                        Up = up
                        LeftQuick = ctrl-left
                        RightQuick = ctrl-right
                        Left = left
                        Right = right
                        PageDown = pgdn
                        PageUp = pgup
                        Home = home
                        End = end
                        Help = f1
                        Quit = f10; q; shift-q; esc
                        Shell = ctrl-o
                        SelectCodepage = alt-e
netrw[!]  @@@[@]
                    ___netrw_start
                        QUICK HELP                      *netrw-quickhelp*
                                               (Use ctrl-] to select a topic)~
                            Intro to Browsing...............................|netrw-intro-browse|
                              Quick Reference: Maps.........................|netrw-quickmap|
                              Quick Reference: Commands.....................|netrw-browse-cmds|
                            Hiding
                              Edit hiding list..............................|netrw-ctrl-h|
                              Hiding Files or Directories...................|netrw-a|
                              Hiding/Unhiding by suffix.....................|netrw-mh|
                              Hiding  dot-files.............................|netrw-gh|
                            Listing Style
                              Select listing style (thin/long/wide/tree)....|netrw-i|
                              Associated setting variable...................|g:netrw_liststyle|
                              Shell command used to perform listing.........|g:netrw_list_cmd|
                              Quick file info...............................|netrw-qf|
                            Sorted by
                              Select sorting style (name/time/size).........|netrw-s|
                              Editing the sorting sequence..................|netrw-S|
                              Sorting options...............................|g:netrw_sort_options|
                              Associated setting variable...................|g:netrw_sort_sequence|
                              Reverse sorting order.........................|netrw-r|


                                        *netrw-quickmap* *netrw-quickmaps*
                        QUICK REFERENCE: MAPS               *netrw-browse-maps*

                              ---           -----------------           ----
                              Map           Quick Explanation           Link
                              ---           -----------------           ----
                        <    <F1>   Causes Netrw to issue help
                             <cr>   Netrw will enter the directory or read the file      |netrw-cr|
                             <del>  Netrw will attempt to remove the file/directory      |netrw-del|
                             <c-h>  Edit file hiding list                                |netrw-ctrl-h|
                             <c-l>  Causes Netrw to refresh the directory listing        |netrw-ctrl-l|
                             <c-r>  Browse using a gvim server                           |netrw-ctrl-r|
                             <c-tab> Shrink/expand a netrw/explore window                |netrw-c-tab|
                               -    Makes Netrw go up one directory                      |netrw--|
                               a    Cycles between normal display,                       |netrw-a|
                                    hiding (suppress display of files matching g:netrw_list_hide)
                                    and showing (display only files which match g:netrw_list_hide)
                               c    Make browsing directory the current directory        |netrw-c|
                               C    Setting the editing window                           |netrw-C|
                               d    Make a directory                                     |netrw-d|
                               D    Attempt to remove the file(s)/directory(ies)         |netrw-D|
                    gb   Go to previous bookmarked directory                  |netrw-gb|
                               gd   Force treatment as directory                         |netrw-gd|
                               gf   Force treatment as file                              |netrw-gf|
                               gh   Quick hide/unhide of dot-files                       |netrw-gh|
                               gn   Make top of tree the directory below the cursor      |netrw-gn|
                               i    Cycle between thin, long, wide, and tree listings    |netrw-i|
                               I    Toggle the displaying of the banner                  |netrw-I|
                               mc   Copy marked files to marked-file target directory    |netrw-mc|
                               md   Apply diff to marked files (up to 3)                 |netrw-md|
                               me   Place marked files on arg list and edit them         |netrw-me|
                               mf   Mark a file                                          |netrw-mf|
                               mF   Unmark files                                         |netrw-mF|
                               mg   Apply vimgrep to marked files                        |netrw-mg|
                               mh   Toggle marked file suffices' presence on hiding list |netrw-mh|
                               mm   Move marked files to marked-file target directory    |netrw-mm|
                               mp   Print marked files                                   |netrw-mp|
                               mr   Mark files using a shell-style |regexp|                |netrw-mr|
                               mt   Current browsing directory becomes markfile target   |netrw-mt|
                               mT   Apply ctags to marked files                          |netrw-mT|
                               mu   Unmark all marked files                              |netrw-mu|
                               mv   Apply arbitrary vim   command to marked files        |netrw-mv|
                               mx   Apply arbitrary shell command to marked files        |netrw-mx|
                               mX   Apply arbitrary shell command to marked files en bloc|netrw-mX|
                               mz   Compress/decompress marked files                     |netrw-mz|
                               o    Enter the file/directory under the cursor in a new   |netrw-o|
                                    browser window.  A horizontal split is used.
                               O    Obtain a file specified by cursor                    |netrw-O|
                               p    Preview the file                                     |netrw-p|
                               P    Browse in the previously used window                 |netrw-P|
                    qb   List bookmarked directories and history              |netrw-qb|
                               qf   Display information on file                          |netrw-qf|
                               qF   Mark files using a quickfix list                     |netrw-qF|
                               qL   Mark files using a |location-list|                     |netrw-qL|
                               r    Reverse sorting order                                |netrw-r|
                               R    Rename the designated file(s)/directory(ies)         |netrw-R|
                               s    Select sorting style: by name, time, or file size    |netrw-s|
                               S    Specify suffix priority for name-sorting             |netrw-S|
                               t    Enter the file/directory under the cursor in a new tab|netrw-t|
                               u    Change to recently-visited directory                 |netrw-u|
                               U    Change to subsequently-visited directory             |netrw-U|
                               v    Enter the file/directory under the cursor in a new   |netrw-v|
                                    browser window.  A vertical split is used.
                               x    View file with an associated program                 |netrw-x|
                               X    Execute filename under cursor via |system()|           |netrw-X|

                               %    Open a new file in netrw's current directory         |netrw-%|

                            *netrw-mouse* *netrw-leftmouse* *netrw-middlemouse* *netrw-rightmouse*
                            <leftmouse> (gvim only) selects word under mouse as if a <cr>
                                    had been pressed (ie. edit file, change directory)
                            <middlemouse>   (gvim only) same as P selecting word under mouse;
                                    see |netrw-P|
                            <rightmouse>    (gvim only) delete file/directory using word under
                                    mouse
                            <2-leftmouse>   (gvim only) when:
                                     * in a netrw-selected file, AND
                                     * |g:netrw_retmap| == 1       AND
                                     * the user doesn't already have a <2-leftmouse>
                                       mapping defined before netrw is autoloaded,
                                    then a double clicked leftmouse button will return
                                    to the netrw browser window.  See |g:netrw_retmap|.
                            <s-leftmouse>   (gvim only) like mf, will mark files.  Dragging
                                    the shifted leftmouse will mark multiple files.
                                    (see |netrw-mf|)

                            (to disable mouse buttons while browsing: |g:netrw_mousemaps|)

                                        *netrw-quickcom* *netrw-quickcoms*
                        QUICK REFERENCE: COMMANDS   *netrw-explore-cmds* *netrw-browse-cmds*
                             :NetrwClean[!]............................................|netrw-clean|
                             :NetrwSettings............................................|netrw-settings|
                             :Ntree....................................................|netrw-ntree|
                             :Explore[!]  [dir] Explore directory of current file......|netrw-explore|
                             :Hexplore[!] [dir] Horizontal Split & Explore.............|netrw-explore|
                             :Lexplore[!] [dir] Left Explorer Toggle...................|netrw-explore|
                             :Nexplore[!] [dir] Vertical Split & Explore...............|netrw-explore|
                             :Pexplore[!] [dir] Vertical Split & Explore...............|netrw-explore|
                             :Rexplore          Return to Explorer.....................|netrw-explore|
                             :Sexplore[!] [dir] Split & Explore directory .............|netrw-explore|
                             :Texplore[!] [dir] Tab & Explore..........................|netrw-explore|
                             :Vexplore[!] [dir] Vertical Split & Explore...............|netrw-explore|

                        BANNER DISPLAY                      *netrw-I*
                    .
                        .
                        toggle display of netrw banner  I  (g:netrw_banner)
                    bookmark currently browsed directory  mb  |netrw-mb|
                        ___zzzz
                        Bookmarks are retained in between sessions of vim in a file called ___
                            .netrwbook  as a |List|,  which is typically stored in the first directory on the user's 'runtimepath'
                            entries are kept in sorted order.
                        Addtionally, one may use ____(=command) to bookmark files or directories.
                            :NetrwMB[!] [files/directories]
                            No bang: enters files/directories into Netrw's bookmark system
                            --
                            No argument and in netrw buffer:
                              if there are marked files        : bookmark marked files
                              otherwise                        : bookmark file/directory under cursor
                            No argument and not in netrw buffer: bookmarks current open file
                            Has arguments                      : |glob()|s each arg and bookmarks them
                            With bang: deletes files/directories from Netrw's bookmark system
                            The :NetrwMB command is available outside of netrw buffers (once netrw has been invoked in the session).
                        The file ".netrwbook" holds bookmarks when netrw (and vim) is not active.
                            By default, its stored on the first directory on the user's |'runtimepath'|.

                            Related Topics:
                            |netrw-gb| how to return (go) to a bookmark
                    |netrw-mB| how to delete bookmarks
                            |netrw-qb| how to list bookmarks
                            |g:netrw_home| controls where .netrwbook is kept

                            BROWSING                    *netrw-enter*   *netrw-cr*

                            Browsing is simple: move the cursor onto a file or directory of interest.
                            Hitting the <cr> (the return key) will select the file or directory.
                            Directories will themselves be listed, and files will be opened using the
                            protocol given in the original read request.

                            CAVEAT: There are four forms of listing (see |netrw-i|). Netrw assumes that
                            two or more spaces delimit filenames and directory names for the long and
                            wide listing formats.
                        =If your filename or directory name has two or more sequential spaces embedded in it, or any trailing spaces, then you'll need to use the ____ to select it.
                                .
                                "thin" format
                        The |g:netrw_browse_split| option, which is zero by default, may be used to cause the opening of files to be done in a new window or tab instead of the default.
                            When the option is one or two, the splitting will be taken horizontally or vertically, respectively. When the option is set to three, a <cr> will cause the file to appear in a new tab.
                            When using the gui (gvim), one may select a file by pressing the <leftmouse> button.
                            In addition, if
                            * |g:netrw_retmap| == 1       AND   (its default value is 0)
                            * in a netrw-selected file, AND
                            * the user doesn't already have a <2-leftmouse> mapping defined before netrw is loaded
                            then a doubly-clicked leftmouse button will return to the netrw browser window.

                            Netrw attempts to speed up browsing, especially for remote browsing where one
                            may have to enter passwords, by keeping and re-using previously obtained
                            directory listing buffers. The |g:netrw_fastbrowse| variable is used to
                            control this behavior; one may have slow browsing (no buffer re-use), medium
                            speed browsing (re-use directory buffer listings only for remote directories),
                            and fast browsing (re-use directory buffer listings as often as possible).
                            The price for such re-use is that when changes are made (such as new files
                            are introduced into a directory), the listing may become out-of-date. One may
                            always refresh directory listing buffers by pressing ctrl-L (see
                            |netrw-ctrl-l|).
                                                            *netrw-s-cr*
                            Squeezing the Current Tree-Listing Directory~
                        When the tree listing style is enabled (see |netrw-i|) and one is using gvim, then the <s-cr> mapping may be used to squeeze (close) the directory currently containing the cursor.
                            Otherwise, one may remap a key combination of one's own choice to get this effect:
                            nmap <buffer> <silent> <nowait> YOURKEYCOMBO <Plug>NetrwTreeSqueeze
                            Put this line in $HOME/ftplugin/netrw/netrw.vim; it needs to be generated for netrw buffers only.

                            Related topics:
                                |netrw-ctrl-r|  |netrw-o|   |netrw-p|
                                |netrw-P|   |netrw-t|   |netrw-v|
                            Associated setting variables:
                               |g:netrw_browse_split|   |g:netrw_fastbrowse|
                               |g:netrw_ftp_list_cmd|   |g:netrw_ftp_sizelist_cmd|
                               |g:netrw_ftp_timelist_cmd|   |g:netrw_ssh_browse_reject|
                               |g:netrw_ssh_cmd|        |g:netrw_use_noswf|

                            BROWSING WITH A HORIZONTALLY SPLIT WINDOW   *netrw-o* *netrw-horiz*

                            Normally one enters a file or directory using the <cr>.
                        However, the "o" map allows one to open a new window to hold the new directory listing or file.
                        A horizontal split is used. (for vertical splitting, see |netrw-v|)
                            Normally, the o key splits the window horizontally with the new window and cursor at the top.
                            Associated setting variables: |g:netrw_alto| |g:netrw_winsize|
                            Related topics:
                                |netrw-ctrl-r|  |netrw-o|   |netrw-p|
                                |netrw-P|   |netrw-t|   |netrw-v|
                            Associated setting variables:
                               |g:netrw_alto|    control above/below splitting
                               |g:netrw_winsize| control initial sizing
                            --
                            BROWSING WITH A NEW TAB             *netrw-t*
                            Normally one enters a file or directory using the <cr>.
                        The "t" map allows one to open a new window holding the new directory listing or file in a new tab.
                        If you'd like to have the new listing in a background tab, use |gT|.
                            Related topics:
                                |netrw-ctrl-r|  |netrw-o|   |netrw-p|
                                |netrw-P|   |netrw-t|   |netrw-v|
                            Associated setting variables:
                               |g:netrw_winsize| control initial sizing

                            BROWSING WITH A VERTICALLY SPLIT WINDOW         *netrw-v*

                            Normally one enters a file or directory using the <cr>. However, the "v" map
                            allows one to open a new window to hold the new directory listing or file. A
                            vertical split is used. (for horizontal splitting, see |netrw-o|)

                            Normally, the v key splits the window vertically with the new window and
                            cursor at the left.

                            There is only one tree listing buffer; using "v" on a displayed subdirectory
                            will split the screen, but the same buffer will be shown twice.

                            Related topics:
                                |netrw-ctrl-r|  |netrw-o|   |netrw-p|
                                |netrw-P|   |netrw-t|   |netrw-v|
                            Associated setting variables:
                               |g:netrw_altv|    control right/left splitting
                               |g:netrw_winsize| control initial sizing

                            BROWSING USING A GVIM SERVER            *netrw-ctrl-r*

                            One may keep a browsing gvim separate from the gvim being used to edit.
                        Use the <c-r> map on a file (not a directory) in the netrw browser, and it will use a gvim server (see |g:netrw_servername|).
                        Subsequent use of <cr> (see |netrw-cr|) will re-use that server for editing files.
                            Related topics:
                                |netrw-ctrl-r|  |netrw-o|   |netrw-p|
                                |netrw-P|   |netrw-t|   |netrw-v|
                            Associated setting variables:
                                |g:netrw_servername|   : sets name of server
                                |g:netrw_browse_split| : controls how <cr> will open files
                            --
                            CHANGE LISTING STYLE (THIN LONG WIDE TREE)          *netrw-i*
                        The "i" map cycles between the thin, long, wide, and tree listing formats.
                          The thin listing format gives just the files' and directories' names.
                            The long listing is either based on the "ls" command via ssh for remote
                            directories or displays the filename, file size (in bytes), and the time and
                            date of last modification for local directories. With the long listing
                            format, netrw is not able to recognize filenames which have trailing spaces.
                            Use the thin listing format for such files.
                            --
                            The wide listing format uses two or more contiguous spaces to delineate
                            filenames; when using that format, netrw won't be able to recognize or use
                            filenames which have two or more contiguous spaces embedded in the name or any
                            trailing spaces. The thin listing format will, however, work with such files.
                            The wide listing format is the most compact.
                        The tree listing format has a top directory followed by files and directories
                            preceded by one or more "|"s, which indicate the directory depth.
                            .
                        One may open and close directories by pressing the <cr> key while atop the directory name.
                        One may make a preferred listing style your default; see |g:netrw_liststyle|.
                            As an example, by putting the following line in your .vimrc,  let g:netrw_liststyle= 3
                            the tree style will become your default listing style.
                        One typical way to use the netrw tree display is to: [***(*)] __ __
                            vim .
                            (use i until a tree display shows)
                            navigate to a file
                            v (edit as desired in vertically split window)
                            ctrl-w h (to return to the netrw listing)
                            P (edit newly selected file in the previous window)
                            ctrl-w h (to return to the netrw listing)
                            P (edit newly selected file in the previous window)
                            ...etc...

                            Associated setting variables: |g:netrw_liststyle| |g:netrw_maxfilenamelen|
                                                          |g:netrw_timefmt|   |g:netrw_list_cmd|

                            CHANGE FILE PERMISSION                      *netrw-gp*
                        "gp" will ask you for a new permission for the file named under the cursor.
                            Note: Currently, this only works for local files.

                            Associated setting variables: |g:netrw_chgperm|

                            CHANGING TO A BOOKMARKED DIRECTORY          *netrw-gb*
                        To change directory back to a bookmarked directory, use ___ ****
                            {cnt}gb

                            Any count may be used to reference any of the bookmarks.
                            Note that |netrw-qb| shows both bookmarks and history;
                        to go to a location stored in the history see |netrw-u| and |netrw-U|.
                            Related Topics:
                                |netrw-mB| how to delete bookmarks
                                |netrw-mb| how to make a bookmark
                                |netrw-qb| how to list bookmarks

                            CHANGING TO A PREDECESSOR DIRECTORY     *netrw-u* *netrw-updir*
                        Every time you change to a new directory (new for the current session), netrw will save the directory in a recently-visited directory history list (unless |g:netrw_dirhistmax| is zero;
                            by default, it holds ten entries).
                            .
                        With the "u" map, one can change to an earlier directory (predecessor).
                        To do the opposite, see |netrw-U|.
                            The "u" map also accepts counts to go back in the history several slots.
                            For your convenience, qb (see |netrw-qb|) lists the history number which may be used in that count.
                                                    *.netrwhist*
                            See |g:netrw_dirhistmax| for how to control the quantity of history stack slots.
                            The file ".netrwhist" holds history when netrw (and vim) is not active.
                            By default, it's stored on the first directory on the user's |'runtimepath'|.

                            Related Topics:
                                |netrw-U| changing to a successor directory
                                |g:netrw_home| controls where .netrwhist is kept

                            CHANGING TO A SUCCESSOR DIRECTORY       *netrw-U* *netrw-downdir*
                        With the "U" map, one can change to a later directory (successor).
                            This map is the opposite of the "u" map. (see |netrw-u|) Use the
                            qb map to list both the bookmarks and history. (see |netrw-qb|)
                        The "U" map also accepts counts to go forward in the history several slots.
                            See |g:netrw_dirhistmax| for how to control the quantity of history stack slots.

                            CHANGING TREE TOP           *netrw-ntree* *:Ntree* *netrw-gn*
                        One may specify a new tree top for tree listings using
                            :Ntree [dirname]

                            Without a "dirname", the current line is used (and any leading depth information is elided).
                            With a "dirname", the specified directory name is used.
                        The "gn" map will take the word below the cursor and use that for changing the top of the tree listing.
                            NETRW CLEAN                 *netrw-clean* *:NetrwClean*
                            .
                        With :NetrwClean one may easily remove netrw from one's home directory;
                          more precisely, from the first directory on your |'runtimepath'|.
                        With :NetrwClean!, netrw will attempt to remove netrw from all directories on your |'runtimepath'|.
                            Of course, you have to have write/delete permissions correct to do this.
                            With either form of the command, netrw will first ask for confirmation
                            that the removal is in fact what you want to do. If netrw doesn't have
                            permission to remove a file, it will issue an error message.
                                                    *netrw-gx*
                            CUSTOMIZING BROWSING WITH A SPECIAL HANDLER *netrw-x* *netrw-handler*
                                                    (also see |netrw_filehandler|)
                            Certain files, such as html, gif, jpeg, (word/office) doc, etc, files, are
                            best seen with a special handler (ie. a tool provided with your computer's
                            operating system).
                        Netrw allows one to invoke such special handlers by:
                            when Exploring, hit the "x" key
                            when editing, hit gx with the cursor atop the special filename
                              (latter not available if the |g:netrw_nogx| variable exists)
                            Netrw determines which special handler by the following method:
                            * if |g:netrw_browsex_viewer| exists, then it will be used to attempt to
                            view files. Examples of useful settings (place into your <.vimrc>):
                            :let g:netrw_browsex_viewer= "kfmclient exec"
                            or
                            :let g:netrw_browsex_viewer= "xdg-open"
                            If g:netrw_browsex_viewer == '-', then netrwFileHandlers#Invoke() will be used instead (see |netrw_filehandler|).
                            * for Windows 32 or 64, the URL and FileProtocolHandler dlls are used.
                            * for Gnome (with gnome-open): gnome-open is used.
                            * for KDE (with kfmclient)   : kfmclient is used
                            * for Mac OS X               : open is used.
                            * otherwise the netrwFileHandler plugin is used.
                            --
                            The file's suffix is used by these various approaches to determine an
                            appropriate application to use to "handle" these files. Such things as
                            OpenOffice (*.sfx), visualization (*.jpg, *.gif, etc), and PostScript (*.ps,
                            *.eps) can be handled.

                            The gx mapping extends to all buffers; apply "gx" while atop a word and netrw
                            will apply a special handler to it (like "x" works when in a netrw buffer).
                            One may also use visual mode (see |visual-start|) to select the text that the
                            special handler will use. Normally gx uses expand("<cfile>") to pick up the
                            text under the cursor;
                            one may change what |expand()| uses via the |g:netrw_gx| variable (options include "<cword>", "<cWORD>").
                            Note that expand("<cfile>") depends on the |'isfname'| setting. Alternatively, one may select the text to be used by gx by making a visual selection (see |visual-block|) and then pressing gx.

                            Associated setting variables:
                            |g:netrw_gx|    control how gx picks up the text under the cursor
                            |g:netrw_nogx|  prevent gx map while editing
                            |g:netrw_suppress_gx_mesg| controls gx's suppression of browser messages
                                                        *netrw_filehandler*
                            When |g:netrw_browsex_viewer| exists and is "-", then netrw will attempt to
                            handle the special file with a vim function. The "x" map applies a function
                            to a file, based on its extension. Of course, the handler function must exist for it to be called!
                            Ex. mypgm.html   x -> NFH_html("scp://user@host/some/path/mypgm.html")
                            Users may write their own netrw File Handler functions to support more suffixes with special handling.
                        See <autoload/netrwFileHandlers.vim> for examples on how to make file handler functions.
                            As an example:
                            " NFH_suffix(filename)
                            fun! NFH_suffix(filename)
                            ..do something special with filename..
                            endfun
                            --
                            These functions need to be defined in some file in your .vim/plugin (vimfiles\plugin) directory.
                            Vim's function names may not have punctuation characters (except for the underscore) in them.
                            To support suffices that contain such characters, netrw will first convert the suffix using the following table:

                            @ -> AT       ! -> EXCLAMATION    % -> PERCENT
                            : -> COLON    = -> EQUAL          ? -> QUESTION
                            , -> COMMA    - -> MINUS          ; -> SEMICOLON
                            $ -> DOLLAR   + -> PLUS           ~ -> TILDE
                            So, for example:
                                file.rcs,v -> NFH_rcsCOMMAv()
                            If more such translations are necessary, please send me email:
                                    NdrOchip at ScampbellPfamily.AbizM - NOSPAM
                            with a request.
                            Associated setting variable: |g:netrw_browsex_viewer|
                                                        *netrw-curdir*
                            DELETING BOOKMARKS                  *netrw-mB*
                        To delete a bookmark, use  {cnt}mB
                            If there are marked files, then mB will remove them from the bookmark list.
                            Alternatively, one may use :NetrwMB! (see |netrw-:NetrwMB|).
                            :NetrwMB! [files/directories]
                            Related Topics:
                            |netrw-gb| how to return (go) to a bookmark
                            |netrw-mb| how to make a bookmark
                            |netrw-qb| how to list bookmarks
                            --
                            DELETING FILES OR DIRECTORIES   *netrw-delete* *netrw-D* *netrw-del*
                            If files have not been marked with |netrw-mf|:   (local marked file list)
                        Deleting/removing files and directories  involves moving the cursor to the file/directory to be deleted and pressing "D".
                          Directories must be empty first before they can be successfully removed.
                            If the directory is a softlink to a directory, then netrw will make two requests to remove the directory before succeeding.
                            Netrw will ask for confirmation before doing the removal(s).
                        You may select a range of lines with the "V" command (visual selection), and then pressing "D".
                            If files have been marked with |netrw-mf|:   (local marked file list)
                            Marked files (and empty directories) will be deleted; again, you'll be
                            asked to confirm the deletion before it actually takes place.
                        A further approach is to delete files which match a pattern.
                          * use :MF pattern (see |netrw-:MF|); then press "D".
                          * use mr (see |netrw-mr|) which will prompt you for pattern.
                          This will cause the matching files to be marked. Then, press "D".
                            --
                            If your vim has 7.4 with patch#1107, then |g:netrw_localrmdir| no longer
                            is used to remove directories; instead, vim's |delete()| is used with
                            the "d" option. Please note that only empty directories may be deleted
                            with the "D" mapping. Regular files are deleted with |delete()|, too.

                            The |g:netrw_rm_cmd|, |g:netrw_rmf_cmd|, and |g:netrw_rmdir_cmd| variables are used to control the attempts to remove remote files and directories.
                            The g:netrw_rm_cmd is used with files, and its default value is:
                                g:netrw_rm_cmd: ssh HOSTNAME rm
                            The g:netrw_rmdir_cmd variable is used to support the removal of directories.
                            Its default value is:
                                |g:netrw_rmdir_cmd|: ssh HOSTNAME rmdir
                            If removing a directory fails with g:netrw_rmdir_cmd, netrw then will attempt to remove it again using the g:netrw_rmf_cmd variable. Its default value is:
                            |g:netrw_rmf_cmd|: ssh HOSTNAME rm -f
                            Related topics: |netrw-d|
                            Associated setting variable: |g:netrw_localrmdir| |g:netrw_rm_cmd|
                                                         |g:netrw_rmdir_cmd|   |g:netrw_ssh_cmd|
                            *netrw-explore* *netrw-hexplore* *netrw-nexplore* *netrw-pexplore*
                            *netrw-rexplore* *netrw-sexplore* *netrw-texplore* *netrw-vexplore* *netrw-lexplore*
                        [ DIRECTORY EXPLORATION COMMANDS ]
                            :[N]Explore[!] [dir]... Explore directory of current file      *:Explore*
                            :[N]Hexplore[!] [dir]... Horizontal Split & Explore             *:Hexplore*
                            :[N]Lexplore[!] [dir]... Left Explorer Toggle                   *:Lexplore*
                            :[N]Sexplore[!] [dir]... Split&Explore current file's directory *:Sexplore*
                            :[N]Vexplore[!] [dir]... Vertical   Split & Explore             *:Vexplore*
                            :Texplore       [dir]... Tab & Explore                          *:Texplore*
                            :Rexplore            ... Return to/from Explorer                *:Rexplore*
                            Used with :Explore **/pattern : (also see |netrw-starstar|)
                            :Nexplore............. go to next matching file                *:Nexplore*
                            :Pexplore............. go to previous matching file            *:Pexplore*
                                                    *netrw-:Explore*
                            :Explore will open the local-directory browser on the current file's directory (or on directory [dir] if specified).
                            The window will be split only if the file has been modified and |'hidden'| is not set,
                            otherwise the browsing window will take over that window.
                            Normally the splitting is taken horizontally.
                            Also see: |netrw-:Rexplore|
                            :Explore! is like :Explore, but will use vertical splitting.
                                                    *netrw-:Hexplore*
                            :Hexplore [dir] does an :Explore with |:belowright| horizontal splitting.
                            :Hexplore! [dir] does an :Explore with |:aboveleft| horizontal splitting.
                                                    *netrw-:Lexplore*
                            :[N]Lexplore [dir] toggles a full height Explorer window on the left hand side of the current tab.
                            It will open a netrw window on the current
                                  directory if [dir] is omitted; a :Lexplore [dir] will show the
                                  specified directory in the left-hand side browser display no matter
                                  from which window the command is issued.

                                  By default, :Lexplore will change an uninitialized |g:netrw_chgwin|
                                  to 2; edits will thus preferentially be made in window#2.

                                  The [N] specifies a |g:netrw_winsize| just for the new :Lexplore
                                  window.

                                  Those who like this method often also like tree style displays;
                                  see |g:netrw_liststyle|.

                            :[N]Lexplore! [dir] is similar to :Lexplore, except that the full-height
                                  Explorer window will open on the right hand side and an
                                  uninitialized |g:netrw_chgwin| will be set to 1 (eg. edits will
                                  preferentially occur in the leftmost window).

                                  Also see: |netrw-C|           |g:netrw_browse_split|   |g:netrw_wiw|
                                        |netrw-p| |netrw-P|   |g:netrw_chgwin|
                                        |netrw-c-tab|       |g:netrw_winsize|

                                                    *netrw-:Sexplore*
                            :[N]Sexplore will always split the window before invoking the local-directory browser.
                             As with Explore, the splitting is normally done horizontally.
                            :[N]Sexplore! [dir] is like :Sexplore, but the splitting will be done vertically.

                                                    *netrw-:Texplore*
                            :Texplore [dir] does a |:tabnew| before generating the browser window

                                                    *netrw-:Vexplore*
                            :[N]Vexplore [dir] does an :Explore with |:leftabove| vertical splitting.
                            :[N]Vexplore! [dir] does an :Explore with |:rightbelow| vertical splitting.

                            The optional parameters are:

                             [N]: This parameter will override |g:netrw_winsize| to specify the quantity of
                                  rows and/or columns the new explorer window should have.
                                  Otherwise, the |g:netrw_winsize| variable, if it has been specified by the
                                  user, is used to control the quantity of rows and/or columns new
                                  explorer windows should have.

                             [dir]: By default, these explorer commands use the current file's directory.
                                    However, one may explicitly provide a directory (path) to use instead;
                                ie.

                                :Explore /some/path
                            <
                                                    *netrw-:Rexplore*
                            :Rexplore This command is a little different from the other Explore commands
                                   as it doesn't necessarily open an Explorer window.

                                   Return to Explorer~
                                   When one edits a file using netrw which can occur, for example,
                                   when pressing <cr> while the cursor is atop a filename in a netrw
                                   browser window, a :Rexplore issued while editing that file will
                                   return the display to that of the last netrw browser display in
                                   that window.

                                   Return from Explorer~
                                   Conversely, when one is editing a directory, issuing a :Rexplore
                                   will return to editing the file that was last edited in that
                                   window.

                                   The <2-leftmouse> map (which is only available under gvim and
                                   cooperative terms) does the same as :Rexplore.

                            Also see: |g:netrw_alto| |g:netrw_altv| |g:netrw_winsize|
                            *netrw-star* *netrw-starpat* *netrw-starstar* *netrw-starstarpat* *netrw-grep*
                        [ EXPLORING WITH STARS AND PATTERNS ] __ __ ****
                            When Explore, Sexplore, Hexplore, or Vexplore are used with one of the following four patterns
                            Explore generates a list of files which satisfy the request for the local file system.
                            These exploration patterns will not work with remote file browsing.
                            */filepat   files in current directory which satisfy filepat
                            **/filepat  files in current directory or below which satisfy the
                                file pattern
                            *//pattern  files in the current directory which contain the
                                pattern (vimgrep is used)
                            **//pattern files in the current directory or below which contain
                                the pattern (vimgrep is used)
                            --
                            The cursor will be placed on the first file in the list.
                            One may then continue to go to subsequent files on that list via |:Nexplore| or to preceding files on that list with |:Pexplore|.
                            Explore will update the directory and place the cursor appropriately.
                            A plain
                                :Explore
                            will clear the explore list.
                        If your console or gui produces recognizable shift-up or shift-down sequences, then you'll likely find using shift-downarrow and shift-uparrow convenient. [__]
                            They're mapped by netrw as follows:
                            <s-down> == Nexplore, and
                            <s-up>   == Pexplore.
                            As an example, consider
                                :Explore */*.c
                                :Nexplore
                                :Nexplore
                                :Pexplore
                            The status line will show, on the right hand side of the status line, a message like "Match 3 of 20".
                            Associated setting variables:
                            |g:netrw_keepdir|          |g:netrw_browse_split|
                            |g:netrw_fastbrowse|       |g:netrw_ftp_browse_reject|
                            |g:netrw_ftp_list_cmd|     |g:netrw_ftp_sizelist_cmd|
                            |g:netrw_ftp_timelist_cmd| |g:netrw_list_cmd|
                            |g:netrw_liststyle|
                            --
                            DISPLAYING INFORMATION ABOUT FILE               *netrw-qf*
                        With the cursor atop a filename, pressing "qf" will reveal the file's size and last modification timestamp.
                            Currently this capability is only available for local files.
                            --
                            EDIT FILE OR DIRECTORY HIDING LIST  *netrw-ctrl-h* *netrw-edithide*
                        The "<ctrl-h>" map brings up a requestor allowing the user to change the file/directory hiding list contained in |g:netrw_list_hide|.
                            The hiding list consists of one or more patterns delimited by commas.
                            Files and/or directories satisfying these patterns will either be hidden (ie. not shown) or be the only ones displayed (see |netrw-a|).
                        The "gh" mapping (see |netrw-gh|) quickly alternates between the usual hiding list and the hiding of files or directories that begin with ".".
                        As an example,  let g:netrw_list_hide= '\(^\|\s\s\)\zs\.\S\+'
                            Effectively, this makes the effect of a |netrw-gh| command the initial setting.
                            What it means:
                            \(^\|\s\s\)   : if the line begins with the following, -or- two consecutive spaces are encountered
                            \zs           : start the hiding match now
                            \.            : if it now begins with a dot
                            \S\+          : and is followed by one or more non-whitespace characters
                            Associated setting variables: |g:netrw_hide| |g:netrw_list_hide|
                            Associated topics: |netrw-a| |netrw-gh| |netrw-mh|
                                                *netrw-sort-sequence*
                            EDITING THE SORTING SEQUENCE        *netrw-S* *netrw-sortsequence*
                            When "Sorted by" is name, one may specify priority via the sorting sequence (g:netrw_sort_sequence).
                            The sorting sequence typically prioritizes the name-listing by suffix, although any pattern will do.
                            Patterns are delimited by commas.
                            The default sorting sequence is (all one line):
                            For Unix:
                                '[\/]$,\<core\%(\.\d\+\)\=,\.[a-np-z]$,\.h$,\.c$,\.cpp$,*,\.o$,\.obj$,
                                \.info$,\.swp$,\.bak$,\~$'
                            Otherwise:
                                '[\/]$,\.[a-np-z]$,\.h$,\.c$,\.cpp$,*,\.o$,\.obj$,\.info$,
                                \.swp$,\.bak$,\~$'
                            The lone * is where all filenames not covered by one of the other patterns will end up.
                            One may change the sorting sequence by modifying the g:netrw_sort_sequence variable (either manually or in your <.vimrc>) or by using the "S" map.
                            Related topics:               |netrw-s|               |netrw-S|
                            Associated setting variables: |g:netrw_sort_sequence| |g:netrw_sort_options|
                            --
                            EXECUTING FILE UNDER CURSOR VIA SYSTEM()            *netrw-X*
                        ( Pressing X while the cursor is atop an executable file will yield a prompt using the filename asking for any arguments. )
                            Upon pressing a [return], netrw will then call |system()| with that command and arguments.
                            The result will be displayed by |:echomsg|, and so |:messages| will repeat display of the result.
                            Ansi escape sequences will be stripped out.
                            See |cmdline-window| for directions for more on how to edit the arguments.
                            --
                            FORCING TREATMENT AS A FILE OR DIRECTORY    *netrw-gd* *netrw-gf*
                            Remote symbolic links (ie. those listed via ssh or ftp) are problematic in that it is difficult to tell whether they link to a file or to a directory.
                        To force treatment as a file: use gf
                        To force treatment as a directory: use gd
                            GOING UP                            *netrw--*
                        To go up a directory, press "-"
                        or press the <cr> when atop the ../ directory entry in the listing.
                            Netrw will use the command in |g:netrw_list_cmd| to perform the directory listing operation after changing HOSTNAME to the host specified by the user-prpvided url.
                            By default netrw provides the command as:
                                ssh HOSTNAME ls -FLa
                            where the HOSTNAME becomes the [user@]hostname as requested by the attempt to read.
                            Naturally, the user may override this command with whatever is preferred.
                            The NetList function which implements remote browsing
                            expects that directories will be flagged by a trailing slash.
                            --
                            HIDING FILES OR DIRECTORIES         *netrw-a* *netrw-hiding*
                            Netrw's browsing facility allows one to use the hiding list in one of three ways: ignore it, hide files which match, and show only those files which match.
                            If no files have been marked via |netrw-mf|:
                        The "a" map allows the user to cycle through the three hiding modes.
                        The |g:netrw_list_hide| variable holds a comma delimited list of patterns based on regular expressions (ex. ^.*\.obj$,^\.) which specify the hiding list.
                            (also see |netrw-ctrl-h|) To set the hiding list, use the <c-h> map.
                            As an example, to hide files which begin with a ".", one may use the <c-h> map to set the hiding list to '^\..*' (or one may put let g:netrw_list_hide= '^\..*' in one's <.vimrc>).
                            One may then use the "a" key to show all files, hide matching files, or to show only the matching files.
                            Example: \.[ch]$
                            This hiding list command will hide/show all *.c and *.h files.
                            Example: \.c$,\.h$
                            This hiding list command will also hide/show all *.c and *.h files.
                            Don't forget to use the "a" map to select the mode (normal/hiding/show) you want!
                        If files have been marked using |netrw-mf|, then this command will:
                             if showing all files or non-hidden files:
                              modify the g:netrw_list_hide list by appending the marked files to it
                              and showing only non-hidden files.

                             else if showing hidden files only:
                              modify the g:netrw_list_hide list by removing the marked files from it
                              and showing only non-hidden files.
                             endif
                                                *netrw-gh* *netrw-hide*
                        As a quick shortcut, one may press gh to toggle between hiding files which begin with a period (dot) and not hiding them.
                            Associated setting variables: |g:netrw_list_hide| |g:netrw_hide|
                            Associated topics: |netrw-a| |netrw-ctrl-h| |netrw-mh|
                                                *netrw-gitignore*
                        Netrw provides a helper function 'netrw_gitignore#Hide()' that, when used with |g:netrw_list_hide| automatically hides all git-ignored files.
                            'netrw_gitignore#Hide' searches for patterns in the following files:
                            './.gitignore'
                            './.git/info/exclude'
                            global gitignore file: `git config --global core.excludesfile`
                            system gitignore file: `git config --system core.excludesfile`
                            Files that do not exist, are ignored.
                            Git-ignore patterns are taken from existing files, and converted to patterns for hiding files.
                            For example, if you had '*.log' in your '.gitignore' file, it would be converted to '.*\.log'.
                        To use this function, simply assign its output to |g:netrw_list_hide| option.
                                Example: let g:netrw_list_hide= netrw_gitignore#Hide()
                                    Git-ignored files are hidden in Netrw.

                                Example: let g:netrw_list_hide= netrw_gitignore#Hide('my_gitignore_file')
                                    Function can take additional files with git-ignore patterns.

                                Example: g:netrw_list_hide= netrw_gitignore#Hide() . '.*\.swp$'
                                    Combining 'netrw_gitignore#Hide' with custom patterns.

                            IMPROVING BROWSING          *netrw-listhack* *netrw-ssh-hack*
                        Especially with the remote directory browser, constantly entering the password is tedious.
                            For Linux/Unix systems, the book "Linux Server Hacks - 100 industrial strength tips & tools" by Rob Flickenger (O'Reilly, ISBN 0-596-00461-3) gives a tip for setting up no-password ssh and scp and discusses associated security issues.
                            It used to be available at http://hacks.oreilly.com/pub/h/66, but apparently that address is now being redirected to some "hackzine".
                            I'll attempt a summary based on that article and on a communication from Ben Schmidt:
                                1. Generate a public/private key pair on the local machine
                                   (ssh client):
                                    ssh-keygen -t rsa
                                    (saving the file in ~/.ssh/id_rsa as prompted)
                                2. Just hit the <CR> when asked for passphrase (twice) for no
                                   passphrase. If you do use a passphrase, you will also need to use
                                   ssh-agent so you only have to type the passphrase once per session.
                                   If you don't use a passphrase, simply logging onto your local
                                   computer or getting access to the keyfile in any way will suffice
                                   to access any ssh servers which have that key authorized for login.

                                3. This creates two files:
                                    ~/.ssh/id_rsa
                                    ~/.ssh/id_rsa.pub
                                4. On the target machine (ssh server):
                                    cd
                                    mkdir -p .ssh
                                    chmod 0700 .ssh
                                5. On your local machine (ssh client): (one line)
                                    ssh {serverhostname}
                                      cat '>>' '~/.ssh/authorized_keys2' < ~/.ssh/id_rsa.pub
                                   or, for OpenSSH, (one line)
                                    ssh {serverhostname}
                                      cat '>>' '~/.ssh/authorized_keys' < ~/.ssh/id_rsa.pub
                            You can test it out with
                                ssh {serverhostname}
                            and you should be log onto the server machine without further need to type
                            anything.
                            --
                            If you decided to use a passphrase, do:
                                ssh-agent $SHELL
                                ssh-add
                                ssh {serverhostname}
                            You will be prompted for your key passphrase when you use ssh-add, but not
                            subsequently when you use ssh. For use with vim, you can use
                                ssh-agent vim
                            and, when next within vim, use
                                :!ssh-add
                            Alternatively, you can apply ssh-agent to the terminal you're planning on
                            running vim in:
                                ssh-agent xterm &
                            and do ssh-add whenever you need.
                            --
                            For Windows, folks on the vim mailing list have mentioned that Pageant helps
                            with avoiding the constant need to enter the password.
                            --
                            Kingston Fung wrote about another way to avoid constantly needing to enter
                            passwords:
                                In order to avoid the need to type in the password for scp each time, you
                                provide a hack in the docs to set up a non password ssh account. I found a
                                better way to do that: I can use a regular ssh account which uses a
                                password to access the material without the need to key-in the password
                                each time. It's good for security and convenience. I tried ssh public key
                                authorization + ssh-agent, implementing this, and it works! Here are two
                                links with instructions:

                                http://www.ibm.com/developerworks/library/l-keyc2/
                                http://sial.org/howto/openssh/publickey-auth/

                                Ssh hints:

                                Thomer Gil has provided a hint on how to speed up netrw+ssh:
                                    http://thomer.com/howtos/netrw_ssh.html

                                Alex Young has several hints on speeding ssh up:
                                    http://usevim.com/2012/03/16/editing-remote-files/

                            LISTING BOOKMARKS AND HISTORY       *netrw-qb* *netrw-listbookmark*
                        Pressing "qb" (query bookmarks) will list both the bookmarked directories and directory traversal history.
                            Related Topics:
                            |netrw-gb| how to return (go) to a bookmark
                            |netrw-mb| how to make a bookmark
                            |netrw-mB| how to delete bookmarks
                    |netrw-u| change to a predecessor directory via the history stack
                    |netrw-U| change to a successor   directory via the history stack

                            MAKING A NEW DIRECTORY                  *netrw-d*
                        With the "d" map one may make a new directory either remotely (which depends on the global variable g:netrw_mkdir_cmd) or locally (which depends on the global variable g:netrw_localmkdir).
                            Netrw will issue a request for the new directory's name.
                            A bare <CR> at that point will abort the making of the directory.
                            Attempts to make a local directory that already exists (as either a file or a directory) will be detected, reported on, and ignored.
                            Related topics: |netrw-D|
                            Associated setting variables:   |g:netrw_localmkdir|   |g:netrw_mkdir_cmd|
                                            |g:netrw_remote_mkdir| |netrw-%|

                            MAKING THE BROWSING DIRECTORY THE CURRENT DIRECTORY *netrw-cd*
                        ( By default, |g:netrw_keepdir| is 1. )
                            This setting means that the current directory will not track the browsing directory. (done for backwards compatibility with v6's file explorer).
                        Setting g:netrw_keepdir to 0 tells netrw to make vim's current directory track netrw's browsing directory.
                            However, given the default setting for g:netrw_keepdir of 1 where netrw maintains its own separate notion of the current directory, in order to make the two directories the same, use the "cd" map (type cd).
                        That map will set Vim's notion of the current directory to netrw's current browsing directory.
                            *netrw-c* : This map's name has been changed from "c" to cd (see |netrw-cd|).
                                      This change was done to allow for |netrw-cb| and |netrw-cB| maps.
                            Associated setting variable: |g:netrw_keepdir|
                            MARKING FILES                   *netrw-:MF* *netrw-mf*
                                (also see |netrw-mr|)
                            Netrw provides several ways to mark files:
                        * One may mark files with the cursor atop a filename and then pressing "mf".
                        * With gvim, in addition one may mark files with <s-leftmouse>. (see |netrw-mouse|)
                        * One may use the :MF command, which takes a list of files (for local directories, the list may include wildcards -- see |glob()|)
                                    :MF *.c
                                (Note that :MF uses |<f-args>| to break the line at spaces)
                        * Mark files using the |argument-list| (|netrw-mA|)
                        * Mark files based upon a |location-list| (|netrw-qL|)
                        * Mark files based upon the quickfix list (|netrw-qF|)
                                  (|quickfix-error-lists|)
                                  .
                        Ref: The following netrw maps make use of marked files: ****
                    |netrw-a|   Hide marked files/directories
                    |netrw-D|   Delete marked files/directories
                    |netrw-ma|  Move marked files' names to |arglist|
                    |netrw-mA|  Move |arglist| filenames to marked file list
                    |netrw-mb|  Append marked files to bookmarks
                    |netrw-mB|  Delete marked files from bookmarks
                    |netrw-mc|  Copy marked files to target
                    |netrw-md|  Apply vimdiff to marked files
                    |netrw-me|  Edit marked files
                    |netrw-mF|  Unmark marked files
                    |netrw-mg|  Apply vimgrep to marked files
                    |netrw-mm|  Move marked files to target
                    |netrw-mp|  Print marked files
                    |netrw-ms|  Netrw will source marked files
                    |netrw-mt|  Set target for |netrw-mm| and |netrw-mc|
                    |netrw-mT|  Generate tags using marked files
                    |netrw-mv|  Apply vim command to marked files
                    |netrw-mx|  Apply shell command to marked files
                    |netrw-mX|  Apply shell command to marked files, en bloc
                    |netrw-mz|  Compress/Decompress marked files
                    |netrw-O|   Obtain marked files
                    |netrw-R|   Rename marked files
                    One may unmark files one at a time the same way one marks them; ie. place the cursor atop a marked file and press "mf".
                            This process also works with <s-leftmouse> using gvim.
                            .
                    One may unmark all files by pressing "mu" (see |netrw-mu|).
                        Marked files are highlighted using the "netrwMarkFile" highlighting group,
                            which by default is linked to "Identifier" (see Identifier under |group-name|).
                            You may change the highlighting group by putting something like
                                highlight clear netrwMarkFile
                                hi link netrwMarkFile ..whatever..
                            into $HOME/.vim/after/syntax/netrw.vim .
                        If the mouse is enabled and works with your vim, you may use <s-leftmouse> to mark one or more files.
                        You may mark multiple files by dragging the shifted leftmouse. (see |netrw-mouse|)
                                        *markfilelist* *global_markfilelist* *local_markfilelist*
                            All marked files are entered onto the global marked file list; there is only one such list.
                        In addition, every netrw buffer also has its own buffer-local marked file list;
                            since netrw buffers are associated with specific directories, this means that each directory has its own local marked file list.
                            The various commands which operate on marked files use one or the other of the marked file lists.
                            --
                            Known Problem: if one is using tree mode (|g:netrw_liststyle|) and several
                            directories have files with the same name, then marking such a file will
                            result in all such files being highlighted as if they were all marked.
                            The |markfilelist|, however, will only have the selected file in it.
                            This problem is unlikely to be fixed.

                            UNMARKING FILES                         *netrw-mF*
                                (also see |netrw-mf|, |netrw-mu|)
                    The "mF" command will unmark all files in the current buffer.
                            One may also use mf (|netrw-mf|) on a specific, already marked, file to unmark just that file.
                            .
                            MARKING FILES BY LOCATION LIST                  *netrw-qL*
                            (also see |netrw-mf|)
                    One may convert |location-list|s into a marked file list using "qL". __
                            You may then proceed with commands such as me (|netrw-me|) to edit them.
                            MARKING FILES BY QUICKFIX LIST                  *netrw-qF*
                                (also see |netrw-mf|)
                    One may convert |quickfix-error-lists| into a marked file list using "qF". __
                            You may then proceed with commands such as me (|netrw-me|) to edit them.
                            Quickfix error lists are generated, for example, by calls to |:vimgrep|.  @
                            --
                              MARKING FILES BY REGULAR EXPRESSION             *netrw-mr*
                              (also see |netrw-mf|)
                    One may also mark files by pressing "mr"; netrw will then issue a prompt, "Enter regexp: ".
                            You may then enter a shell-style regular expression such as *.c$ (see |glob()|).
                            For remote systems, glob() doesn't work -- so netrw converts "*" into ".*" (see |regexp|) and marks files based on that.
                            In the future I may make it possible to use |regexp|s instead of glob()-style expressions (yet-another-option).
                            See |cmdline-window| for directions on more on how to edit the regular expression.
                            --
                            MARKED FILES, ARBITRARY VIM COMMAND             *netrw-mv*
                            (See |netrw-mf| and |netrw-mr| for how to mark files)
                            (uses the local marked-file list)
                    The "mv" map causes netrw to execute an arbitrary vim command on each file on the local marked file list, individually:
                            * 1split
                            * sil! keepalt e file
                            * run vim command
                            * sil! keepalt wq!
                            A prompt, "Enter vim command: ", will be issued to elicit the vim command you wish used.
                            See |cmdline-window| for directions for more on how to edit the command.
                            --
                    MARKED FILES, ARBITRARY SHELL COMMAND               *netrw-mx*
                            (See |netrw-mf| and |netrw-mr| for how to mark files)
                            (uses the local marked-file list)
                        Upon activation of the "mx" map, netrw will query the user for some (external) command to be applied to all marked files.
                            All "%"s in the command will be substituted with the name of each marked file in turn.
                            If no "%"s are in the command, then the command will be followed by a space and a marked filename.
                            Example:
                            (mark files)
                            mx
                            Enter command: cat
                            The result is a series of shell commands:
                            cat 'file1'
                            cat 'file2'
                            ...
                            MARKED FILES, ARBITRARY SHELL COMMAND, EN BLOC          *netrw-mX*
                            (See |netrw-mf| and |netrw-mr| for how to mark files)
                            (uses the global marked-file list)
                        Upon activation of the 'mX' map, netrw will query the user for some (external) command to be applied to all marked files on the global marked file list.
                            The "en bloc" means that one command will be executed on all the files at once:
                            command files
                            This approach is useful, for example, to select files and make a tarball:
                            (mark files)
                            mX
                            Enter command: tar cf mynewtarball.tar
                            The command that will be run with this example:
                            tar cf mynewtarball.tar 'file1' 'file2' ...
                            --
                            MARKED FILES: ARGUMENT LIST             *netrw-ma* *netrw-mA*
                            (See |netrw-mf| and |netrw-mr| for how to mark files)
                            (uses the global marked-file list)
                    Using ma, one moves filenames from the marked file list to the argument list.
                    Using mA, one moves filenames from the argument list to the marked file list.
                            See Also: |netrw-cb| |netrw-cB| |netrw-qF| |argument-list| |:args|
                            MARKED FILES: BUFFER LIST               *netrw-cb* *netrw-cB*
                            (See |netrw-mf| and |netrw-mr| for how to mark files)
                            (uses the global marked-file list)
                    Using cb, one moves filenames from the marked file list to the buffer list.
                    Using cB, one copies filenames from the buffer list to the marked file list.
                            See Also: |netrw-ma| |netrw-mA| |netrw-qF| |buffer-list| |:buffers|
                            --
                            MARKED FILES: COMPRESSION AND DECOMPRESSION     *netrw-mz*
                            (See |netrw-mf| and |netrw-mr| for how to mark files)
                            (uses the local marked file list)
                        If any marked files are compressed, then "mz" will decompress them.  If any marked files are decompressed, then "mz" will compress them
                            using the command specified by |g:netrw_compress|; by default, that's "gzip".
                            For decompression, netrw uses a |Dictionary| of suffices and their associated decompressing utilities; see |g:netrw_decompress|.
                            Remember that one can mark multiple files by regular expression
                            tip: (see |netrw-mr|); this is particularly useful to facilitate compressing and decompressing a large number of files.
                            Associated setting variables: |g:netrw_compress| |g:netrw_decompress|
                            --
                            MARKED FILES: COPYING                       *netrw-mc*
                            (See |netrw-mf| and |netrw-mr| for how to mark files)
                            (Uses the global marked file list)
                    Select a target directory with mt (|netrw-mt|).  Then change directory, select file(s) (see |netrw-mf|), and press "mc".
                            The copy is done from the current window (where one does the mf) to the target.
                            If one does not have a target directory set with |netrw-mt|, then netrw will query you for a directory to copy to.
                            One may also copy directories and their contents (local only) to a target directory.
                            Associated setting variables:
                            |g:netrw_localcopycmd|      |g:netrw_localcopycmdopt|
                            |g:netrw_localcopydircmd|   |g:netrw_localcopydircmdopt|
                            |g:netrw_ssh_cmd|
                            --
                        MARKED FILES: DIFF                      *netrw-md*
                            (See |netrw-mf| and |netrw-mr| for how to mark files)
                            (uses the global marked file list)
                            Use |vimdiff| to visualize difference between selected files (two or three may be selected for this).
                            Uses the global marked file list.
                            --
                            MARKED FILES: EDITING                       *netrw-me*
                            (See |netrw-mf| and |netrw-mr| for how to mark files)
                            (uses the global marked file list)
                        The "me" command will place the marked files on the |arglist| and commence editing them.
                         One may return the to explorer window with |:Rexplore|.
                        (use |:n| and |:p| to edit next and previous files in the arglist)
                            --
                            MARKED FILES: GREP                      *netrw-mg*
                            (See |netrw-mf| and |netrw-mr| for how to mark files)
                            (uses the global marked file list)
                    The "mg" command will apply |:vimgrep| to the marked files.
                            The command will ask for the requested pattern; one may then enter:
                              /pattern/[g][j]
                              ! /pattern/[g][j]
                              pattern
                            With /pattern/, editing will start with the first item on the |quickfix| list that vimgrep sets up (see |:copen|, |:cnext|, |:cprevious|, |:cclose|).
                            The |:vimgrep| command is in use, so without 'g' each line is added to quickfix list only once; with 'g' every match is included.
                        With /pattern/j, "mg" will winnow the current marked file list to just those marked files also possessing the specified pattern.
                            Thus, one may use
                              mr ...file-pattern...
                              mg /pattern/j
                            to have a marked file list satisfying the file-pattern but also restricted to files containing some desired pattern.
                            MARKED FILES: HIDING AND UNHIDING BY SUFFIX         *netrw-mh*
                            (See |netrw-mf| and |netrw-mr| for how to mark files)
                            (uses the local marked file list)
                    The "mh" command extracts the suffices of the marked files and toggles their presence on the hiding list.
                            Please note that marking the same suffix this way multiple times
                            will result in the suffix's presence being toggled for each file
                            (so an even quantity of marked files having the same suffix is the same as not having bothered to select them at all).
                            Related topics: |netrw-a| |g:netrw_list_hide|
                            --
                        ! MARKED FILES: MOVING                        *netrw-mm*  @@
                            (See |netrw-mf| and |netrw-mr| for how to mark files)
                            (uses the global marked file list)
                              WARNING: moving files is more dangerous than copying them.
                              A file being moved is first copied and then deleted; if the copy operation fails and the delete succeeds, you will lose the file.
                              Either try things out with unimportant files first or do the copy and then delete yourself using mc and D.
                              Use at your own risk!
                            Select a target directory with mt (|netrw-mt|).
                            Then change directory, select file(s) (see |netrw-mf|), and press "mm".
                            The move is done from the current window (where one does the mf) to the target.
                            Associated setting variable: |g:netrw_localmovecmd| |g:netrw_ssh_cmd|
                            --
                            MARKED FILES: PRINTING                      *netrw-mp*
                            (See |netrw-mf| and |netrw-mr| for how to mark files)
                            (uses the local marked file list)
                        When "mp" is used, netrw will apply the |:hardcopy| command to marked files.
                            What netrw does is open each file in a one-line window, execute hardcopy, then close the one-line window.
                            MARKED FILES: SOURCING                      *netrw-ms*
                            (See |netrw-mf| and |netrw-mr| for how to mark files)
                            (uses the local marked file list)
                    With "ms", netrw will source the marked files (using vim's |:source| command)  @
                        MARKED FILES: SETTING THE TARGET DIRECTORY          *netrw-mt*
                            (See |netrw-mf| and |netrw-mr| for how to mark files)
                            Set the marked file copy/move-to target (see |netrw-mc| and |netrw-mm|):
                            * If the cursor is atop a file name, then the netrw window's currently
                              displayed directory is used for the copy/move-to target.
                            * Also, if the cursor is in the banner, then the netrw window's currently
                              displayed directory is used for the copy/move-to target.
                              Unless the target already is the current directory.
                              In which case, typing "mf" clears the target.
                            * However, if the cursor is atop a directory name, then that directory is used for the copy/move-to target
                            * One may use the :MT [directory] command to set the target   *netrw-:MT*
                              This command uses |<q-args>|, so spaces in the directory name are permitted without escaping.
                            * With mouse-enabled vim or with gvim, one may select a target by using <c-leftmouse>
                            There is only one copy/move-to target at a time in a vim session; ie. the
                            target is a script variable (see |s:var|) and is shared between all netrw
                            windows (in an instance of vim).
                            --
                            When using menus and gvim, netrw provides a "Targets" entry which allows one to pick a target from the list of bookmarks and history.
                            Related topics:
                            Marking Files......................................|netrw-mf|
                            Marking Files by Regular Expression................|netrw-mr|
                            Marked Files: Target Directory Using Bookmarks.....|netrw-Tb|
                            Marked Files: Target Directory Using History.......|netrw-Th|
                            --
                            MARKED FILES: TAGGING                       *netrw-mT*
                            (See |netrw-mf| and |netrw-mr| for how to mark files)
                            (uses the global marked file list)
                    The "mT" mapping will apply the command in |g:netrw_ctags| (by default, it is "ctags") to marked files.  (@)
                            For remote browsing, in order to create a tags file netrw will use ssh (see |g:netrw_ssh_cmd|),
                            and so ssh must be available for this to work on remote systems.
                            For your local system, see |ctags| on how to get a version.
                            I myself use hdrtags, currently available at http://www.drchip.org/astronaut/src/index.html, and have
                              let g:netrw_ctags= "hdrtag"
                            in my <.vimrc>.
                            When a remote set of files are tagged, the resulting tags file is "obtained";
                            ie. a copy is transferred to the local system's directory.
                            The now local tags file is then modified so that one may use it through the network.
                            The modification made concerns the names of the files in the tags;
                            each filename is preceded by the netrw-compatible URL used to obtain it.
                            When one subsequently uses one of the go to tag actions (|tags|),
                            the URL will be used by netrw to edit the desired file and go to the tag.
                            --
                            Associated setting variables: |g:netrw_ctags| |g:netrw_ssh_cmd|
                            --
                        MARKED FILES: TARGET DIRECTORY USING BOOKMARKS      *netrw-Tb*
                            Sets the marked file copy/move-to target.
                            .
                        The |netrw-qb| map will give you a list of bookmarks (and history).
                        One may choose one of the bookmarks to become your marked file target by using [count]Tb (default count: 1).
                            Related topics:
                            Copying files to target............................|netrw-mc|
                            Listing Bookmarks and History......................|netrw-qb|
                            Marked Files: Setting The Target Directory.........|netrw-mt|
                            Marked Files: Target Directory Using History.......|netrw-Th|
                            Marking Files......................................|netrw-mf|
                            Marking Files by Regular Expression................|netrw-mr|
                            Moving files to target.............................|netrw-mm|
                            --
                            MARKED FILES: TARGET DIRECTORY USING HISTORY            *netrw-Th*
                            Sets the marked file copy/move-to target.
                            The |netrw-qb| map will give you a list of history (and bookmarks).
                        One may choose one of the history entries to become your marked file target by using [count]Th (default count: 0; ie. the current directory).
                            Related topics:
                            Copying files to target............................|netrw-mc|
                            Listing Bookmarks and History......................|netrw-qb|
                            Marked Files: Setting The Target Directory.........|netrw-mt|
                            Marked Files: Target Directory Using Bookmarks.....|netrw-Tb|
                            Marking Files......................................|netrw-mf|
                            Marking Files by Regular Expression................|netrw-mr|
                            Moving files to target.............................|netrw-mm|
                            --
                            MARKED FILES: UNMARKING                     *netrw-mu*
                            (See |netrw-mf|, |netrw-mF|)
                        The "mu" mapping will unmark all currently marked files.
                        This command differs from "mF" as the latter only unmarks files in the current directory
                            whereas "mu" will unmark global and all buffer-local marked files.
                            (see |netrw-mF|)
                            *netrw-browser-settings*
                        [[ NETRW BROWSER VARIABLES     *netrw-browser-options* *netrw-browser-var* ]]
                            (if you're interested in the netrw file transfer settings, see |netrw-options| and |netrw-protocol|)
                            The <netrw.vim> browser provides settings in the form of variables which you may modify;
                            by placing these settings in your <.vimrc>, you may customize your browsing preferences. (see also: |netrw-settings|)
                            ---              -----------
                            Var              Explanation
                            ---              -----------
                            < *g:netrw_altfile*     some like |CTRL-^| to return to the last
                                            edited file. Choose that by setting this
                                            parameter to 1.
                                            Others like |CTRL-^| to return to the
                                            netrw browsing buffer. Choose that by setting
                                            this parameter to 0.
                                             default: =0

                              *g:netrw_alto*        change from above splitting to below splitting
                                            by setting this variable (see |netrw-o|)
                                             default: =&sb           (see |'sb'|)

                              *g:netrw_altv*        change from left splitting to right splitting
                                            by setting this variable (see |netrw-v|)
                                             default: =&spr          (see |'spr'|)

                              *g:netrw_banner*      enable/suppress the banner
                                            =0: suppress the banner
                                            =1: banner is enabled (default)

                              *g:netrw_bannerbackslash* if this variable exists and is not zero, the
                                            banner will be displayed with backslashes
                                            rather than forward slashes.

                              *g:netrw_browse_split*    when browsing, <cr> will open the file by:
                                            =0: re-using the same window (default)
                                            =1: horizontally splitting the window first
                                            =2: vertically   splitting the window first
                                            =3: open file in new tab
                                            =4: act like "P" (ie. open previous window)
                                                Note that |g:netrw_preview| may be used
                                                to get vertical splitting instead of
                                                horizontal splitting.
                                            =[servername,tab-number,window-number]
                                                Given a |List| such as this, a remote server
                                                named by the "servername" will be used for
                                                editing. It will also use the specified tab
                                                and window numbers to perform editing
                                                (see |clientserver|, |netrw-ctrl-r|)
                                            This option does not affect the production of
                                            |:Lexplore| windows.

                                            Related topics:
                                                |g:netrw_alto|  |g:netrw_altv|
                                                |netrw-C|       |netrw-cr|
                                                |netrw-ctrl-r|

                              *g:netrw_browsex_viewer*  specify user's preference for a viewer:
                                                "kfmclient exec"
                                                "gnome-open"
                            <               If
                                                "-"
                            <               is used, then netrwFileHandler() will look for
                                            a script/function to handle the given
                                            extension. (see |netrw_filehandler|).

                              *g:netrw_chgperm*     Unix/Linux: "chmod PERM FILENAME"
                                            Windows:    "cacls FILENAME /e /p PERM"
                                            Used to change access permission for a file.

                              *g:netrw_compress*        ="gzip"
                                                Will compress marked files with this
                                                command

                              *g:Netrw_corehandler*     Allows one to specify something additional
                                            to do when handling <core> files via netrw's
                                            browser's "x" command (see |netrw-x|). If
                                            present, g:Netrw_corehandler specifies
                                            either one or more function references
                                            (see |Funcref|). (the capital g:Netrw...
                                            is required its holding a function reference)


                              *g:netrw_ctags*       ="ctags"
                                            The default external program used to create
                                            tags

                              *g:netrw_cursor*      = 2 (default)
                                            This option controls the use of the
                                            |'cursorline'| (cul) and |'cursorcolumn'|
                                            (cuc) settings by netrw:

                                            Value   Thin-Long-Tree      Wide
                                             =0      u-cul u-cuc      u-cul u-cuc
                                             =1      u-cul u-cuc        cul u-cuc
                                             =2        cul u-cuc        cul u-cuc
                                             =3        cul u-cuc        cul   cuc
                                             =4        cul   cuc        cul   cuc

                                            Where
                                              u-cul : user's |'cursorline'|   setting used
                                              u-cuc : user's |'cursorcolumn'| setting used
                                              cul   : |'cursorline'| locally set
                                              cuc   : |'cursorcolumn'| locally set

                              *g:netrw_decompress*      = { ".gz" : "gunzip" ,
                                                ".bz2" : "bunzip2" ,
                                                ".zip" : "unzip" ,
                                                ".tar" : "tar -xf"}
                                              A dictionary mapping suffices to
                                              decompression programs.

                              *g:netrw_dirhistmax*            =10: controls maximum quantity of past
                                                                 history. May be zero to supppress
                                                 history.
                                                 (related: |netrw-qb| |netrw-u| |netrw-U|)

                              *g:netrw_dynamic_maxfilenamelen* =32: enables dynamic determination of
                                                |g:netrw_maxfilenamelen|, which affects
                                                local file long listing.

                              *g:netrw_errorlvl*        =0: error levels greater than or equal to
                                                this are permitted to be displayed
                                                0: notes
                                                1: warnings
                                                2: errors

                              *g:netrw_fastbrowse*      =0: slow speed directory browsing;
                                                never re-uses directory listings;
                                                always obtains directory listings.
                                            =1: medium speed directory browsing;
                                                re-use directory listings only
                                                when remote directory browsing.
                                                (default value)
                                            =2: fast directory browsing;
                                                only obtains directory listings when the
                                                directory hasn't been seen before
                                                (or |netrw-ctrl-l| is used).

                                            Fast browsing retains old directory listing
                                            buffers so that they don't need to be
                                            re-acquired. This feature is especially
                                            important for remote browsing. However, if
                                            a file is introduced or deleted into or from
                                            such directories, the old directory buffer
                                            becomes out-of-date. One may always refresh
                                            such a directory listing with |netrw-ctrl-l|.
                                            This option gives the user the choice of
                                            trading off accuracy (ie. up-to-date listing)
                                            versus speed.

                              *g:netrw_ffkeep*      (default: doesn't exist)
                                            If this variable exists and is zero, then
                                            netrw will not do a save and restore for
                                            |'fileformat'|.

                              *g:netrw_fname_escape*    =' ?&;%'
                                            Used on filenames before remote reading/writing

                              *g:netrw_ftp_browse_reject*   ftp can produce a number of errors and warnings
                                            that can show up as "directories" and "files"
                                            in the listing. This pattern is used to
                                            remove such embedded messages. By default its
                                            value is:
                                             '^total\s\+\d\+$\|
                                             ^Trying\s\+\d\+.*$\|
                                             ^KERBEROS_V\d rejected\|
                                             ^Security extensions not\|
                                             No such file\|
                                             : connect to address [0-9a-fA-F:]*
                                             : No route to host$'

                              *g:netrw_ftp_list_cmd*    options for passing along to ftp for directory
                                            listing. Defaults:
                                             unix or g:netrw_cygwin set: : "ls -lF"
                                             otherwise                     "dir"


                              *g:netrw_ftp_sizelist_cmd*    options for passing along to ftp for directory
                                            listing, sorted by size of file.
                                            Defaults:
                                             unix or g:netrw_cygwin set: : "ls -slF"
                                             otherwise                     "dir"

                              *g:netrw_ftp_timelist_cmd*    options for passing along to ftp for directory
                                            listing, sorted by time of last modification.
                                            Defaults:
                                             unix or g:netrw_cygwin set: : "ls -tlF"
                                             otherwise                     "dir"

                              *g:netrw_glob_escape*     ='[]*?`{~$' (unix)
                                            ='[]*?`{$' (windows
                                            These characters in directory names are
                                            escaped before applying glob()

                              *g:netrw_gx*          ="<cfile>"
                                            This option controls how gx (|netrw-gx|) picks
                                            up the text under the cursor. See |expand()|
                                            for possibilities.

                              *g:netrw_hide*        Controlled by the "a" map (see |netrw-a|)
                                            =0 : show all
                                            =1 : show not-hidden files
                                            =2 : show hidden files only
                                             default: =1

                              *g:netrw_home*        The home directory for where bookmarks and
                                            history are saved (as .netrwbook and
                                            .netrwhist).
                                            Netrw uses |expand()|on the string.
                                             default: the first directory on the
                                                     |'runtimepath'|

                              *g:netrw_keepdir*     =1 (default) keep current directory immune from
                                               the browsing directory.
                                            =0 keep the current directory the same as the
                                               browsing directory.
                                            The current browsing directory is contained in
                                            b:netrw_curdir (also see |netrw-c|)

                              *g:netrw_keepj*       ="keepj" (default) netrw attempts to keep the
                                                     |:jumps| table unaffected.
                                            =""      netrw will not use |:keepjumps| with
                                                 exceptions only for the
                                                 saving/restoration of position.

                              *g:netrw_list_cmd*        command for listing remote directories
                                             default: (if ssh is executable)
                                                      "ssh HOSTNAME ls -FLa"

                              *g:netrw_list_cmd_options*    If this variable exists, then its contents are
                                            appended to the g:netrw_list_cmd. For
                                            example, use "2>/dev/null" to get rid of banner
                                            messages on unix systems.


                              *g:netrw_liststyle*       Set the default listing style:
                                                            = 0: thin listing (one file per line)
                                                            = 1: long listing (one file per line with time
                                                 stamp information and file size)
                                            = 2: wide listing (multiple files in columns)
                                            = 3: tree style listing

                              *g:netrw_list_hide*       comma separated pattern list for hiding files
                                            Patterns are regular expressions (see |regexp|)
                                            There's some special support for git-ignore
                                            files: you may add the output from the helper
                                            function 'netrw_gitignore#Hide() automatically
                                            hiding all gitignored files.
                                            For more details see |netrw-gitignore|.

                                            Examples:
                                             let g:netrw_list_hide= '.*\.swp$'
                                             let g:netrw_list_hide= netrw_gitignore#Hide().'.*\.swp$'
                                            default: ""

                              *g:netrw_localcopycmd*    ="cp"           Linux/Unix/MacOS/Cygwin
                                            =expand("$COMSPEC")             Windows
                                            Copies marked files (|netrw-mf|) to target
                                            directory (|netrw-mt|, |netrw-mc|)

                              *g:netrw_localcopycmdopt* =''             Linux/Unix/MacOS/Cygwin
                                            =' \c copy'                     Windows
                                            Options for the |g:netrw_localcopycmd|

                              *g:netrw_localcopydircmd* ="cp"           Linux/Unix/MacOS/Cygwin
                                            =expand("$COMSPEC")             Windows
                                            Copies directories to target directory.
                                            (|netrw-mc|, |netrw-mt|)

                              *g:netrw_localcopydircmdopt*  =" -R"          Linux/Unix/MacOS/Cygwin
                                            =" /c xcopy /e /c /h/ /i /k"    Windows
                                            Options for |g:netrw_localcopydircmd|

                              *g:netrw_localmkdir*      ="mkdir"        Linux/Unix/MacOS/Cygwin
                                            =expand("$COMSPEC")             Windows
                                                            command for making a local directory

                              *g:netrw_localmkdiropt*   =""             Linux/Unix/MacOS/Cygwin
                                            =" /c mkdir"                    Windows
                                            Options for |g:netrw_localmkdir|

                              *g:netrw_localmovecmd*    ="mv"           Linux/Unix/MacOS/Cygwin
                                            =expand("$COMSPEC")             Windows
                                            Moves marked files (|netrw-mf|) to target
                                            directory (|netrw-mt|, |netrw-mm|)

                              *g:netrw_localmovecmdopt* =""             Linux/Unix/MacOS/Cygwin
                                            =" /c move"                     Windows
                                            Options for |g:netrw_localmovecmd|

                              *g:netrw_localrmdir*      ="rmdir"        Linux/Unix/MacOS/Cygwin
                                            =expand("$COMSPEC")             Windows
                                            Remove directory command (rmdir)
                                            This variable is only used if your vim is
                                            earlier than 7.4 or if your vim doesn't
                                            have patch#1107. Otherwise, |delete()|
                                            is used with the "d" option.

                              *g:netrw_localrmdiropt*   =""             Linux/Unix/MacOS/Cygwin
                                            =" /c rmdir"                    Windows
                                            Options for |g:netrw_localrmdir|

                              *g:netrw_maxfilenamelen*  =32 by default, selected so as to make long
                                                listings fit on 80 column displays.
                                            If your screen is wider, and you have file
                                            or directory names longer than 32 bytes,
                                            you may set this option to keep listings
                                            columnar.

                              *g:netrw_mkdir_cmd*       command for making a remote directory
                                            via ssh (also see |g:netrw_remote_mkdir|)
                                             default: "ssh USEPORT HOSTNAME mkdir"

                              *g:netrw_mousemaps*        =1 (default) enables mouse buttons while
                                               browsing to:
                                                 leftmouse       : open file/directory
                                                 shift-leftmouse : mark file
                                                 middlemouse     : same as P
                                                 rightmouse      : remove file/directory
                                            =0: disables mouse maps

                              *g:netrw_nobeval*     doesn't exist (default)
                                            If this variable exists, then balloon
                                            evaluation will be suppressed
                                            (see |'ballooneval'|)

                             *g:netrw_sizestyle*        not defined: actual bytes (default)
                                            ="b" : actual bytes       (default)
                                            ="h" : human-readable (ex. 5k, 4m, 3g)
                                                   uses 1000 base
                                            ="H" : human-readable (ex. 5K, 4M, 3G)
                                                   uses 1024 base
                                            The long listing (|netrw-i|) and query-file
                                            maps (|netrw-qf|) will display file size
                                            using the specified style.

                              *g:netrw_usetab*      if this variable exists and is non-zero, then
                                            the <tab> map supporting shrinking/expanding a
                                            Lexplore or netrw window will be enabled.
                                            (see |netrw-c-tab|)

                              *g:netrw_remote_mkdir*    command for making a remote directory
                                            via ftp (also see |g:netrw_mkdir_cmd|)
                                             default: "mkdir"

                              *g:netrw_retmap*      if it exists and is set to one, then:
                                             * if in a netrw-selected file, AND
                                             * no normal-mode <2-leftmouse> mapping exists,
                                            then the <2-leftmouse> will be mapped for easy
                                            return to the netrw browser window.
                                             example: click once to select and open a file,
                                                      double-click to return.

                                            Note that one may instead choose to:
                                             * let g:netrw_retmap= 1, AND
                                             * nmap <silent> YourChoice <Plug>NetrwReturn
                                            and have another mapping instead of
                                            <2-leftmouse> to invoke the return.

                                            You may also use the |:Rexplore| command to do
                                            the same thing.

                                              default: =0

                              *g:netrw_rm_cmd*      command for removing remote files
                                             default: "ssh USEPORT HOSTNAME rm"

                              *g:netrw_rmdir_cmd*       command for removing remote directories
                                             default: "ssh USEPORT HOSTNAME rmdir"

                              *g:netrw_rmf_cmd*     command for removing remote softlinks
                                             default: "ssh USEPORT HOSTNAME rm -f"

                              *g:netrw_servername*      use this variable to provide a name for
                                            |netrw-ctrl-r| to use for its server.
                                             default: "NETRWSERVER"

                              *g:netrw_sort_by*     sort by "name", "time", "size", or
                                            "exten".
                                             default: "name"

                              *g:netrw_sort_direction*  sorting direction: "normal" or "reverse"
                                             default: "normal"

                              *g:netrw_sort_options*    sorting is done using |:sort|; this
                                            variable's value is appended to the
                                            sort command. Thus one may ignore case,
                                            for example, with the following in your
                                            .vimrc:
                                                let g:netrw_sort_options="i"
                            <                default: ""

                              *g:netrw_sort_sequence*   when sorting by name, first sort by the
                                            comma-separated pattern sequence. Note that
                                            any filigree added to indicate filetypes
                                            should be accounted for in your pattern.
                                             default: '[\/]$,*,\.bak$,\.o$,\.h$,
                                                       \.info$,\.swp$,\.obj$'

                              *g:netrw_special_syntax*  If true, then certain files will be shown
                                            using special syntax in the browser:

                                                netrwBak     : *.bak
                                                netrwCompress: *.gz *.bz2 *.Z *.zip
                                                netrwCoreDump: core.\d\+
                                                netrwData    : *.dat
                                                netrwDoc     : *.doc,*.txt,*.pdf,
                                                               *.pdf,*.docx
                                                netrwHdr     : *.h
                                                netrwLex     : *.l *.lex
                                                netrwLib     : *.a *.so *.lib *.dll
                                                netrwMakefile: [mM]akefile *.mak
                                                netrwObj     : *.o *.obj
                                                netrwPix     : *.bmp,*.fit,*.fits,*.gif,
                                                               *.jpg,*.jpeg,*.pcx,*.ppc
                                                               *.pgm,*.png,*.psd,*.rgb
                                                               *.tif,*.xbm,*.xcf
                                                netrwTags    : tags ANmenu ANtags
                                                netrwTilde   : *
                                                netrwTmp     : tmp* *tmp
                                                netrwYacc    : *.y

                                            In addition, those groups mentioned in
                                            |'suffixes'| are also added to the special
                                            file highlighting group.
                                             These syntax highlighting groups are linked
                                            to netrwGray or Folded by default
                                            (see |hl-Folded|), but one may put lines like
                                                hi link netrwCompress Visual
                            <               into one's <.vimrc> to use one's own
                                            preferences. Alternatively, one may
                                            put such specifications into
                                                .vim/after/syntax/netrw.vim.
                            <                The netrwGray highlighting is set up by
                                            netrw when
                                                    * netrwGray has not been previously
                                                  defined
                                                * the gui is running
                            <                As an example, I myself use a dark-background
                                            colorscheme with the following in
                                            .vim/after/syntax/netrw.vim:

                             hi netrwCompress term=NONE cterm=NONE gui=NONE ctermfg=10 guifg=green ctermbg=0 guibg=black
                             hi netrwData    term=NONE cterm=NONE gui=NONE ctermfg=9 guifg=blue ctermbg=0 guibg=black
                             hi netrwHdr     term=NONE cterm=NONE,italic gui=NONE guifg=SeaGreen1
                             hi netrwLex     term=NONE cterm=NONE,italic gui=NONE guifg=SeaGreen1
                             hi netrwYacc    term=NONE cterm=NONE,italic gui=NONE guifg=SeaGreen1
                             hi netrwLib     term=NONE cterm=NONE gui=NONE ctermfg=14 guifg=yellow
                             hi netrwObj     term=NONE cterm=NONE gui=NONE ctermfg=12 guifg=red
                             hi netrwTilde   term=NONE cterm=NONE gui=NONE ctermfg=12 guifg=red
                             hi netrwTmp     term=NONE cterm=NONE gui=NONE ctermfg=12 guifg=red
                             hi netrwTags    term=NONE cterm=NONE gui=NONE ctermfg=12 guifg=red
                             hi netrwDoc     term=NONE cterm=NONE gui=NONE ctermfg=220 ctermbg=27 guifg=yellow2 guibg=Blue3
                             hi netrwSymLink term=NONE cterm=NONE gui=NONE ctermfg=220 ctermbg=27 guifg=grey60
                              *g:netrw_ssh_browse_reject*   ssh can sometimes produce unwanted lines,
                                            messages, banners, and whatnot that one doesn't
                                            want masquerading as "directories" and "files".
                                            Use this pattern to remove such embedded
                                            messages. By default its value is:
                                                 '^total\s\+\d\+$'

                              *g:netrw_ssh_cmd*     One may specify an executable command
                                            to use instead of ssh for remote actions
                                            such as listing, file removal, etc.
                                             default: ssh

                             *g:netrw_suppress_gx_mesg* =1 : browsers sometimes produce messages
                                            which are normally unwanted intermixed
                                            with the page.
                                            However, when using links, for example,
                                            those messages are what the browser produces.
                                            By setting this option to 0, netrw will not
                                            suppress browser messages.

                              *g:netrw_tmpfile_escape*  =' &;'
                                            escape() is applied to all temporary files
                                            to escape these characters.

                              *g:netrw_timefmt*     specify format string to vim's strftime().
                                            The default, "%c", is "the preferred date
                                            and time representation for the current
                                            locale" according to my manpage entry for
                                            strftime(); however, not all are satisfied
                                            with it. Some alternatives:
                                             "%a %d %b %Y %T",
                                             " %a %Y-%m-%d %I-%M-%S %p"
                                             default: "%c"

                              *g:netrw_use_noswf*       netrw normally avoids writing swapfiles
                                            for browser buffers. However, under some
                                            systems this apparently is causing nasty
                                            ml_get errors to appear; if you're getting
                                            ml_get errors, try putting
                                              let g:netrw_use_noswf= 0
                                            in your .vimrc.
                                              default: 1

                              *g:netrw_winsize*     specify initial size of new windows made with
                                            "o" (see |netrw-o|), "v" (see |netrw-v|),
                                            |:Hexplore| or |:Vexplore|. The g:netrw_winsize
                                            is an integer describing the percentage of the
                                            current netrw buffer's window to be used for
                                            the new window.
                                             If g:netrw_winsize is less than zero, then
                                            the absolute value of g:netrw_winsize will be
                                            used to specify the quantity of lines or
                                            columns for the new window.
                                             If g:netrw_winsize is zero, then a normal
                                            split will be made (ie. |'equalalways'| will
                                            take effect, for example).
                                             default: 50 (for 50%)

                              *g:netrw_wiw*         =1 specifies the minimum window width to use
                                            when shrinking a netrw/Lexplore window
                                            (see |netrw-c-tab|).

                              *g:netrw_xstrlen*     Controls how netrw computes string lengths,
                                            including multi-byte characters' string
                                            length. (thanks to N Weibull, T Mechelynck)
                                            =0: uses Vim's built-in strlen()
                                            =1: number of codepoints (Latin a + combining
                                                circumflex is two codepoints) (DEFAULT)
                                            =2: number of spacing codepoints (Latin a +
                                                combining circumflex is one spacing
                                                codepoint; a hard tab is one; wide and
                                                narrow CJK are one each; etc.)
                                            =3: virtual length (counting tabs as anything
                                                between 1 and |'tabstop'|, wide CJK as 2
                                                rather than 1, Arabic alif as zero when
                                                immediately preceded by lam, one
                                                otherwise, etc)

                              *g:NetrwTopLvlMenu*       This variable specifies the top level
                                            menu name; by default, it's "Netrw.". If
                                            you wish to change this, do so in your
                                            .vimrc.
                            --
                        (( NETRW BROWSING AND OPTION INCOMPATIBILITIES *netrw-incompatible* ))
                            Netrw has been designed to handle user options by saving them,
                            setting the options to something that's compatible with netrw's needs, and then restoring them.
                            However, the autochdir option:
                              :set acd
                            is problematic.
                            Autochdir sets the current directory to that containing the file you edit;
                            this apparently also applies to directories.
                            In other words, autochdir sets the current directory to that containing the "file" (even if that "file" is itself a directory).
                            --
                            NETRW SETTINGS WINDOW               *netrw-settings-window*
                        With the NetrwSettings.vim plugin, :NetrwSettings ...
                            will bring up a window with the many variables that netrw uses for its settings.
                            You may change any of their values; when you save the file, the settings therein will be used.
                        One may also press "?" on any of the lines for help on what each of the variables do.
                            (also see: |netrw-browser-var| |netrw-protocol| |netrw-variables|)
                            ==============================================================================
                            OBTAINING A FILE                    *netrw-obtain* *netrw-O*
                            If there are no marked files:
                        When browsing a remote directory, one may obtain a file under the cursor
                            (ie. get a copy on your local machine, but not edit it) by pressing the O key.
                            .
                        If there are marked files:
                            The marked files will be obtained (ie. a copy will be transferred to your local machine, but not set up for editing).
                            .
                        Only ftp and scp are supported for this operation (but since these two are available for browsing, that shouldn't be a problem).
                            The status bar will then show, on its right hand side, a message like "Obtaining filename".
                            The statusline will be restored after the transfer is complete.
                            Netrw can also "obtain" a file using the local browser.
                            Netrw's display of a directory is not necessarily the same as Vim's "current directory",
                            unless |g:netrw_keepdir| is set to 0 in the user's <.vimrc>.
                            One may select a file using the local browser (by putting the cursor on it) and pressing "O"
                            will then "obtain" the file; ie. copy it to Vim's current directory.
                            Related topics:
                             * To see what the current directory is, use |:pwd|
                             * To make the currently browsed directory the current directory, see |netrw-c|
                             * To automatically make the currently browsed directory the current directory, see |g:netrw_keepdir|.
                                *netrw-newfile* *netrw-createfile*
                            OPEN A NEW FILE IN NETRW'S CURRENT DIRECTORY        *netrw-%*
                        To open a new file in netrw's current directory, press "%".
                            This map will query the user for a new filename;
                            an empty file by that name will be placed in the netrw's current directory (ie. b:netrw_curdir).
                            Related topics:               |netrw-d|
                            PREVIEW WINDOW              *netrw-p* *netrw-preview*
                        One may use a preview window by using the "p" key when the cursor is atop the desired filename to be previewed.
                            The display will then split to show both the browser (where the cursor will remain) and the file (see |:pedit|).
                            By default, the split will be taken horizontally;
                         one may use vertical splitting if one has set |g:netrw_preview| first.
                            An interesting set of netrw settings is:
                            let g:netrw_preview   = 1
                            let g:netrw_liststyle = 3
                            let g:netrw_winsize   = 30
                            These will:
                            1. Make vertical splitting the default for previewing files
                            2. Make the default listing style "tree"
                            3. When a vertical preview window is opened, the directory listing will use only 30% of the columns available;
                            the rest of the window is used for the preview window.
                            Related: if you like this idea, you may also find :Lexplore
                            (|netrw-:Lexplore|) or |g:netrw_chgwin| of interest
                            Also see: |g:netrw_chgwin| |netrw-P| |'previewwindow'| |CTRL-W_z| |:pclose|
                            --
                            PREVIOUS WINDOW                 *netrw-P* *netrw-prvwin*
                        To edit a file or directory under the cursor in the previously used (last accessed) window (see :he |CTRL-W_p|), press a "P".
                            If there's only one window, then the one window will be horizontally split (by default).
                            If there's more than one window, the previous window will be re-used on the selected file/directory.
                            If the previous window's associated buffer has been modified, and there's only one window with that buffer,
                            then the user will be asked if s/he wishes to save the buffer first (yes, no, or cancel).
                            Related Actions |netrw-cr| |netrw-o| |netrw-t| |netrw-v|
                            Associated setting variables:
                            |g:netrw_alto|    control above/below splitting
                            |g:netrw_altv|    control right/left splitting
                            |g:netrw_preview| control horizontal vs vertical splitting
                            |g:netrw_winsize| control initial sizing
                            Also see: |g:netrw_chgwin| |netrw-p|
                            --
                            REFRESHING THE LISTING      *netrw-refresh* *netrw-ctrl-l* *netrw-ctrl_l*
                            To refresh either a local or remote directory listing, press ctrl-l (<c-l>) or hit the <cr> when atop the ./ directory entry in the listing.
                            One may also refresh a local directory by using ":e .".
                            --
                            REVERSING SORTING ORDER     *netrw-r* *netrw-reverse*
                        One may toggle between normal and reverse sorting order by pressing the "r" key.
                            Related topics:              |netrw-s|
                            Associated setting variable: |g:netrw_sort_direction|
                            --
                            RENAMING FILES OR DIRECTORIES   *netrw-move* *netrw-rename* *netrw-R*
                            If there are no marked files: (see |netrw-mf|)
                        Renaming files/dirs =cursor on the file/directory + press "R".
                            You will then be queried for what you want the file/directory to be renamed to.
                            .
                        You may select a range of lines with the "V" command (visual selection), and then press "R";
                            you will be queried for each file as to what you want it renamed to.
                            If there are marked files: (see |netrw-mf|)
                            Marked files will be renamed (moved).
                            You will be queried as above in order to specify where you want the file/directory to be moved.
                        If you answer a renaming query with a "s/frompattern/topattern/",
                            then subsequent files on the marked file list will be renamed by taking each name,
                            applying that substitute, and renaming each file to the result.
                            As an example:
                            --
                        **
                            mr [query: reply with *.c]
                            R  [query: reply with s/^\(.*\)\.c$/\1.cpp/]
                            This example will mark all *.c files and then rename them to *.cpp files.
                            --
                        c-x / c-x c-x
                            The ctrl-X character has special meaning for renaming files:
                            --
                            <c-x>      : a single ctrl-x tells netrw to ignore the portion of the response lying between the last '/' and the ctrl-x.
                            --
                            <c-x><c-x> : a pair of contiguous ctrl-x's tells netrw to ignore any portion of the string preceding the double ctrl-x's.
                            WARNING:~
                            --
                            Note that moving files is a dangerous operation; copies are safer.
                            That's because a "move" for remote files is actually a copy + delete -
                            and if the copy fails and the delete succeeds you may lose the file.
                            Use at your own risk.
                            --
                        .
                            The *g:netrw_rename_cmd* variable is used to implement remote renaming.
                            By default its value is:  ssh HOSTNAME mv
                        One may rename a block of files and directories by selecting them with V (|linewise-visual|) when using thin style.
                        See |cmdline-editing| for more on how to edit the command line;  [**]
                            .
                            in particular, you'll find <ctrl-f> (initiates cmdline window editing) and <ctrl-c> (uses the command line under the cursor) useful in conjunction with the R command.
                            --
                            SELECTING SORTING STYLE         *netrw-s* *netrw-sort*
                        s  sort by name / time / file size
                            One may select the sorting style by name, time, or (file) size.
                            The "s" map allows one to circulate amongst the three choices;
                            the directory listing will automatically be refreshed to reflect the selected style.
                            --
                            Related topics:               |netrw-r| |netrw-S|
                            Associated setting variables: |g:netrw_sort_by| |g:netrw_sort_sequence|
                            --
                            SETTING EDITING WINDOW      *netrw-editwindow* *netrw-C* *netrw-:NetrwC*
                        One may select a netrw window for editing with the "C" mapping,  (??)
                            using the :NetrwC [win#] command,
                            or by setting |g:netrw_chgwin| to the selected window number.
                            Subsequent selection of a file to edit (|netrw-cr|) will use that window.
                            --
                        C by itself, will select the current window holding a netrw buffer for subsequent editing via |netrw-cr|. (??)
                            The C mapping is only available while in netrw buffers.
                            --
                            * [count]C: the count will be used as the window number to be used for subsequent editing via |netrw-cr|.
                            --
                            * :NetrwC will set |g:netrw_chgwin| to the current window
                            --
                            * :NetrwC win# will set |g:netrw_chgwin| to the specified window number
                            --
                            Using
                            let g:netrw_chgwin= -1
                            will restore the default editing behavior
                            (ie. subsequent editing will use the current window).
                            --
                            Related topics:         |netrw-cr| |g:netrw_browse_split|
                            Associated setting variables:   |g:netrw_chgwin|
                            --
                            SHRINKING OR EXPANDING A NETRW OR LEXPLORE WINDOW   *netrw-c-tab*
                            --
                            The <c-tab> key will toggle a netrw or |:Lexplore| window's width,
                            but only if |g:netrw_usetab| exists and is non-zero
                            (and, of course, only if your terminal supports differentiating <c-tab> from a plain <tab>).
                            --
                            * If the current window is a netrw window, toggle its width (between |g:netrw_wiw| and its original width)
                            --
                            * Else if there is a |:Lexplore| window in the current tab, toggle its width
                            --
                            * Else bring up a |:Lexplore| window
                            --
                            If |g:netrw_usetab| exists and is zero,
                            or if there is a pre-existing mapping for <c-tab>,
                            then the <c-tab> will not be mapped.
                            One may map something other than a <c-tab>, too:
                            (but you'll still need to have had |g:netrw_usetab| set).
                            --
                            nmap <unique> (whatever)    <Plug>NetrwShrink
                            Related topics:         |:Lexplore|
                            Associated setting variable:    |g:netrw_usetab|
                            --
                            USER SPECIFIED MAPS                 *netrw-usermaps*
                            --
                            One may make customized user maps.
                        Specify a variable, |g:Netrw_UserMaps|, to hold a |List| of lists of keymap strings and function names:
                            [["keymap-sequence","ExampleUserMapFunc"],...]
                            When netrw is setting up maps for a netrw buffer, if |g:Netrw_UserMaps| exists,
                            then the internal function netrw#UserMaps(islocal) is called.
                            This function goes through all the entries in the |g:Netrw_UserMaps| list:
                            --
                            * sets up maps:
                            nno <buffer> <silent> KEYMAP-SEQUENCE
                            :call s:UserMaps(islocal,"ExampleUserMapFunc")
                            * refreshes if result from that function call is the string "refresh"
                            * if the result string is not "", then that string will be executed (:exe result)
                            * if the result is a List, then the above two actions on results will be taken for every string in the result List
                            The user function is passed one argument; it resembles
                            fun! ExampleUserMapFunc(islocal)
                            where a:islocal is 1 if its a local-directory system call
                            or 0 when remote-directory system call.
                            --
                            *netrw-call* *netrw-expose* *netrw-modify*
                            Use netrw#Expose("varname")          to access netrw-internal (script-local) variables.
                            Use netrw#Modify("varname",newvalue) to change netrw-internal variables.
                            Use netrw#Call("funcname"[,args])    to call a netrw-internal function with specified arguments.
                            --
                            Example: Get a copy of netrw's marked file list:
                            --
                            let netrwmarkfilelist= netrw#Expose("netrwmarkfilelist")
                            Example: Modify the value of netrw's marked file list:
                            --
                            call netrw#Modify("netrwmarkfilelist",[])
                            Example: Clear netrw's marked file list via a mapping on gu
                            " ExampleUserMap:
                            fun! ExampleUserMap(islocal)
                              call netrw#Modify("netrwmarkfilelist",[])
                              call netrw#Modify('netrwmarkfilemtch_{bufnr("%")}',"")
                              let retval= ["refresh"]
                              return retval
                            endfun
                            let g:Netrw_UserMaps= [["gu","ExampleUserMap"]]
                            --
                            10. Problems and Fixes                  *netrw-problems*
                            (This section is likely to grow as I get feedback)
                            (also see |netrw-debug|)
                            *netrw-p1*
                            P1. I use windows 95, and my ftp dumps four blank lines at the     end of every read.
                            --
                            See |netrw-fixup|, and put the following into your <.vimrc> file:
                            --
                            let g:netrw_win95ftp= 1
                            --
                            *netrw-p2*
                            P2. I use Windows, and my network browsing with ftp doesn't sort by time or size!
                            -or- The remote system is a Windows server; why don't I get sorts by time or size?
                            --
                            Windows' ftp has a minimal support for ls (ie. it doesn't accept sorting options).
                            It doesn't support the -F which gives an explanatory character (ABC/ for "ABC is a directory").
                            Netrw then uses "dir" to get both its thin and long listings.
                            If you think your ftp does support a full-up ls, put the following into your <.vimrc>:
                            --
                            let g:netrw_ftp_list_cmd    = "ls -lF"
                            let g:netrw_ftp_timelist_cmd= "ls -tlF"
                            let g:netrw_ftp_sizelist_cmd= "ls -slF"
                            --
                            Alternatively, if you have cygwin on your Windows box, put into your <.vimrc>:
                            let g:netrw_cygwin= 1
                            This problem also occurs when the remote system is Windows.
                            In this situation, the various g:netrw_ftp_[time|size]list_cmds are as shown above,
                            but the remote system will not correctly modify its listing behavior.
                            --
                            --
                            *netrw-p3*
                            P3. I tried rcp://user@host/ (or protocol other than ftp) and netrw used ssh!
                            That wasn't what I asked for...
                            --
                            Netrw has two methods for browsing remote directories: ssh and ftp.
                            Unless you specify ftp specifically, ssh is used.
                            When it comes time to do download a file (not just a directory listing),
                            netrw will use the given protocol to do so.
                            --
                            *netrw-p4*
                            P4. I would like long listings to be the default.
                            Put the following statement into your |.vimrc|:
                            --
                            let g:netrw_liststyle= 1
                            Check out |netrw-browser-var| for more customizations that you can set.
                            --
                            *netrw-p5*
                            P5. My times come up oddly in local browsing
                            Does your system's strftime() accept the "%c" to yield dates such as "Sun Apr 27 11:49:23 1997"?
                            If not, do a "man strftime" and find out what option should be used.
                            Then put it into your |.vimrc|:
                            --
                            let g:netrw_timefmt= "%X" (where X is the option)
                            --
                            P6. I want my current directory to track my browsing.
                            How do I do that?
                            Put the following line in your |.vimrc|:
                            let g:netrw_keepdir= 0
                            --
                            P7. I use Chinese (or other non-ascii) characters in my filenames,
                            and netrw (Explore, Sexplore, Hexplore, etc) doesn't display them!
                            (taken from an answer provided by Wu Yongwei on the vim mailing list)
                            I now see the problem. Your code page is not 936, right?
                            Vim seems only able to open files with names that are valid in the current code page,
                            as are many other applications that do not use the Unicode version of Windows APIs.
                            This is an OS-related issue.
                            You should not have such problems when the system locale uses UTF-8, such as modern Linux distros.
                            (...it is one more reason to recommend that people use utf-8!)
                            --
                            P8. I'm getting "ssh is not executable on your system" - what do I do?
                            --
                            (Dudley Fox) Most people I know use putty for windows ssh.
                            It is a free ssh/telnet application.
                            You can read more about it here:
                            http://www.chiark.greenend.org.uk/~sgtatham/putty/ Also:
                            --
                            (Marlin Unruh) This program also works for me.
                            It's a single executable, so he/she can copy it into the Windows\System32 folder and create a shortcut to it.
                            (Dudley Fox) You might also wish to consider plink, as it sounds most similar to what you are looking for.
                            plink is an application in the putty suite.
                               http://the.earth.li/~sgtatham/putty/0.58/htmldoc/Chapter7.html#plink
                            (Vissale Neang) Maybe you can try OpenSSH for windows, which can be obtained from:
                            http://sshwindows.sourceforge.net/
                            It doesn't need the full Cygwin package.
                            (Antoine Mechelynck) For individual Unix-like programs needed for work in a native-Windows environment,
                            I recommend getting them from the GnuWin32 project on sourceforge if it has them:
                            http://gnuwin32.sourceforge.net/
                            --
                            Unlike Cygwin, which sets up a Unix-like virtual machine on top of Windows,
                            GnuWin32 is a rewrite of Unix utilities with Windows system calls,
                            and its programs works quite well in the cmd.exe "Dos box".
                            --
                            (dave) Download WinSCP and use that to connect to the server.
                            In Preferences > Editors, set gvim as your editor:
                            --
                            - Click "Add..."
                            - Set External Editor (adjust path as needed, include
                              the quotes and !.! at the end):
                            "c:\Program Files\Vim\vim81\gvim.exe" !.!
                            - Check that the filetype in the box below is
                              {asterisk}.{asterisk} (all files), or whatever types
                              you want (cec: change {asterisk} to * ; I had to
                              write it that way because otherwise the helptags
                              system thinks it's a tag)
                            - Make sure it's at the top of the listbox (click it,
                              then click "Up" if it's not)
                            If using the Norton Commander style, you just have to hit <F4>
                            to edit a file in a local copy of gvim.
                            --
                            (Vit Gottwald) How to generate public/private key and save
                            public key it on server:
                              http://www.chiark.greenend.org.uk/~sgtatham/putty/0.60/htmldoc/Chapter8.html#pubkey-gettingready
                            (8.3 Getting ready for public key authentication)
                            How to use a private key with 'pscp':
                            --
                            http://www.chiark.greenend.org.uk/~sgtatham/putty/0.60/htmldoc/Chapter5.html
                            --
                            (5.2.4 Using public key authentication with PSCP)
                            (Ben Schmidt) I find the ssh included with cwRsync is brilliant,
                            and install cwRsync or cwRsyncServer on most Windows systems I come across these days.
                            I guess COPSSH, packed by the same person, is probably even better for use as just ssh on Windows,
                            and probably includes sftp, etc. which I suspect the cwRsync doesn't, though it might
                            (cec) To make proper use of these suggestions above,
                            you will need to modify the following user-settable variables in your .vimrc:
                            --
                            |g:netrw_ssh_cmd| |g:netrw_list_cmd| |g:netrw_mkdir_cmd|
                            |g:netrw_rm_cmd| |g:netrw_rmdir_cmd| |g:netrw_rmf_cmd|
                            --
                            The first one (|g:netrw_ssh_cmd|) is the most important;
                            most of the others will use the string in g:netrw_ssh_cmd by default.
                            --
                            P9. I'm browsing, changing directory, and bang! ml_get errors appear and I have to kill vim.
                            Any way around this?
                            --
                            Normally netrw attempts to avoid writing swapfiles for its temporary directory buffers.
                            However, on some systems this attempt appears to be causing ml_get errors to appear.
                            Please try setting |g:netrw_use_noswf| to 0 in your <.vimrc>:
                            let g:netrw_use_noswf= 0
                            --
                            P10. I'm being pestered with "[something] is a directory" and
                             "Press ENTER or type command to continue" prompts...
                            --
                            The "[something] is a directory" prompt is issued by Vim,
                            not by netrw, and there appears to be no way to work around it.
                            Coupled with the default cmdheight of 1, this message causes the "Press ENTER..." prompt.
                            So: read |hit-enter|;
                            I also suggest that you set your |'cmdheight'| to 2 (or more) in your <.vimrc> file.
                            --
                            P11. I want to have two windows; a thin one on the left and my editing window on the right.
                            How may I accomplish this?
                            --
                            You probably want netrw running as in a side window.
                            If so, you will likely find that ":[N]Lexplore" does what you want.
                            The optional "[N]" allows you to select the quantity of columns you
                            wish the |:Lexplore|r window to start with (see |g:netrw_winsize|
                            for how this parameter works).
                            --
                            Previous solution:
                            * Put the following line in your <.vimrc>:
                            let g:netrw_altv = 1
                            * Edit the current directory: :e .
                            * Select some file, press v
                            * Resize the windows as you wish (see |CTRL-W_<| and |CTRL-W_>|).
                            If you're using gvim, you can drag the separating bar with your mouse.
                            * When you want a new file, use ctrl-w h to go back to the netrw browser,
                            select a file, then press P (see |CTRL-W_h| and |netrw-P|).
                            If you're using gvim, you can press <leftmouse> in the browser window
                            and then press the <middlemouse> to select the file.
                            --
                            P12. My directory isn't sorting correctly, or unwanted letters are appearing in the listed filenames,
                            or things aren't lining up properly in the wide listing, ...
                            --
                            This may be due to an encoding problem.
                            I myself usually use utf-8, but really only use ascii (ie. bytes from 32-126).
                            Multibyte encodings use two (or more) bytes per character.
                            You may need to change |g:netrw_sepchr| and/or |g:netrw_xstrlen|.
                            --
                            P13. I'm a Windows + putty + ssh user, and when I attempt to
                            browse, the directories are missing trailing "/"s so netrw treats
                            them as file transfers instead of as attempts to browse
                            subdirectories. How may I fix this?
                            --
                            (mikeyao) If you want to use vim via ssh and putty under Windows,
                            try combining the use of pscp/psftp with plink. pscp/psftp will
                            be used to connect and plink will be used to execute commands on
                            the server, for example: list files and directory using 'ls'.
                            --
                            These are the settings I use to do this:
                            " list files, it's the key setting, if you haven't set,
                            " you will get a blank buffer
                            let g:netrw_list_cmd = "plink HOSTNAME ls -Fa"
                            " if you haven't add putty directory in system path, you should
                            " specify scp/sftp command. For examples:
                            "let g:netrw_sftp_cmd = "d:\\dev\\putty\\PSFTP.exe"
                            "let g:netrw_scp_cmd = "d:\\dev\\putty\\PSCP.exe"
                            *netrw-p14*
                            P14. I would like to speed up writes using Nwrite and scp/ssh
                            style connections. How? (Thomer M. Gil)
                            --
                            Try using ssh's ControlMaster and ControlPath (see the ssh_config
                            man page) to share multiple ssh connections over a single network
                            connection. That cuts out the cryptographic handshake on each
                            file write, sometimes speeding it up by an order of magnitude.
                            (see http://thomer.com/howtos/netrw_ssh.html)
                            (included by permission)
                            --
                            Add the following to your ~/.ssh/config:
                            --
                            # you change "*" to the hostname you care about
                            Host *
                            ControlMaster auto
                            ControlPath /tmp/%r@%h:%p
                            --
                            Then create an ssh connection to the host and leave it running:
                            --
                            ssh -N host.domain.com
                            --
                            Now remotely open a file with Vim's Netrw and enjoy the zippiness:
                            vim scp://host.domain.com//home/user/.bashrc
                            --
                            P15. How may I use a double-click instead of netrw's usual single
                            click to open a file or directory? (Ben Fritz)
                            --
                            First, disable netrw's mapping with
                            let g:netrw_mousemaps= 0
                            <        and then create a netrw buffer only mapping in
                            $HOME/.vim/after/ftplugin/netrw.vim:
                            nmap <buffer> <2-leftmouse> <CR>
                            <        Note that setting g:netrw_mousemaps to zero will turn off
                            all netrw's mouse mappings, not just the <leftmouse> one.
                            (see |g:netrw_mousemaps|)
                            --
                            *netrw-p16*
                            P16. When editing remote files (ex. :e ftp://hostname/path/file),
                            under Windows I get an |E303| message complaining that its unable
                            to open a swap file.
                            --
                            (romainl) It looks like you are starting Vim from a protected
                            directory. Start netrw from your $HOME or other writable
                            directory.
                            --
                            *netrw-p17*
                            P17. Netrw is closing buffers on its own.
                            What steps will reproduce the problem?
                            1. :Explore, navigate directories, open a file
                            2. :Explore, open another file
                            3. Buffer opened in step 1 will be closed. o
                            What is the expected output? What do you see instead?
                            I expect both buffers to exist, but only the last one does.
                            --
                            (Lance) Problem is caused by "set autochdir" in .vimrc.
                            (drchip) I am able to duplicate this problem with |'acd'| set.
                            It appears that the buffers are not exactly closed;
                            a ":ls!" will show them (although ":ls" does not).
                            --
                            P18. How to locally edit a file that's only available via
                            another server accessible via ssh?
                            See http://stackoverflow.com/questions/12469645/
                            "Using Vim to Remotely Edit A File on ServerB Only
                              Accessible From ServerA"
                            --
                            P19. How do I get numbering on in directory listings?
                            With |g:netrw_bufsettings|, you can control netrw's buffer
                            settings; try putting
                              let g:netrw_bufsettings="noma nomod nu nobl nowrap ro nornu"
                            <       in your .vimrc. If you'd like to have relative numbering
                            instead, try
                              let g:netrw_bufsettings="noma nomod nonu nobl nowrap ro rnu"
                            --
                            P20. How may I have gvim start up showing a directory listing?
                            Try putting the following code snippet into your .vimrc:
                            augroup VimStartup
                              au!
                              au VimEnter * if expand("%") == "" && argc() == 0 &&
                              \ (v:servername =~ 'GVIM\d*' || v:servername == "")
                              \ | e . | endif
                            augroup END
                            You may use Lexplore instead of "e" if you're so inclined.
                            This snippet assumes that you have client-server enabled
                            (ie. a "huge" vim version).
                            --
                            P21. I've made a directory (or file) with an accented character,
                            but netrw isn't letting me enter that directory/read that file:
                            --
                            Its likely that the shell or o/s is using a different encoding
                            than you have vim (netrw) using. A patch to vim supporting
                            "systemencoding" may address this issue in the future; for
                            now, just have netrw use the proper encoding. For example:
                            au FileType netrw set enc=latin1
                            --
                            P22. I get an error message when I try to copy or move a file:
                            **error** (netrw) tried using g:netrw_localcopycmd<cp>; it doesn't work!
                            What's wrong?
                            Netrw uses several system level commands to do things (see
                            |g:netrw_localcopycmd|, |g:netrw_localmovecmd|,
                            |g:netrw_localrmdir|, |g:netrw_mkdir_cmd|).
                            --
                            You may need to adjust the default commands for one or more of
                            these commands by setting them properly in your .vimrc. Another
                            source of difficulty is that these commands use vim's local
                            directory, which may not be the same as the browsing directory
                            shown by netrw (see |g:netrw_keepdir|).
                            ==============================================================================
                            11. Debugging Netrw Itself              *netrw-debug*
                            Step 1: check that the problem you've encountered hasn't already been resolved
                            by obtaining a copy of the latest (often developmental) netrw at:
                            --
                            http://www.drchip.org/astronaut/vim/index.html#NETRW
                            --
                            The <netrw.vim> script is typically installed on systems as something like:
                            /usr/local/share/vim/vim8x/plugin/netrwPlugin.vim
                            /usr/local/share/vim/vim8x/autoload/netrw.vim
                            (see output of :echo &rtp)
                            which is loaded automatically at startup (assuming :set nocp). If you
                            installed a new netrw, then it will be located at
                            --
                            $HOME/.vim/plugin/netrwPlugin.vim
                            $HOME/.vim/autoload/netrw.vim
                            Step 2: assuming that you've installed the latest version of netrw,
                            check that your problem is really due to netrw. Create a file
                            called netrw.vimrc with the following contents:
                            --
                            set nocp
                            so $HOME/.vim/plugin/netrwPlugin.vim
                            Then run netrw as follows:
                            --
                            vim -u netrw.vimrc --noplugins -i NONE [some path here]
                            Perform whatever netrw commands you need to, and check that the problem is
                            still present. This procedure sidesteps any issues due to personal .vimrc
                            settings, .viminfo file, and other plugins. If the problem does not appear,
                            then you need to determine which setting in your .vimrc is causing the
                            conflict with netrw or which plugin(s) is/are involved.
                            --
                            Step 3: If the problem still is present, then get a debugging trace from
                            netrw:
                            --
                            1. Get the <Decho.vim> script, available as:
                            http://www.drchip.org/astronaut/vim/index.html#DECHO
                               or
                            http://vim.sourceforge.net/scripts/script.php?script_id=120
                            Decho.vim is provided as a "vimball"; see |vimball-intro|.
                            --
                            2. Edit the <netrw.vim> file by typing:
                            --
                            vim netrw.vim
                            :DechoOn
                            :wq
                               To restore to normal non-debugging behavior, re-edit <netrw.vim>
                               and type
                            --
                            vim netrw.vim
                            :DechoOff
                            :wq
                               This command, provided by <Decho.vim>, will comment out all
                               Decho-debugging statements (Dfunc(), Dret(), Decho(), Dredir()).
                            --
                            3. Then bring up vim and attempt to evoke the problem by doing a
                               transfer or doing some browsing. A set of messages should appear
                               concerning the steps that <netrw.vim> took in attempting to
                               read/write your file over the network in a separate tab or
                               server vim window.
                            --
                               To save the file, use
                            --
                            :tabnext
                            :set bt=
                            :w! DBG
                            --
                            <      Furthermore, it'd be helpful if you would type
                            :Dsep <command>
                            <      where <command> is the command you're about to type next,
                               thereby making it easier to associate which part of the
                               debugging trace is due to which command.
                            --
                               Please send that information to <netrw.vim>'s maintainer along
                               with the o/s you're using and the vim version that you're using
                               (see |:version|)
                            NdrOchip at ScampbellPfamily.AbizM - NOSPAM
                            ==============================================================================
                            12. History                     *netrw-history*
                            --
                            v163:   Dec 05, 2017    * (Cristi Balan) reported that a setting ('sel')
                              was left changed
                            * (Holger Mitschke) reported a problem with
                              saving and restoring history. Fixed.
                            * Hopefully I fixed a nasty bug that caused a
                              file rename to wipe out a buffer that it
                              should not have wiped out.
                            * (Holger Mitschke) amended this help file
                              with additional |g:netrw_special_syntax|
                              items
                            v162:   Sep 19, 2016    * (haya14busa) pointed out two syntax errors
                              with a patch; these are now fixed.
                            Oct 26, 2016    * I started using mate-terminal and found that
                              x and gx (|netrw-x| and |netrw-gx|) were no
                              longer working. Fixed (using atril when
                              $DESKTOP_SESSION is "mate").
                            Nov 04, 2016    * (Martin Vuille) pointed out that @+ was
                              being restored with keepregstar rather than
                              keepregplus.
                            Nov 09, 2016    * Broke apart the command from the options,
                              mostly for Windows. Introduced new netrw
                              settings: |g:netrw_localcopycmdopt|
                              |g:netrw_localcopydircmdopt| |g:netrw_localmkdiropt|
                              |g:netrw_localmovecmdopt| |g:netrw_localrmdiropt|
                            Nov 21, 2016    * (mattn) provided a patch for preview; swapped
                              winwidth() with winheight()
                            Nov 22, 2016    * (glacambre) reported that files containing
                              spaces weren't being obtained properly via
                              scp. Fix: apparently using single quotes
                              such as with 'file name' wasn't enough; the
                              spaces inside the quotes also had to be
                              escaped (ie. 'file\ name').
                            * Also fixed obtain (|netrw-O|) to be able to
                              obtain files with spaces in their names
                            Dec 20, 2016    * (xc1427) Reported that using "I" (|netrw-I|)
                              when atop "Hiding" in the banner also caused
                              the active-banner hiding control to occur
                            Jan 03, 2017    * (Enno Nagel) reported that attempting to
                              apply netrw to a directory that was without
                              read permission caused a syntax error.
                            Jan 13, 2017    * (Ingo Karkat) provided a patch which makes
                              using netrw#Call() better. Now returns
                              value of internal routines return, for example.
                            Jan 13, 2017    * (Ingo Karkat) changed netrw#FileUrlRead to
                              use |:edit| instead of |:read|. I also
                              changed the routine name to netrw#FileUrlEdit.
                            Jan 16, 2017    * (Sayem) reported a problem where :Lexplore
                              could generate a new listing buffer and
                              window instead of toggling the netrw display.
                              Unfortunately, the directions for eliciting
                              the problem weren't complete, so I may or
                              may not have fixed that issue.
                            Feb 06, 2017    * Implemented cb and cB. Changed "c" to "cd".
                              (see |netrw-cb|, |netrw-cB|, and |netrw-cd|)
                            Mar 21, 2017    * previously, netrw would specify (safe) settings
                              even when the setting was already safe for
                              netrw. Netrw now attempts to leave such
                              already-netrw-safe settings alone.
                              (affects s:NetrwOptionRestore() and
                              s:NetrwSafeOptions(); also introduced
                              s:NetrwRestoreSetting())
                            Jun 26, 2017    * (Christian Brabandt) provided a patch to
                              allow curl to follow redirects (ie. -L
                              option)
                            Jun 26, 2017    * (Callum Howard) reported a problem with
                              :Lexpore not removing the Lexplore window
                              after a change-directory
                            Aug 30, 2017    * (Ingo Karkat) one cannot switch to the
                              previously edited file (e.g. with CTRL-^)
                              after editing a file:// URL. Patch to
                              have a "keepalt" included.
                            Oct 17, 2017    * (Adam Faryna) reported that gn (|netrw-gn|)
                              did not work on directories in the current
                              tree
                            v157:   Apr 20, 2016    * (Nicola) had set up a "nmap <expr> ..." with
                              a function that returned a 0 while silently
                              invoking a shell command. The shell command
                              activated a ShellCmdPost event which in turn
                              called s:LocalBrowseRefresh(). That looks
                              over all netrw buffers for changes needing
                              refreshes. However, inside a |:map-<expr>|,
                              tab and window changes are disallowed. Fixed.
                              (affects netrw's s:LocalBrowseRefresh())
                            * |g:netrw_localrmdir| not used any more, but
                              the relevant patch that causes |delete()| to
                              take over was #1107 (not #1109).
                            * |expand()| is now used on |g:netrw_home|;
                              consequently, g:netrw_home may now use
                              environment variables
                            * s:NetrwLeftmouse and s:NetrwCLeftmouse will
                              return without doing anything if invoked
                              when inside a non-netrw window
                            Jun 15, 2016    * gx now calls netrw#GX() which returns
                              the word under the cursor. The new
                              wrinkle: if one is in a netrw buffer,
                              then netrw's s:NetrwGetWord().
                            Jun 22, 2016    * Netrw was executing all its associated
                              Filetype commands silently; I'm going
                              to try doing that "noisily" and see if
                              folks have a problem with that.
                            Aug 12, 2016    * Changed order of tool selection for
                              handling http://... viewing.
                              (Nikolay Aleksandrovich Pavlov)
                            Aug 21, 2016    * Included hiding/showing/all for tree
                              listings
                            * Fixed refresh (^L) for tree listings
                            v156:   Feb 18, 2016    * Changed =~ to =~# where appropriate
                            Feb 23, 2016    * s:ComposePath(base,subdir) now uses
                              fnameescape() on the base portion
                            Mar 01, 2016    * (gt_macki) reported where :Explore would
                              make file unlisted. Fixed (tst943)
                            Apr 04, 2016    * (reported by John Little) netrw normally
                              suppresses browser messages, but sometimes
                              those "messages" are what is wanted.
                              See |g:netrw_suppress_gx_mesg|
                            Apr 06, 2016    * (reported by Carlos Pita) deleting a remote
                              file was giving an error message. Fixed.
                            Apr 08, 2016    * (Charles Cooper) had a problem with an
                              undefined b:netrw_curdir. He also provided
                              a fix.
                            Apr 20, 2016    * Changed s:NetrwGetBuffer(); now uses
                              dictionaries. Also fixed the "No Name"
                              buffer problem.
                            v155:   Oct 29, 2015    * (Timur Fayzrakhmanov) reported that netrw's
                              mapping of ctrl-l was not allowing refresh of
                              other windows when it was done in a netrw
                              window.
                            Nov 05, 2015    * Improved s:TreeSqueezeDir() to use search()
                              instead of a loop
                            * NetrwBrowse() will return line to
                              w:netrw_bannercnt if cursor ended up in
                              banner
                            Nov 16, 2015    * Added a <Plug>NetrwTreeSqueeze (|netrw-s-cr|)
                            Nov 17, 2015    * Commented out imaps -- perhaps someone can
                              tell me how they're useful and should be
                              retained?
                            Nov 20, 2015    * Added |netrw-ma| and |netrw-mA| support
                            Nov 20, 2015    * gx (|netrw-gx|) on a URL downloaded the
                              file in addition to simply bringing up the
                              URL in a browser. Fixed.
                            Nov 23, 2015    * Added |g:netrw_sizestyle| support
                            Nov 27, 2015    * Inserted a lot of <c-u>s into various netrw
                              maps.
                            Jan 05, 2016    * |netrw-qL| implemented to mark files based
                              upon |location-list|s; similar to |netrw-qF|.
                            Jan 19, 2016    * using - call delete(directoryname,"d") -
                              instead of using g:netrw_localrmdir if
                              v7.4 + patch#1107 is available
                            Jan 28, 2016    * changed to using |winsaveview()| and
                              |winrestview()|
                            Jan 28, 2016    * s:NetrwTreePath() now does a save and
                              restore of view
                            Feb 08, 2016    * Fixed a tree-listing problem with remote
                              directories
                            v154:   Feb 26, 2015    * (Yuri Kanivetsky) reported a situation where
                              a file was not treated properly as a file
                              due to g:netrw_keepdir == 1
                            Mar 25, 2015    * (requested by Ben Friz) one may now sort by
                              extension
                            Mar 28, 2015    * (requested by Matt Brooks) netrw has a lot
                              of buffer-local mappings; however, some
                              plugins (such as vim-surround) set up
                              conflicting mappings that cause vim to wait.
                              The "<nowait>" modifier has been included
                              with most of netrw's mappings to avoid that
                              delay.
                            Jun 26, 2015    * |netrw-gn| mapping implemted
                            * :Ntree NotADir resulted in having
                              the tree listing expand in the error messages
                              window. Fixed.
                            Jun 29, 2015    * Attempting to delete a file remotely caused
                              an error with "keepsol" mentioned; fixed.
                            Jul 08, 2015    * Several changes to keep the |:jumps| table
                              correct when working with
                              |g:netrw_fastbrowse| set to 2
                            * wide listing with accented characters fixed
                              (using %-S instead of %-s with a |printf()|
                            Jul 13, 2015    * (Daniel Hahler) CheckIfKde() could be true
                              but kfmclient not installed. Changed order
                              in netrw#BrowseX(): checks if kde and
                              kfmclient, then will use xdg-open on a unix
                              system (if xdg-open is executable)
                            Aug 11, 2015    * (McDonnell) tree listing mode wouldn't
                              select a file in a open subdirectory.
                            * (McDonnell) when multiple subdirectories
                              were concurrently open in tree listing
                              mode, a ctrl-L wouldn't refresh properly.
                            * The netrw:target menu showed duplicate
                              entries
                            Oct 13, 2015    * (mattn) provided an exception to handle
                              windows with shellslash set but no shell
                            Oct 23, 2015    * if g:netrw_usetab and <c-tab> now used
                              to control whether NetrwShrink is used
                              (see |netrw-c-tab|)
                            v153:   May 13, 2014    * added another |g:netrw_ffkeep| usage
                            May 14, 2014    * changed s:PerformListing() so that it
                              always sets ft=netrw for netrw buffers
                              (ie. even when syntax highlighting is
                              off, not available, etc)
                            May 16, 2014    * introduced the |netrw-ctrl-r| functionality
                            May 17, 2014    * introduced the |netrw-:NetrwMB| functionality
                            * mb and mB (|netrw-mb|, |netrw-mB|) will
                              add/remove marked files from bookmark list
                            May 20, 2014    * (Enno Nagel) reported that :Lex <dirname>
                              wasn't working. Fixed.
                            May 26, 2014    * restored test to prevent leftmouse window
                              resizing from causing refresh.
                              (see s:NetrwLeftmouse())
                            * fixed problem where a refresh caused cursor
                              to go just under the banner instead of
                              staying put
                            May 28, 2014    * (László Bimba) provided a patch for opening
                              the |:Lexplore| window 100% high, optionally
                              on the right, and will work with remote
                              files.
                            May 29, 2014    * implemented :NetrwC (see |netrw-:NetrwC|)
                            Jun 01, 2014    * Removed some "silent"s from commands used
                              to implemented scp://... and pscp://...
                              directory listing. Permits request for
                              password to appear.
                            Jun 05, 2014    * (Enno Nagel) reported that user maps "/"
                              caused problems with "b" and "w", which
                              are mapped (for wide listings only) to
                              skip over files rather than just words.
                            Jun 10, 2014    * |g:netrw_gx| introduced to allow users to
                              override default "<cfile>" with the gx
                              (|netrw-gx|) map
                            Jun 11, 2014    * gx (|netrw-gx|), with |'autowrite'| set,
                              will write modified files. s:NetrwBrowseX()
                              will now save, turn off, and restore the
                              |'autowrite'| setting.
                            Jun 13, 2014    * added visual map for gx use
                            Jun 15, 2014    * (Enno Nagel) reported that with having hls
                              set and wide listing style in use, that the
                              b and w maps caused unwanted highlighting.
                            Jul 05, 2014    * |netrw-mv| and |netrw-mX| commands included
                            Jul 09, 2014    * |g:netrw_keepj| included, allowing optional
                              keepj
                            Jul 09, 2014    * fixing bugs due to previous update
                            Jul 21, 2014    * (Bruno Sutic) provided an updated
                              netrw_gitignore.vim
                            Jul 30, 2014    * (Yavuz Yetim) reported that editing two
                              remote files of the same name caused the
                              second instance to have a "temporary"
                              name. Fixed: now they use the same buffer.
                            Sep 18, 2014    * (Yasuhiro Matsumoto) provided a patch which
                              allows scp and windows local paths to work.
                            Oct 07, 2014    * gx (see |netrw-gx|) when atop a directory,
                              will now do |gf| instead
                            Nov 06, 2014    * For cygwin: cygstart will be available for
                              netrw#BrowseX() to use if its executable.
                            Nov 07, 2014    * Began support for file://... urls. Will use
                              |g:netrw_file_cmd| (typically elinks or links)
                            Dec 02, 2014    * began work on having mc (|netrw-mc|) copy
                              directories. Works for linux machines,
                              cygwin+vim, but not for windows+gvim.
                            Dec 02, 2014    * in tree mode, netrw was not opening
                              directories via symbolic links.
                            Dec 02, 2014    * added resolved link information to
                              thin and tree modes
                            Dec 30, 2014    * (issue#231) |:ls| was not showing
                              remote-file buffers reliably. Fixed.
                            v152:   Apr 08, 2014    * uses the |'noswapfile'| option (requires
                              vim 7.4 with patch 213)
                            * (Enno Nagel) turn |'rnu'| off in netrw
                              buffers.
                            * (Quinn Strahl) suggested that netrw
                              allow regular window splitting to occur,
                              thereby allowing |'equalalways'| to take
                              effect.
                            * (qingtian zhao) normally, netrw will
                              save and restore the |'fileformat'|;
                              however, sometimes that isn't wanted
                            Apr 14, 2014    * whenever netrw marks a buffer as ro,
                              it will also mark it as nomod.
                            Apr 16, 2014    * sftp protocol now supported by
                              netrw#Obtain(); this means that one
                              may use "mc" to copy a remote file
                              to a local file using sftp, and that
                              the |netrw-O| command can obtain remote
                              files via sftp.
                            * added [count]C support (see |netrw-C|)
                            Apr 18, 2014    * when |g:netrw_chgwin| is one more than
                              the last window, then vertically split
                              the last window and use it as the
                              chgwin window.
                            May 09, 2014    * SavePosn was "saving filename under cursor"
                              from a non-netrw window when using :Rex.
                            v151:   Jan 22, 2014    * extended :Rexplore to return to buffer
                              prior to Explore or editing a directory
                            * (Ken Takata) netrw gave error when
                              clipboard was disabled. Sol'n: Placed
                              several if has("clipboard") tests in.
                            * Fixed ftp://X@Y@Z// problem; X@Y now
                              part of user id, and only Z is part of
                              hostname.
                            * (A Loumiotis) reported that completion
                              using a directory name containing spaces
                              did not work. Fixed with a retry in
                              netrw#Explore() which removes the
                              backslashes vim inserted.
                            Feb 26, 2014    * :Rexplore now records the current file
                               using w:netrw_rexfile when returning via
                              |:Rexplore|
                            Mar 08, 2014    * (David Kotchan) provided some patches
                              allowing netrw to work properly with
                              windows shares.
                            * Multiple one-liner help messages available
                              by pressing <cr> while atop the "Quick
                              Help" line
                            * worked on ShellCmdPost, FocusGained event
                              handling.
                            * |:Lexplore| path: will be used to update
                              a left-side netrw browsing directory.
                            Mar 12, 2014    * |netrw-s-cr|: use <s-cr> to close
                              tree directory implemented
                            Mar 13, 2014    * (Tony Mechylynck) reported that using
                              the browser with ftp on a directory,
                              and selecting a gzipped txt file, that
                              an E19 occurred (which was issued by
                              gzip.vim). Fixed.
                            Mar 14, 2014    * Implemented :MF and :MT (see |netrw-:MF|
                              and |netrw-:MT|, respectively)
                            Mar 17, 2014    * |:Ntree| [dir] wasn't working properly; fixed
                            Mar 18, 2014    * Changed all uses of set to setl
                            Mar 18, 2014    * Commented the netrw_btkeep line in
                              s:NetrwOptionSave(); the effect is that
                              netrw buffers will remain as |'bt'|=nofile.
                              This should prevent swapfiles being created
                              for netrw buffers.
                            Mar 20, 2014    * Changed all uses of lcd to use s:NetrwLcd()
                              instead. Consistent error handling results
                              and it also handles Window's shares
                            * Fixed |netrw-d| command when applied with ftp
                            * https: support included for netrw#NetRead()
                            v150:   Jul 12, 2013    * removed a "keepalt" to allow ":e #" to
                              return to the netrw directory listing
                            Jul 13, 2013    * (Jonas Diemer) suggested changing
                              a <cWORD> to <cfile>.
                            Jul 21, 2013    * (Yuri Kanivetsky) reported that netrw's
                              use of mkdir did not produce directories
                              following the user's umask.
                            Aug 27, 2013    * introduced |g:netrw_altfile| option
                            Sep 05, 2013    * s:Strlen() now uses |strdisplaywidth()|
                              when available, by default
                            Sep 12, 2013    * (Selyano Baldo) reported that netrw wasn't
                              opening some directories properly from the
                              command line.
                            Nov 09, 2013    * |:Lexplore| introduced
                            * (Ondrej Platek) reported an issue with
                              netrw's trees (P15). Fixed.
                            * (Jorge Solis) reported that "t" in
                              tree mode caused netrw to forget its
                              line position.
                            Dec 05, 2013    * Added <s-leftmouse> file marking
                              (see |netrw-mf|)
                            Dec 05, 2013    * (Yasuhiro Matsumoto) Explore should use
                              strlen() instead s:Strlen() when handling
                              multibyte chars with strpart()
                              (ie. strpart() is byte oriented, not
                              display-width oriented).
                            Dec 09, 2013    * (Ken Takata) Provided a patch; File sizes
                              and a portion of timestamps were wrongly
                              highlighted with the directory color when
                              setting `:let g:netrw_liststyle=1` on Windows.
                            * (Paul Domaskis) noted that sometimes
                              cursorline was activating in non-netrw
                              windows. All but one setting of cursorline
                              was done via setl; there was one that was
                              overlooked. Fixed.
                            Dec 24, 2013    * (esquifit) asked that netrw allow the
                              /cygdrive prefix be a user-alterable
                              parameter.
                            Jan 02, 2014    * Fixed a problem with netrw-based ballon
                              evaluation (ie. netrw#NetrwBaloonHelp()
                              not having been loaded error messages)
                            Jan 03, 2014    * Fixed a problem with tree listings
                            * New command installed: |:Ntree|
                            Jan 06, 2014    * (Ivan Brennan) reported a problem with
                              |netrw-P|. Fixed.
                            Jan 06, 2014    * Fixed a problem with |netrw-P| when the
                              modified file was to be abandoned.
                            Jan 15, 2014    * (Matteo Cavalleri) reported that when the
                              banner is suppressed and tree listing is
                              used, a blank line was left at the top of
                              the display. Fixed.
                            Jan 20, 2014    * (Gideon Go) reported that, in tree listing
                              style, with a previous window open, that
                              the wrong directory was being used to open
                              a file. Fixed. (P21)
                            v149:   Apr 18, 2013    * in wide listing format, now have maps for
                              w and b to move to next/previous file
                            Apr 26, 2013    * one may now copy files in the same
                              directory; netrw will issue requests for
                              what names the files should be copied under
                            Apr 29, 2013    * Trying Benzinger's problem again. Seems
                              that commenting out the BufEnter and
                              installing VimEnter (only) works. Weird
                              problem! (tree listing, vim -O Dir1 Dir2)
                            May 01, 2013    * :Explore ftp://... wasn't working. Fixed.
                            May 02, 2013    * introduced |g:netrw_bannerbackslash| as
                              requested by Paul Domaskis.
                            Jul 03, 2013    * Explore now avoids splitting when a buffer
                              will be hidden.
                            v148:   Apr 16, 2013    * changed Netrw's Style menu to allow direct
                              choice of listing style, hiding style, and
                              sorting style
                            --
                            ==============================================================================
                            13. Todo                        *netrw-todo*
                            --
                            07/29/09 : banner   :|g:netrw_banner| can be used to suppress the
                               suppression   banner. This feature is new and experimental,
                              so its in the process of being debugged.
                            09/04/09 : "gp"     : See if it can be made to work for remote systems.
                            : See if it can be made to work with marked files.
                            --
                            ==============================================================================
                            14. Credits                     *netrw-credits*
                            --
                            Vim editor  by Bram Moolenaar (Thanks, Bram!)
                            dav     support by C Campbell
                            fetch       support by Bram Moolenaar and C Campbell
                            ftp     support by C Campbell <NdrOchip@ScampbellPfamily.AbizM>
                            http        support by Bram Moolenaar <bram@moolenaar.net>
                            rcp
                            rsync       support by C Campbell (suggested by Erik Warendorph)
                            scp     support by raf <raf@comdyn.com.au>
                            sftp        support by C Campbell
                            --
                            inputsecret(), BufReadCmd, BufWriteCmd contributed by C Campbell
                            --
                            Jérôme Augé     -- also using new buffer method with ftp+.netrc
                            Bram Moolenaar      -- obviously vim itself, :e and v:cmdarg use,
                               fetch,...
                            Yasuhiro Matsumoto  -- pointing out undo+0r problem and a solution
                            Erik Warendorph     -- for several suggestions (g:netrw_..._cmd
                               variables, rsync etc)
                            Doug Claar      -- modifications to test for success with ftp
                               operation
                            --
                            ==============================================================================
                            Modelines:
                            vim:tw=78:ts=8:noet:ft=help:norl:fdm=marker
dired  @@
                Dired Reference Card
                  (based on Dired in GNU Emacs 29)
                  Commands marked with (DX) require dired-x
                Entering and Exiting Dired ----
                            .
                            .
                            run dired  c-x d
                            dired the directory of the file you are editing  c-x c-j (DX)
                            quit dired  q
                Motion Commands ----
                            .
                            .
                            move up to previous line  p
                            move down to next line  n
                            move up to previous directory line  <
                            move down to next directory line  >
                            move to next marked file  a-}
                            move to previous marked file  a-{
                            move up to previous subdirectory  ca-p
                            move down to next subdirectory  ca-n
                            move to parent directory  ^
                            move to first child subdirectory  ca-d
                Mouse Commands ----
                            .
                            .
                            visit file or directory  Mouse_Button_2
                Immediate Actions on Files ----
                            .
                            .
                            visit current file  f
                            view current file  v
                            visit current file in other window  o
                            create a new subdirectory  +
                            compare file at point with the one at mark  =
                Marking and Unmarking Files ----
                            .
                            .
                            mark a file or subdirectory for later commands  m
                            unmark a file or all files of a subdirectory  u
                            unmark all marked files in a buffer  a-del
                            mark files with a given extension * .
                            mark all directories * /
                            mark all symlinks * @
                            mark all executables * *
                            invert marking  t
                            mark all files in the current subdir * s
                            mark file names matching a regular expression * %
                            change the marks to a different character * c
                            mark files for which Elisp expression returns t * ( (DX)
                Modifying the Dired Buffer ----
                            .
                            .
                            insert a subdirectory into this buffer  i
                            remove marked files from the listing  k
                            remove a subdir listing  c-u k
                            re-read all directories (retains all marks)  g
                            toggle sorting of current subdir by name/date  s
                            edit ls switches  c-u s
                            recover marks, hidden lines, and such (undo)  c-_
                            hide all subdirectories  a-$
                            hide or unhide subdirectory  $
                Commands on Files Marked or Specified by the Prefix ----
                            .
                            .
                            copy file(s)  C
                            rename a file or move files to another directory  R
                            change ownership of file(s)  O
                            change the group of the file(s)  G
                            change mode of file(s)  M
                            print file(s)  P
                            convert filename(s) to lower case  % l
                            convert filename(s) to upper case  % u
                            delete marked (as opposed to flagged) file(s)  D
                            compress or uncompress file(s)  Z
                            run info on file  I (DX)
                            make symbolic link(s)  S
                            make relative symbolic link(s)  Y
                            make hard link(s)  H
                            search files for a regular expression  A
                            regexp query replace on marked files  Q
                            byte-compile file(s)  B
                            load file(s)  L
                            shell command on file(s)  !
                            asynchronous shell command on file(s)  &
                Flagging Files for Deletion ----
                            .
                            .
                              Unmark commands remove delete flags
                            flag file for deletion  d
                            flag all backup files (file names ending in ˜)  ~
                            flag all auto-save files  #
                            flag various intermediate files % &
                            flag numeric backups (ending in .˜1˜, .˜2˜, etc.)  .
                            execute the deletions requested (flagged files)  x
                            flag files matching a regular expression  % d
                Regular Expression Commands ----
                            .
                            .
                            mark filenames matching a regular expression  % m
                            copy marked files by regexp  % C
                            rename marked files by regexp  % R
                            hardlink  % H
                            symlink  % S
                            symlink, with relative paths  % Y
                            mark for deletion  % d
                Dired and Find ----
                            .
                            .
                            dired file(s) whose name matches a pattern M-x find-name-dired
                            dired file(s) that contain pattern M-x find-grep-dired
                            dired file(s) based on find output M-x find-dired
                Getting Help ----
                            .
                            .
                            dired help h
                            dired summary (short help) and error log ?
Evince
                    evince **(!)  (=cleaned minilist)

                    (open) / open copy / save copy  **       (c-o) / c-n / c-s

                    caret-navigation *          f7
                    presentation mode               f5
                     sidebar                 f9
                     (fullscreen             f11)
                    show menu               f10
                    (keyb.shortc.s          cs-+)
                    --
                    fit page * / fit width * / autom.zoom(?)       f / w / a(?)
                    toggle contin. pages / dual pages          c / d
                    --
                    rotate all pages          c-right/left

                    next / prev. page *         n / p
                    next / prev. visited **     a-n / a-p **(**)
                     ((home/end // c-home/end))

                    set bookm. / rm bookm. *    c-d / cs-d
                    post it-annotation *        s
                    highl. text *           c-h  #+annot.prop.s, rm annot.s (etc?)(*)

                    find // find next/prev.     c-f // c-g / cs-g
                                                        f3 / s-f3
emacs pdf-tools
                c-c c-l         store cliplink (=in reading list(??))
                --
                c-c c-a h       highlight w. yellow
                c-c c-a t       annot. w. text
                c-c c-a o       strikethrough text
                c-c c-a D       del. an annot.

                .   Emacs Pdf-Tools****  (+Org-Mode) {{{
                    https://github.com/politza/pdf-tools
                      https://emacsnotes.wordpress.com/2018/08/09/222/  #=older docview
                    https://github.com/politza/pdf-tools/tree/master/lisp
                          (=clone down + search/extract all 'define-key' *****)
                        eg. c-c c-c   commit, c-c c-q    abort,
                         c-c c-f, space
                            l   list annots
                            a   (dired?)
                            (d   display annot.s)
                            D   del
                            t   add text annot
                            m   markup annotation
                            s   squiggly
                            u   underline
                            o   strikeout
                            h   highlight
                         +Menus (=change colors etc)
                        annot **(*!)
                            https://github.com/politza/pdf-tools/blob/master/lisp/pdf-annot.el
                        cache
                        dev
                        history
                        info
                        isearch
                        links
                        loader
                        misc
                        occur
                        outline
                        sync
                        tools
                        util
                        view
                        virtual
Okular  @@@
                    Shortcuts for Okular
                    ~/Dropbox/rsc/Doks/Okular.pdf

                    About Backend
                    About KDE
                    About Okular
                Area Selection  c-3
                Auto Fit
                Back / Forward  sa-left / sa-right
                        Go to the place you were before / after
                    Beginning of the document
                        c-Home
                        Moves to the beginning of the document
                Browse  c-1
                    Change Colors
                    Change Dark & Light Colors
                    Change Paper Color
                    Close
                        c-w
                        Alternate: c-Esc
                    Close Find Bar  (@)
                        Esc
                    Color
                    Configure Annotations...
                    Configure Backends...
                    Configure Color Modes...
                    Configure Keyboard Shortcuts...
                        ca-,
                    Configure Language...
                Configure Okular...  cs-,
                    .
                    Configure Toolbars...
                Constrain Ratio and Angle of Annotation Tools
                    Continuous
                    Convert to Black & White
                    Copy
                        c-c
                        Alternate: c-Ins
                Digitally Sign...
                    Donate
                    Drawing Tool: Black
                    Drawing Tool: Blue
                    Drawing Tool: Green
                    Drawing Tool: Red
                    Drawing Tool: White
                    Drawing Tool: Yellow
                Embedded Files  [@]
                    End of the document
                        c-End
                        Moves to the end of the document
                    Export As
                    Facing Pages
                    Facing Pages (Center First Page)
                    Fill Color
                Find Action...  @(@)  ca-i
                Find Next / Previous  f3 / s-f3 @
                    Find...  @
                        c-f
                        Alternate: /
                    Fit Page
                    Fit Width
                Fit Window to Page  c-j
                    .
                    Font
                Full Screen Mode  @  cs-f
                    Go to Page...
                        c-g
                    Hide
                Import PostScript as PDF...  [@]
                    Invert Colors
                    Invert Lightness
                    Invert Luma (sRGB Linear)
                    Invert Luma (Symmetric)
                    Keep Active
                    Line width
                Magnifier  @  c-6
                    Main Toolbar
                    Next Page  @
                        Moves to the next page of the document
                Next Tab  @  c-PgDown
                        Alternate: c-]
                    Normal Colors
                    Okular Handbook
                        f1
                    Opacity
                    Open Containing Folder
                    Open Menu

                    Open Recent
                        Click to open a file, or
                        Click and hold to select a recent file
                    Open...
                        c-o

                    Original Orientation
                    Overview
                    Page Number
                Pause/Resume Speaking
                Play/Pause Presentation
                    .
                    Polygon
                Popup Note  a-7
                Presentation  @  cs-p
                    Previous Page
                        Moves to the previous page of the document
                    Previous Tab
                        c-PgUp
                        Alternate: c-[
                    Print-Preview
                    Print...
                        c-p
                    Properties
                        a-Enter
                Quick Annotation Bar
                Quick Annotation Toolbar
                    Quit
                        c-q
                    Redo
                        cs-z
                Reload  @  f5
                        Reload the current document from disk.
                        Alternate: Refresh
                    Rename Bookmark
                        Rename the current bookmark
                    Report Bug...
                    Rotate Left
                    Rotate Right
                    Save
                        c-s
                    Save As...
                        cs-s
                Scroll Down  @  s-down
                Scroll Page Down  @  Space
                    Scroll Page Up  @
                        s-Space
                    Scroll Up  @
                        s-up

                    Select All  (@)
                        c-a
                    Select All Text on Current Page

                    Share
                    Shift Hue Negative
                    Shift Hue Positive
                    Show Forms
                Show Menubar  c-m
                        Show Menubar
                        Shows the menubar again after it has been hidden
                    Show Page Bar
                Show/Hide Sidebar  @@  f7
                    Show Signatures Panel
                    Single Page
                    Speak Current Page
                    Speak Whole Document
                    Stop Speaking
                    Switch Blackscreen Mode
                        b
                Table Selection  c-5
                Text Selection  c-4
                    .
                    Trim Margins
                Trim To Selection
                Typewriter  a-5
                    Undo
                        c-z
                Undo close tab  cs-t
                    .
                    Use Right to Left Reading Direction
                What's This?  @  s-f1
                    .
                    Zoom
                Zoom  c-2
                    Zoom In
                        c_+
                        Alternate: c-=
                    Zoom Out
                        c_-
                Zoom to 100%  c-0
                Previous Bookmark
                        Go to the previous bookmark
                    Next Bookmark
                        Go to the next bookmark
                Add Bookmark  c-b
                Add to Quick Annotations  cs-b
                    Annotation Settings
                    Annotation Toolbar
                Annotations  f6
                Freehand Line  a-8
                Squiggle  a-3
                Underline  a-2
                Rectangle  a-0
                Highlighter  a-1
                    Erase Drawing
                    Ellipse
                Arrow  a-9
                Eraser
                Inline Note  a-6
                    .
                    Straight line
                Strike Out  a-4
Thunar
            make link       a_e,k
                .
                toggle sidebar      c-b
                toggle menubar      c-m
            file view / list view / stacked list view
                c-1 .. c-3   #+sort by time modified etc
                .
Dolphin
                ~/Dropbox/rsc/data/lists/ref/comp/dolphin-keybshortc-actions.txt
                ----
                A-Z
                    About Dolphin
                    This opens a window that informs you about the version, license, used libraries and maintainers of this application.
                About KDE
                    This opens a window with information about KDE. The KDE community are the people behind this free software.
                    If you like using this application but don't know about KDE or want to see a cute dragon have a look!
                Accessed
                Accessed
                Activate Last Tab
                    Main: a-0
                Activate Next Tab
                    Main: c-PgDown
                    Alternate: c-]
                Activate Previous Tab
                    Main: c-PgUp
                    Alternate: c-[
                Activate Tab 1-9
                    Main: a-1 - a-9
                Activate Tab 2
                    Main: a-2
                Activate Tab 3
                    Main: a-3
                Activate Tab 4
                    Main: a-4
                Activate Tab 5
                    Main: a-5
                Activate Tab 6
                    Main: a-6
                Activate Tab 7
                    Main: a-7
                Activate Tab 8
                    Main: a-8
                Activate Tab 9
                    Main: a-9
                Add Bookmark
                    Main: c-b
                Add to Places
                    This adds the selected folder to the Places
                    panel.
                    Adjust View Display Style...
                    This opens a window in which all folder view
                    properties can be adjusted.
                    1
                    Action Name
                    Shortcuts
                    Back
                    Main: a-left
                    Description
                    Return to the previously viewed folder.
                    Alternate: Back
                    Bookmark Tabs as Folder...
                    Close Tab
                    Main: c-w
                    Alternate: c-Esc
                    This closes the currently viewed tab. If no
                    more tabs are left this window will close
                    instead.
                    Comment
                    Comment
                    Compact
                    Main: c-2
                    This switches to a compact view mode that
                    lists the folders and files in columns with the
                    names beside the icons.
                    This helps to keep the overview in folders
                    with many items.
                    Compare Files
                    Configure Dolphin...
                    Main: cs-,
                    This opens a window where you can change
                    a multitude of settings for this application.
                    For an explanation of the various settings go
                    to the chapter Configuring Dolphin in
                    Help→Dolphin Handbook.
                    Configure Keyboard Shortcuts...
                    Main: ca-,
                    This opens a window that lists the keyboard
                    shortcuts.
                    There you can set up key combinations to
                    trigger an action when they are pressed
                    simultaneously. All commands in this
                    application can be triggered this way.
                    Configure Language...
                    With this you can change the language this
                    application uses.
                    You can even set secondary languages which
                    will be used if texts are not available in your
                    preferred language.
                    Configure Toolbars...
                    This opens a window in which you can
                    change which buttons appear on the Toolbar.
                    All items you see in the Control menu or in
                    the Menubar can also be placed on the
                    Toolbar.
                    Copy
                    Main: c-c
                    Alternate: c-Ins
                    This copies the items in your current
                    selection to the clipboard.
                    Use the Paste action afterwards to copy them
                    from the clipboard to a new location.
                    Cut, Copy and Paste work between many
                    applications and are among the most used
                    commands. That's why their keyboard
                    shortcuts are prominently placed right next to
                    each other on the keyboard: c-x, c-c
                    and c-v.
                    2
                    Action Name
                    Shortcuts
                    Description
                    Copy Location
                    Main: ca-c
                    This will copy the path of the first selected
                    item into the clipboard.
                    Copy to Inactive Split View
                    Main: s-f5
                    This copies the selected items from the active
                    view to the inactive split view.
                    Create Folder...
                    Main: f10
                    Created
                    Created
                    Cut
                    Main: c-x
                    This copies the items in your current
                    selection to the clipboard.
                    Use the Paste action afterwards to copy them
                    from the clipboard to a new location. The
                    items will be removed from their initial
                    location.
                    Cut, Copy and Paste work between many
                    applications and are among the most used
                    commands. That's why their keyboard
                    shortcuts are prominently placed right next to
                    each other on the keyboard: c-x, c-c
                    and c-v.
                    Delete
                    Main: s-Del
                    Delete (using shortcut for Trash)
                    Main: Del
                    Details
                    Main: c-3
                    This deletes the items in your current
                    selection completely. They can not be
                    recovered by normal means.
                    This switches to a list view mode that focuses
                    on folder and file details.
                    Click on a detail in the column header to sort
                    the items by it. Click again to sort the other
                    way around. To select which details should
                    be displayed click the header with the right
                    mouse button.
                    You can view the contents of a folder without
                    leaving the current location by clicking to the
                    left of it. This way you can view the contents
                    of multiple folders in the same list.
                    Dolphin Handbook
                    Main: f1
                    This opens the Handbook for this application.
                    It provides explanations for every part of
                    Dolphin.
                    If you want more elaborate introductions to
                    the diﬀerent features of Dolphin go to the
                    KDE UserBase Wiki.
                    Donate
                    This opens a web page where you can donate
                    to support the continued work on this
                    application and many other projects by the
                    KDE community.
                    3
                    Action Name
                    Shortcuts
                    Description
                    Donating is the easiest and fastest way to
                    efficiently support KDE and its projects. KDE
                    projects are available for free therefore your
                    donation is needed to cover things that
                    require money like servers, contributor
                    meetings, etc.
                    KDE e.V. is the non-profit organization behind
                    the KDE community.
                    Duplicate Here
                    Main: c-d
                    Edit Bookmarks...
                    Editable Location
                    Main: f6
                    Filter...
                    Main:
                    This toggles the Location Bar to be editable
                    so you can directly enter a location you want
                    to go to.
                    You can also switch to editing by clicking to
                    the right of the location and switch back by
                    confirming the edited location.
                    c-i
                    Alternate: /
                    Find Action…
                    Main: ca-i
                    Focus Terminal Panel
                    Main: cs-f4
                    Folders
                    Main: f7
                    This opens the Filter Bar at the bottom of the
                    window.
                    There you can enter a text to filter the files
                    and folders currently displayed. Only those
                    that contain the text in their name will be
                    kept in view.
                    This toggles the folders panel at the left side
                    of the window.
                    It shows the folders of the file system in a tree
                    view.
                    Folders First
                    Forward
                    Main: a-right
                    This undoes a Go→Back action.
                    Alternate: Forward
                    Hidden Files Last
                    Home
                    Main: a-home
                    Alternate: Home Page
                    Icons
                    Main: c-1
                    Go to your ‘Home’ folder.
                    Every user account has their own ‘Home’ that
                    contains their data including folders that
                    contain personal application data.
                    This switches to a view mode that focuses on
                    the folder and file icons. This mode makes it
                    easy to distinguish folders from files and to
                    detect items with distinctive file types.
                    This mode is handy to browse through
                    pictures when the Preview option is enabled.
                    4
                    Action Name
                    Shortcuts
                    Description
                    Information
                    Main: f11
                    This toggles the information panel at the
                    right side of the window.
                    The panel provides in-depth information
                    about the items your mouse is hovering over
                    or about the selected items. Otherwise it
                    informs you about the currently viewed
                    folder.
                    For single items a preview of their contents is
                    provided.
                    Invert Selection
                    Main: cs-a
                    This selects all objects that you have
                    currently not selected instead.
                    Move to Inactive Split View
                    Main: s-f6
                    This moves the selected items from the active
                    view to the inactive split view.
                    Move to Trash
                    Main: Del
                    This moves the items in your current
                    selection to the ‘Trash’.
                    The trash is a temporary storage where items
                    can be deleted from if disk space is needed.
                    Location Bar
                    Modified
                    Modified
                    Name
                    New Tab
                    Main: c-t
                    Alternate: cs-n
                    New Window
                    This opens a new Tab with the current
                    location and view.
                    A tab is an additional view within this
                    window. You can drag and drop items
                    between tabs.
                    Main: c-n
                    This opens a new window just like this one
                    with the current location and view.
                    You can drag and drop items between
                    windows.
                    Main: cs-f
                    This opens a preferred search tool for the
                    viewed location.
                    Open in New Tab
                    Open in New Tabs
                    Open in New Window
                    Open Menu
                    Open Preferred Search Tool
                    Use More Search Tools menu to configure it.
                    Open Terminal
                    Main: s-f4
                    This opens a terminal application for the
                    viewed location.
                    To learn more about terminals use the help
                    in the terminal application.
                    Paste Clipboard Contents...
                    Main: c-v
                    This copies the items from your clipboard to
                    the currently viewed folder.
                    5
                    Action Name
                    Shortcuts
                    Description
                    Alternate: s-Ins
                    If the items were added to the clipboard by
                    the Cut action they are removed from their
                    old location.
                    Cut, Copy and Paste work between many
                    applications and are among the most used
                    commands. That's why their keyboard
                    shortcuts are prominently placed right next to
                    each other on the keyboard: c-x, c-c
                    and c-v.
                    Places
                    This toggles the places panel at the left side
                    of the window.
                    Main: f9
                    It allows you to go to locations you have
                    bookmarked and to access disk or media
                    attached to the computer or to the network.
                    It also contains sections to find recently
                    saved files or files of a certain type.
                    Properties
                    Main: a-Return
                    Alternate: a-Enter
                    Quit
                    Main: c-q
                    This shows a complete list of properties of
                    the currently selected items in a new window.
                    If nothing is selected the window will be
                    about the currently viewed folder instead.
                    You can configure advanced options there
                    like managing read- and write-permissions.
                    This closes this window.
                    Rating
                    Rating
                    Refresh
                    Main: f5
                    Alternate: Refresh
                    Rename...
                    Main: f2
                    This renames the items in your current
                    selection.
                    Renaming multiple items at once amounts to
                    their new names diﬀering only in a number.
                    Replace Location
                    Main: c-l
                    This switches to editing the location and
                    selects it so you can quickly enter a diﬀerent
                    location.
                    Report Bug...
                    This opens a window that will guide you
                    through reporting errors or ﬂaws in this
                    application or in other KDE software.
                    Reset Zoom Level
                    Main: c-0
                    This resets the icon size to default.
                    Search...
                    Main: c-f
                    This helps you find files and folders by
                    opening a find bar. There you can enter
                    search terms and specify settings to find the
                    objects you are looking for.
                    Use this help again on the find bar so we can
                    have a look at it while the settings are
                    6
                    Action Name
                    Shortcuts
                    Description
                    explained.
                    Select All
                    Main: c-a
                    This selects all files and folders in the current
                    location.
                    Show Hidden Files
                    Main:
                    When this is enabled hidden files and folders
                    are visible. They will be displayed semitransparent.
                    c-h
                    Alternate: a-.
                    Hidden items only diﬀer from other ones in
                    that their name starts with a ".". In general
                    there is no need for users to access them
                    which is why they are hidden.
                    Show in Groups
                    Show Menubar
                    This groups files and folders by their first
                    letter.
                    Main: c-m
                    Show Previews
                    This switches between having a Menubar and
                    having a Control button. Both contain mostly
                    the same commands and configuration
                    options.
                    When this is enabled, the icons are based on
                    the actual file or folder contents.
                    For example the icons of images become
                    scaled down versions of the images.
                    Show Target
                    Show Toolbar
                    Size
                    Size
                    Split
                    Main: f3
                    This splits the folder view below into two
                    autonomous views.
                    This way you can see two locations at once
                    and move items between them quickly.
                    Click this again afterwards to recombine the
                    views.
                    Stash
                    Main: c-s
                    Stop
                    This stops the loading of the contents of the
                    current folder.
                    Tags
                    Tags
                    Terminal
                    Main: f4
                    This toggles the terminal panel at the bottom
                    of the window.
                    The location in the terminal will always match
                    the folder view so you can navigate using
                    either.
                    The terminal panel is not needed for basic
                    computer usage but can be useful for
                    7
                    Action Name
                    Shortcuts
                    Description
                    advanced tasks. To learn more about
                    terminals use the help in a standalone
                    terminal application like Konsole.
                    Toggle Filter Bar
                    This opens the Filter Bar at the bottom of the
                    window.
                    There you can enter a text to filter the files
                    and folders currently displayed. Only those
                    that contain the text in their name will be
                    kept in view.
                    Toggle Search Bar
                    This helps you find files and folders by
                    opening a find bar. There you can enter
                    search terms and specify settings to find the
                    objects you are looking for.
                    Use this help again on the find bar so we can
                    have a look at it while the settings are
                    explained.
                    Type
                    Type
                    Undo
                    Main: c-z
                    This undoes the last change you made to
                    files or folders.
                    Such changes include creating, renaming and
                    moving them to a diﬀerent location or to the
                    ‘Trash’.
                    Changes that can't be undone will ask for
                    your confirmation.
                    Undo close tab
                    Main: cs-t
                    This returns you to the previously closed tab.
                    Unlock Panels
                    Up
                    This switches between having panels locked
                    or unlocked.
                    Unlocked panels can be dragged to the other
                    side of the window and have a close button.
                    Locked panels are embedded more cleanly.
                    Main: a-up
                    Go to the folder that contains the currently
                    viewed one.
                    All files and folders are organized in a
                    hierarchical file system. At the top of this
                    hierarchy is a directory that contains all data
                    connected to this computer - the root
                    directory.
                    View Mode
                    What's This?
                    Main: s-f1
                    This is the button that invokes the help
                    feature you are using right now! Click it, then
                    click any component of this application to
                    ask "What's this?" about it. The mouse cursor
                    will change appearance if no help is available
                    for a spot.
                    There are two other ways to get help for this
                    8
                    Action Name
                    Shortcuts
                    Description
                    application: The Dolphin Handbook in the Help
                    menu and the KDE UserBase Wiki article about
                    File Management online.
                    The "What's this?" help is missing in most
                    other windows so don't get too used to this.
                    Z-A
                    Zoom In
                    Main: c_+
                    This increases the icon size.
                    Alternate: c_=
                    Zoom Out
                    Main: c_-
                    This reduces the icon size.
                    9

